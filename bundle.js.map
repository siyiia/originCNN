{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/stores.js","../src/utils/cnn.js","../src/detail-view/DetailviewUtils.js","../src/detail-view/Dataview.svelte","../src/detail-view/KernelMathView.svelte","../src/detail-view/ConvolutionAnimator.svelte","../src/detail-view/Convolutionview.svelte","../src/detail-view/ActivationAnimator.svelte","../src/detail-view/Activationview.svelte","../src/detail-view/PoolAnimator.svelte","../src/detail-view/Poolview.svelte","../src/detail-view/Softmaxview.svelte","../src/overview/Modal.svelte","../src/detail-view/HyperparameterDataview.svelte","../src/detail-view/HyperparameterAnimator.svelte","../src/detail-view/Hyperparameterview.svelte","../src/article/Youtube.svelte","../src/article/Article.svelte","../src/utils/cnn-tf.js","../src/config.js","../src/overview/draw-utils.js","../src/overview/overview-draw.js","../src/overview/intermediate-utils.js","../src/overview/intermediate-draw.js","../src/overview/flatten-draw.js","../src/overview/Overview.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nexport const cnnStore = writable([]);\nexport const svgStore = writable(undefined);\n\nexport const vSpaceAroundGapStore = writable(undefined);\nexport const hSpaceAroundGapStore = writable(undefined);\n\nexport const nodeCoordinateStore = writable([]);\nexport const selectedScaleLevelStore = writable(undefined);\n\nexport const cnnLayerRangesStore = writable({});\nexport const cnnLayerMinMaxStore = writable([]);\n\nexport const needRedrawStore = writable([undefined, undefined]);\n\nexport const detailedModeStore = writable(true);\n\nexport const shouldIntermediateAnimateStore = writable(false);\n\nexport const isInSoftmaxStore = writable(false);\nexport const softmaxDetailViewStore = writable({});\nexport const allowsSoftmaxAnimationStore = writable(false);\n\nexport const hoverInfoStore = writable({});\n\nexport const modalStore = writable({});\n\nexport const intermediateLayerPositionStore = writable({});","// Enum of node types\nconst nodeType = {\n  INPUT: 'input',\n  CONV: 'conv',\n  POOL: 'pool',\n  RELU: 'relu',\n  FC: 'fc',\n  FLATTEN: 'flatten'\n}\n\nclass Node {\n  /**\n   * Class structure for each neuron node.\n   * \n   * @param {string} layerName Name of the node's layer.\n   * @param {int} index Index of this node in its layer.\n   * @param {string} type Node type {input, conv, pool, relu, fc}. \n   * @param {number} bias The bias assocated to this node.\n   * @param {[[number]]} output Output of this node.\n   */\n  constructor(layerName, index, type, bias, output) {\n    this.layerName = layerName;\n    this.index = index;\n    this.type = type;\n    this.bias = bias;\n    this.output = output;\n\n    // Weights are stored in the links\n    this.inputLinks = [];\n    this.outputLinks = [];\n  }\n}\n\nclass Link {\n  constructor(source, dest, weight) {\n    this.source = source;\n    this.dest = dest;\n    this.weight = weight;\n  }\n}\n\nconst constructNNFromJSON = (nnJSON, inputImageArray) => {\n  console.log(nnJSON);\n  console.log(inputImageArray);\n  let nn = [];\n\n  // Add the first layer (input layer)\n  let inputLayer = [];\n  let inputShape = nnJSON[0].input_shape;\n\n  // First layer's three nodes' outputs are the channels of inputImageArray\n  for (let i = 0; i < inputShape[2]; i++) {\n    let node = new Node('input', i, nodeType.INPUT, 0, inputImageArray[i]);\n    inputLayer.push(node);\n  }\n                                                                                                                   \n  nn.push(inputLayer);\n  let curLayerIndex = 1;\n\n  nnJSON.forEach(layer => {\n    let curLayerNodes = [];\n    let curLayerType;\n\n    if (layer.name.includes('conv')) {\n      curLayerType = nodeType.CONV;\n    } else if (layer.name.includes('pool')) {\n      curLayerType = nodeType.POOL;\n    } else if (layer.name.includes('relu')) {\n      curLayerType = nodeType.RELU;\n    } else if (layer.name.includes('output')) {\n      curLayerType = nodeType.FC;\n    } else if (layer.name.includes('flatten')) {\n      curLayerType = nodeType.FLATTEN;\n    } else {\n      console.log('Find unknown type');\n    }\n\n    let shape = layer.output_shape.slice(0, 2);\n    let bias = 0;\n    let output;\n    if (curLayerType === nodeType.FLATTEN || curLayerType === nodeType.FC) {\n      output = 0;\n    } else {\n      output = init2DArray(shape[0], shape[1], 0);\n    }\n\n    // Add neurons into this layer\n    for (let i = 0; i < layer.num_neurons; i++) {\n      if (curLayerType === nodeType.CONV || curLayerType === nodeType.FC) {\n        bias = layer.weights[i].bias;\n      }\n      let node = new Node(layer.name, i, curLayerType, bias, output)\n\n      // Connect this node to all previous nodes (create links)\n      if (curLayerType === nodeType.CONV || curLayerType === nodeType.FC) {\n        // CONV and FC layers have weights in links. Links are one-to-multiple\n        for (let j = 0; j < nn[curLayerIndex - 1].length; j++) {\n          let preNode = nn[curLayerIndex - 1][j];\n          let curLink = new Link(preNode, node, layer.weights[i].weights[j]);\n          preNode.outputLinks.push(curLink);\n          node.inputLinks.push(curLink);\n        }\n      } else if (curLayerType === nodeType.RELU || curLayerType === nodeType.POOL) {\n        // RELU and POOL layers have no weights. Links are one-to-one\n        let preNode = nn[curLayerIndex - 1][i];\n        let link = new Link(preNode, node, null);\n        preNode.outputLinks.push(link);\n        node.inputLinks.push(link);\n      } else if (curLayerType === nodeType.FLATTEN) {\n        // Flatten layer has no weights. Links are multiple-to-one.\n        // Use dummy weights to store the corresponding entry in the previsou\n        // node as (row, column)\n        // The flatten() in tf2.keras has order: channel -> row -> column\n        let preNodeWidth = nn[curLayerIndex - 1][0].output.length,\n          preNodeNum = nn[curLayerIndex - 1].length,\n          preNodeIndex = i % preNodeNum,\n          preNodeRow = Math.floor(Math.floor(i / preNodeNum) / preNodeWidth),\n          preNodeCol = Math.floor(i / preNodeNum) % preNodeWidth,\n          link = new Link(nn[curLayerIndex - 1][preNodeIndex],\n            node, [preNodeRow, preNodeCol]);\n\n        nn[curLayerIndex - 1][preNodeIndex].outputLinks.push(link);\n        node.inputLinks.push(link);\n      }\n      curLayerNodes.push(node);\n    }\n\n    // Add current layer to the NN\n    nn.push(curLayerNodes);\n    curLayerIndex++;\n  });\n\n  return nn;\n}\n\nexport const constructNN = (inputImageFile) => {\n  // Load the saved model file\n  return new Promise((resolve, reject) => {\n    fetch('PUBLIC_URL/assets/data/nn_10.json')\n      .then(response => {\n        response.json().then(nnJSON => {\n          getInputImageArray(inputImageFile)\n            .then(inputImageArray => {\n              let nn = constructNNFromJSON(nnJSON, inputImageArray);\n              resolve(nn);\n            })\n        });\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n}\n\n// Helper functions\n\n/**\n * Create a 2D array (matrix) with given size and default value.\n * \n * @param {int} height Height (number of rows) for the matrix\n * @param {int} width Width (number of columns) for the matrix\n * @param {int} fill Default value to fill this matrix\n */\nexport const init2DArray = (height, width, fill) => {\n  let array = [];\n  // Itereate through rows\n  for (let r = 0; r < height; r++) {\n    let row = new Array(width).fill(fill);\n    array.push(row);\n  }\n  return array;\n}\n\n/**\n * Dot product of two matrices.\n * @param {[[number]]} mat1 Matrix 1\n * @param {[[number]]} mat2 Matrix 2\n */\nconst matrixDot = (mat1, mat2) => {\n  console.assert(mat1.length === mat2.length, 'Dimension not matching');\n  console.assert(mat1[0].length === mat2[0].length, 'Dimension not matching');\n\n  let result = 0;\n  for (let i = 0; i < mat1.length; i++){\n    for (let j = 0; j < mat1[0].length; j++){\n      result += mat1[i][j] * mat2[i][j];\n    }\n  }\n  \n  return result;\n}\n\n/**\n * Matrix elementwise addition.\n * @param {[[number]]} mat1 Matrix 1\n * @param {[[number]]} mat2 Matrix 2\n */\nexport const matrixAdd = (mat1, mat2) => {\n  console.assert(mat1.length === mat2.length, 'Dimension not matching');\n  console.assert(mat1[0].length === mat2[0].length, 'Dimension not matching');\n\n  let result = init2DArray(mat1.length, mat1.length, 0);\n\n  for (let i = 0; i < mat1.length; i++) {\n    for (let j = 0; j < mat1.length; j++) {\n      result[i][j] = mat1[i][j] + mat2[i][j];\n    }\n  }\n\n  return result;\n}\n\n/**\n * 2D slice on a matrix.\n * @param {[[number]]} mat Matrix\n * @param {int} xs First dimension (row) starting index\n * @param {int} xe First dimension (row) ending index\n * @param {int} ys Second dimension (column) starting index\n * @param {int} ye Second dimension (column) ending index\n */\nexport const matrixSlice = (mat, xs, xe, ys, ye) => {\n  return mat.slice(xs, xe).map(s => s.slice(ys, ye));\n}\n\n/**\n * Compute the maximum of a matrix.\n * @param {[[number]]} mat Matrix\n */\nconst matrixMax = (mat) => {\n  let curMax = -Infinity;\n  for (let i = 0; i < mat.length; i++) {\n    for (let j = 0; j < mat[0].length; j++) {\n      if (mat[i][j] > curMax) {\n        curMax = mat[i][j];\n      }\n    }\n  }\n  return curMax;\n}\n\n/**\n * Convert canvas image data into a 3D array with dimension [height, width, 3].\n * Each pixel is in 0-255 scale.\n * @param {[int8]} imageData Canvas image data\n */\nconst imageDataTo3DArray = (imageData) => {\n  // Get image dimension (assume square image)\n  let width = Math.sqrt(imageData.length / 4);\n\n  // Create array placeholder for each channel\n  let imageArray = [init2DArray(width, width, 0), init2DArray(width, width, 0),\n    init2DArray(width, width, 0)];\n  \n  // Iterate through the data to fill out channel arrays above\n  for (let i = 0; i < imageData.length; i++) {\n    let pixelIndex = Math.floor(i / 4),\n      channelIndex = i % 4,\n      row = Math.floor(pixelIndex / width),\n      column = pixelIndex % width;\n    \n    if (channelIndex < 3) {\n      imageArray[channelIndex][row][column] = imageData[i];\n    }\n  }\n\n  return imageArray;\n}\n\n/**\n * Get the 3D pixel value array of the given image file.\n * @param {string} imgFile File path to the image file\n * @returns A promise with the corresponding 3D array\n */\nconst getInputImageArray = (imgFile) => {\n  let canvas = document.createElement('canvas');\n  canvas.style.cssText = 'display:none;';\n  document.getElementsByTagName('body')[0].appendChild(canvas);\n  let context = canvas.getContext('2d');\n\n  return new Promise((resolve, reject) => {\n    let inputImage = new Image();\n    inputImage.src = imgFile;\n    inputImage.onload = () => {\n      context.drawImage(inputImage, 0, 0,);\n      // Get image data and convert it to a 3D array\n      let imageData = context.getImageData(0, 0, inputImage.width,\n        inputImage.height).data;\n\n      // Remove this newly created canvas element\n      canvas.parentNode.removeChild(canvas);\n\n      console.log(imageDataTo3DArray(imageData));\n      resolve(imageDataTo3DArray(imageData));\n    }\n    inputImage.onerror = reject;\n  })\n}\n\n/**\n * Compute convolutions of one kernel on one matrix (one slice of a tensor).\n * @param {[[number]]} input Input, square matrix\n * @param {[[number]]} kernel Kernel weights, square matrix\n * @param {int} stride Stride size\n * @param {int} padding Padding size\n */\nexport const singleConv = (input, kernel, stride=1, padding=0) => {\n  // TODO: implement padding\n\n  // Only support square input and kernel\n  console.assert(input.length === input[0].length,\n     'Conv input is not square');\n  console.assert(kernel.length === kernel[0].length,\n    'Conv kernel is not square');\n\n  let stepSize = (input.length - kernel.length) / stride + 1;\n\n  let result = init2DArray(stepSize, stepSize, 0);\n\n  // Window sliding\n  for (let r = 0; r < stepSize; r++) {\n    for (let c = 0; c < stepSize; c++) {\n      let curWindow = matrixSlice(input, r * stride, r * stride + kernel.length,\n        c * stride, c * stride + kernel.length);\n      let dot = matrixDot(curWindow, kernel);\n      result[r][c] = dot;\n    }\n  }\n  return result;\n}\n\n/**\n * Convolution operation. This function update the outputs property of all nodes\n * in the given layer. Previous layer is accessed by the reference in nodes'\n * links.\n * @param {[Node]} curLayer Conv layer.\n */\nconst convolute = (curLayer) => {\n  console.assert(curLayer[0].type === 'conv', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  curLayer.forEach(node => {\n    /*\n     * Accumulate the single conv result matrices from previous channels.\n     * Previous channels (node) are accessed by the reference in Link objects.\n     */\n    let newOutput = init2DArray(node.output.length, node.output.length, 0);\n\n    for (let i = 0; i < node.inputLinks.length; i++) {\n      let curLink = node.inputLinks[i];\n      let curConvResult = singleConv(curLink.source.output, curLink.weight);\n      newOutput = matrixAdd(newOutput, curConvResult);\n    }\n\n    // Add bias to all element in the output\n    let biasMatrix = init2DArray(newOutput.length, newOutput.length, node.bias);\n    newOutput = matrixAdd(newOutput, biasMatrix);\n\n    node.output = newOutput;\n  })\n}\n\n/**\n * Activate matrix mat using ReLU (max(0, x)).\n * @param {[[number]]} mat Matrix\n */\nconst singleRelu = (mat) => {\n  // Only support square matrix\n  console.assert(mat.length === mat[0].length, 'Activating non-square matrix!');\n\n  let width = mat.length;\n  let result = init2DArray(width, width, 0);\n\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < width; j++) {\n      result[i][j] = Math.max(0, mat[i][j]);\n    }\n  }\n  return result;\n}\n\n/**\n * Update outputs of all nodes in the current ReLU layer. Values of previous\n * layer nodes are accessed by the links stored in the current layer.\n * @param {[Node]} curLayer ReLU layer\n */\nconst relu = (curLayer) => {\n  console.assert(curLayer[0].type === 'relu', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    curNode.output = singleRelu(preNode.output);\n  }\n}\n\n/**\n * Max pool one matrix.\n * @param {[[number]]} mat Matrix\n * @param {int} kernelWidth Pooling kernel length (only supports 2)\n * @param {int} stride Pooling sliding stride (only supports 2)\n * @param {string} padding Pading method when encountering odd number mat,\n * currently this function only supports 'VALID'\n */\nexport const singleMaxPooling = (mat, kernelWidth=2, stride=2, padding='VALID') => {\n  console.assert(kernelWidth === 2, 'Only supports kernen = [2,2]');\n  console.assert(stride === 2, 'Only supports stride = 2');\n  console.assert(padding === 'VALID', 'Only support valid padding');\n\n  // Handle odd length mat\n  // 'VALID': ignore edge rows and columns\n  // 'SAME': add zero padding to make the mat have even length\n  if (mat.length % 2 === 1 && padding === 'VALID') {\n    mat = matrixSlice(mat, 0, mat.length - 1, 0, mat.length - 1);\n  }\n\n  let stepSize = (mat.length - kernelWidth) / stride + 1;\n  let result = init2DArray(stepSize, stepSize, 0);\n\n  for (let r = 0; r < stepSize; r++) {\n    for (let c = 0; c < stepSize; c++) {\n      let curWindow = matrixSlice(mat, r * stride, r * stride + kernelWidth,\n        c * stride, c * stride + kernelWidth);\n      result[r][c] = matrixMax(curWindow);\n    }\n }\n return result;\n}\n\n/**\n * Max pooling one layer.\n * @param {[Node]} curLayer MaxPool layer\n */\nconst maxPooling = (curLayer) => {\n  console.assert(curLayer[0].type === 'pool', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    curNode.output = singleMaxPooling(preNode.output);\n  }\n}\n\n/**\n * Flatten a previous 2D layer (conv2d or maxpool2d). The flatten order matches\n * tf2.keras' implementation: channel -> row -> column.\n * @param {[Node]} curLayer Flatten layer\n */\nconst flatten = (curLayer) => {\n  console.assert(curLayer[0].type === 'flatten', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    let coordinate = curNode.inputLinks[0].weight;\n    // Take advantage of the dummy weights\n    curNode.output = preNode.output[coordinate[0]][coordinate[1]];\n  }\n}\n\nconst fullyConnect = (curLayer) => {\n  console.assert(curLayer[0].type === 'fc', 'Wrong layer type');\n  // TODO\n}\n\nexport const tempMain = async () => {\n  let nn = await constructNN('PUBLIC_URL/assets/img/koala.jpeg');\n  convolute(nn[1]);\n  relu(nn[2])\n  convolute(nn[3]);\n  relu(nn[4]);\n  maxPooling(nn[5]);\n  convolute(nn[6]);\n  relu(nn[7])\n  convolute(nn[8]);\n  relu(nn[9]);\n  maxPooling(nn[10]);\n  convolute(nn[11]);\n  relu(nn[12])\n  convolute(nn[13]);\n  relu(nn[14]);\n  maxPooling(nn[15]);\n  flatten(nn[16]);\n  console.log(nn[16].map(d => d.output));\n}","import { matrixSlice } from '../utils/cnn.js';\n\nexport function array1d(length, f) {\n  return Array.from({length: length}, f ? ((v, i) => f(i)) : undefined);\n}\n\nfunction array2d(height, width, f) {\n  return Array.from({length: height}, (v, i) => Array.from({length: width}, f ? ((w, j) => f(i, j)) : undefined));\n}\n\nexport function generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation) {\n  const outputMapping = array2d(output.length, output.length, (i, j) => array2d(kernelLength, kernelLength));\n  for (let h_out = 0; h_out < output.length; h_out++) {\n    for (let w_out = 0; w_out < output.length; w_out++) {\n      for (let h_kern = 0; h_kern < kernelLength; h_kern++) {\n        for (let w_kern = 0; w_kern < kernelLength; w_kern++) {\n          const h_im = h_out * stride + h_kern * dilation;\n          const w_im = w_out * stride + w_kern * dilation;\n          outputMapping[h_out][w_out][h_kern][w_kern] = h_im * padded_input_size + w_im;\n        }\n      }\n    }\n  }\n  return outputMapping;\n}\n\nexport function compute_input_multiplies_with_weight(hoverH, hoverW, \n                                              padded_input_size, weight_dims, outputMappings, kernelLength) {\n  \n  const [h_weight, w_weight] = weight_dims;\n  const input_multiplies_with_weight = array1d(padded_input_size * padded_input_size);\n  for (let h_weight = 0; h_weight < kernelLength; h_weight++) {\n    for (let w_weight = 0; w_weight < kernelLength; w_weight++) {\n      const flat_input = outputMappings[hoverH][hoverW][h_weight][w_weight];\n      if (typeof flat_input === \"undefined\") continue;\n      input_multiplies_with_weight[flat_input] = [h_weight, w_weight];\n    }\n  }\n  return input_multiplies_with_weight;\n}\n\nexport function getMatrixSliceFromInputHighlights(matrix, highlights, kernelLength) {\n  var indices = highlights.reduce((total, value, index) => {\n  if (value != undefined) total.push(index);\n    return total;\n  }, []);\n  return matrixSlice(matrix, Math.floor(indices[0] / matrix.length), Math.floor(indices[0] / matrix.length) + kernelLength, indices[0] % matrix.length, indices[0] % matrix.length + kernelLength);\n}\n\nexport function getMatrixSliceFromOutputHighlights(matrix, highlights) {\n  var indices = highlights.reduce((total, value, index) => {\n  if (value != false) total.push(index);\n    return total;\n  }, []);\n  return matrixSlice(matrix, Math.floor(indices[0] / matrix.length), Math.floor(indices[0] / matrix.length) + 1, indices[0] % matrix.length, indices[0] % matrix.length + 1);\n}\n\n// Edit these values to change size of low-level conv visualization.\nexport function getVisualizationSizeConstraint(imageLength) {\n  let sizeOfGrid = 150;\n  let maxSizeOfGridCell = 20;\n  return sizeOfGrid / imageLength > maxSizeOfGridCell ? maxSizeOfGridCell : sizeOfGrid / imageLength;\n}\n\nexport function getDataRange(image) {\n  let maxRow = image.map(function(row){ return Math.max.apply(Math, row); });\n  let max = Math.max.apply(null, maxRow);\n  let minRow = image.map(function(row){ return Math.min.apply(Math, row); });\n  let min = Math.min.apply(null, minRow);\n  let range = {\n    range: 2 * Math.max(Math.abs(min), Math.abs(max)),\n    min: min,\n    max: max\n  };\n  return range;\n}\n\nexport function gridData(image, constraint=getVisualizationSizeConstraint(image.length)) {\n  // Constrain grids based on input image size.\n  var data = new Array();\n  var xpos = 1;\n  var ypos = 1;\n  var width = constraint;\n  var height = constraint;\n  for (var row = 0; row < image.length; row++) {\n    data.push( new Array() );\n    for (var column = 0; column < image[0].length; column++) {\n      data[row].push({\n        text: Math.round(image[row][column] * 100) / 100,\n        row: row,\n        col: column,\n        x: xpos,\n        y: ypos,\n        width: width,\n        height: height\n      })\n      xpos += width;\n    }\n    xpos = 1;\n    ypos += height; \n  }\n  return data;\n}","<script>\n  export let data;\n  export let highlights;\n  export let isKernelMath;\n  export let constraint;\n  export let dataRange;\n  export let outputLength = undefined;\n  export let stride = undefined;\n  export let colorScale = d3.interpolateRdBu;\n  export let isInputLayer = false;\n\n  import { onMount } from 'svelte';\n  import { onDestroy } from 'svelte';\n  import { beforeUpdate, afterUpdate } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  let grid_final;\n  const textConstraintDivisor = 2.6;\n  const standardCellColor = \"ddd\";\n  const dispatch = createEventDispatcher();\n\n  let oldHighlight = highlights;\n  let oldData = data;\n\n  const redraw = () => {\n    d3.select(grid_final).selectAll(\"#grid > *\").remove();\n    const constrainedSvgSize = data.length * constraint + 2;\n    var grid = d3.select(grid_final).select(\"#grid\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n      .append(\"svg\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n    var row = grid.selectAll(\".row\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n    var column = row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter().append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x; })\n      .attr(\"y\", function(d) { return d.y; })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .style(\"opacity\", 0.8)\n      .style(\"fill\", function(d) {\n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        return colorScale(normalizedValue);\n      })\n      .on('mouseover', function(d) {\n        if (data.length != outputLength) {\n          dispatch('message', {\n            hoverH: Math.min(Math.floor(d.row / stride), outputLength - 1),\n            hoverW: Math.min(Math.floor(d.col / stride), outputLength - 1)\n          });\n        } else {\n          dispatch('message', {\n            hoverH: Math.min(Math.floor(d.row / 1), outputLength - 1),\n            hoverW: Math.min(Math.floor(d.col / 1), outputLength - 1)\n          });\n        }\n      });\n    if (isKernelMath) {\n      var text = row.selectAll(\".text\")\n        .data(function(d) { return d; })\n        .enter().append(\"text\")\n        .attr(\"class\",\"text\")\n        .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n        .attr(\"x\", function(d) { return d.x + d.width / 2; })\n        .attr(\"y\", function(d) { return d.y + d.height / 2; })\n        .style(\"fill\", function(d) {\n        let normalizedValue = d.text;\n          if (isInputLayer){\n            normalizedValue = 1 - d.text;\n          } else {\n            normalizedValue = (d.text + dataRange / 2) / dataRange;\n          }\n          if (normalizedValue < 0.2 || normalizedValue > 0.8) {\n            return 'white';\n          } else {\n            return 'black';\n          }\n        })\n        .style(\"text-anchor\", \"middle\")\n        .style(\"dominant-baseline\", \"middle\")\n        .text(function(d) {\n          return d.text.toString().replace('-', '－');\n        })\n    }\n  }\n\n  afterUpdate(() => {\n    if (data != oldData) {\n      redraw();\n      oldData = data;\n    }\n\n    if (highlights != oldHighlight) {\n      var grid = d3.select(grid_final).select('#grid').select(\"svg\")\n      grid.selectAll(\".square\")\n        .style(\"stroke\", (d) => isKernelMath || (highlights.length && highlights[d.row * data.length + d.col]) ? \"black\" : null )\n      oldHighlight = highlights;\n    }\n\n  });\n\n  onMount(() => {\n    redraw();\n  });\n\n</script>\n\n<div style=\"display: inline-block; vertical-align: middle;\" class=\"grid\"\n  bind:this={grid_final}>\n  <svg id=\"grid\" width=100% height=100%></svg>\n</div>","<script>\n  export let data;\n  export let kernel;\n  export let constraint;\n  export let dataRange;\n  export let kernelRange;\n  export let colorScale = d3.interpolateRdBu;\n  export let kernelColorScale = d3.interpolateBrBG;\n  export let isInputLayer = false;\n\n  import { onMount } from 'svelte';\n  import { afterUpdate } from 'svelte';\n\n  let gridFinal;\n  let legendFinal;\n  const textConstraintDivisor = 2.6;\n  const multiplicationSymbolPadding = Math.floor(constraint / 3);\n\n  let oldData = data;\n  let oldKernel = kernel;\n\n  // Legend drawn similarly to legends in overview/intermediate-view.\n  const addOverlayGradient = (gradientID, stops, group) => {\n    if (group === undefined) {\n      group = svg;\n    }\n\n    // Create a gradient\n    let defs = group.append(\"defs\")\n      .attr('class', 'overlay-gradient');\n\n    let gradient = defs.append(\"linearGradient\")\n      .attr(\"id\", gradientID)\n      .attr(\"x1\", \"0%\")\n      .attr(\"x2\", \"100%\")\n      .attr(\"y1\", \"100%\")\n      .attr(\"y2\", \"100%\");\n    \n    stops.forEach(s => {\n      gradient.append('stop')\n        .attr('offset', s.offset)\n        .attr('stop-color', s.color)\n        .attr('stop-opacity', s.opacity);\n    })\n  }\n\n  // Draw the legend for intermediate layer\n  const redrawDetailedConvViewLegend = (arg) => {\n    let legendHeight = arg.legendHeight,\n      range = arg.range,\n      minMax = arg.minMax,\n      width = arg.width,\n      colorScale = arg.colorScale,\n      gradientGap = arg.gradientGap;\n\n    d3.select(legendFinal).selectAll(\"#legend > *\").remove();\n    let legend = d3.select(legendFinal).select(\"#legend\")\n      .attr(\"width\", 150 + \"px\")\n      .attr(\"height\", 25 + \"px\")\n      .attr(\"align\",\"center\")\n      .style(\"dominant-baseline\", \"middle\");\n    let detailedViewKernel = legend.append('g')\n      .attr('transform', `translate(10, 0)`);\n    \n    if (colorScale === undefined) { colorScale = layerColorScales.conv; }\n    if (gradientGap === undefined) { gradientGap = 0; }\n    \n    // Add a legend color gradient\n    let gradientName = `url(#detailed-kernel-gradient)`;\n    let normalizedColor = v => colorScale(v * (1 - 2 * gradientGap) + gradientGap);\n\n    let leftValue = (minMax.min + range / 2) / range,\n      zeroValue = (0 + range / 2) / range,\n      rightValue = (minMax.max + range / 2) / range,\n      totalRange = minMax.max - minMax.min,\n      zeroLocation = (0 - minMax.min) / totalRange,\n      leftMidValue = leftValue + (zeroValue - leftValue)/2,\n      rightMidValue = zeroValue + (rightValue - zeroValue)/2;\n\n    let stops = [\n      {offset: 0, color: normalizedColor(leftValue), opacity: 1},\n      {offset: zeroLocation / 2,\n        color: normalizedColor(leftMidValue),\n        opacity: 1},\n      {offset: zeroLocation,\n        color: normalizedColor(zeroValue),\n        opacity: 1},\n      {offset: zeroLocation + (1 - zeroValue) / 2,\n        color: normalizedColor(rightMidValue),\n        opacity: 1},\n      {offset: 1, color: normalizedColor(rightValue), opacity: 1}\n    ];\n\n    addOverlayGradient(`detailed-kernel-gradient`, stops, detailedViewKernel);\n\n    let legendScale = d3.scaleLinear()\n      .range([0, width - 1.2])\n      .domain([minMax.min, minMax.max]);\n\n    let legendAxis = d3.axisBottom()\n      .scale(legendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([minMax.min, 0, minMax.max]);\n    \n    let detailedLegend = detailedViewKernel.append('g')\n      .attr('id', `detailed-legend-0`)\n    \n    let legendGroup = detailedLegend.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(legendAxis);\n    \n    legendGroup.selectAll('text')\n      .style('font-size', '9px')\n      .style('fill', \"black\");\n    \n    legendGroup.selectAll('path, line')\n      .style('stroke', \"black\");\n\n    detailedLegend.append('rect')\n      .attr('width', width)\n      .attr('height', legendHeight)\n      .style('fill', gradientName);\n  }\n\n  // Draw the elementwise dot-product math.\n  const redraw = () => {\n    d3.select(gridFinal).selectAll(\"#grid > *\").remove();\n    const constrainedSvgSize = kernel ? 2 * (data.length * constraint) + 2 : data.length * constraint + 2;\n    var grid = d3.select(gridFinal).select(\"#grid\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n      .append(\"svg\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n    var row = grid.selectAll(\".row\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n    \n    var columns = row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter();\n    // Draw cells for slice from input matrix.\n    columns.append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding : d.x * 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y : d.y * 2 })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .style(\"opacity\", 0.5)\n      .style(\"fill\", function(d) { \n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        return colorScale(normalizedValue); \n      })\n      .style(\"stroke\", \"black\");\n    // Draw cells for the kernel.\n    columns.append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding: d.x * 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height : d.y * 2 + d.height })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height / 2; })\n      .style(\"opacity\", 0.5)\n      // Same colorscale as is used for the flatten layers.\n      .style(\"fill\", function(d) { \n        let normalizedValue = (kernel[d.row][d.col].text + kernelRange.range / 2) / kernelRange.range;\n        const gap = 0.2;\n        let normalizedValueWithGap = normalizedValue * (1 - 2 * gap) + gap;\n        return kernelColorScale(normalizedValueWithGap); \n      })\n\n    var texts = row.selectAll(\".text\")\n      .data(function(d) { return d; })\n      .enter();\n    // Draw numbers from input matrix slice.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height / 2 : d.y * 2 + d.height / 2 })\n      .style(\"fill\", function(d) { \n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        if (normalizedValue < 0.2 || normalizedValue > 0.8) {\n          if (isInputLayer && normalizedValue < 0.2) {\n            return 'black';\n          } \n          return 'white';\n        } else {\n          return 'black';\n        }\n      })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return d.text; })\n    // Attempted to use FontAwesome icons for the 'x', '+', and '=', but none of these strategies work: https://github.com/FortAwesome/Font-Awesome/issues/12268\n    // Draw 'x' to signify multiplication.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / (textConstraintDivisor)) + \"px\")\n      .attr('font-weight', 600)\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding / 2: d.x * 2 + multiplicationSymbolPadding / 2})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height + (d.height / 4) : d.y * 2 + d.height + (d.height / 4) })\n      .style(\"fill\", \"black\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return '×' })\n    // Draw kernel values.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height + (d.height / 4) : d.y * 2 + d.height + (d.height / 4) })\n      .style(\"fill\", function(d) { \n        let normalizedValue = (kernel[d.row][d.col].text + kernelRange.range / 2) / kernelRange.range;\n        const gap = 0.2;\n        let normalizedValueWithGap = normalizedValue * (1 - 2 * gap) + gap;\n        if (normalizedValueWithGap < 0.2 || normalizedValueWithGap > 0.8) {\n          return 'white';\n        } else {\n          return 'black';\n        }\n      })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return kernel[d.row][d.col].text; })\n    // Draw '+' to signify the summing of products except for the last kernel cell where '=' is drawn.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / (textConstraintDivisor - 1)) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height / 2 : d.y * 2 + d.height / 2 })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return d.row == kernel.length - 1 && d.col == kernel.length - 1 ? '=' : '+'; })\n    }\n\n  afterUpdate(() => {\n    if (data != oldData) {\n      redraw();\n      oldData = data;\n    }\n    if (kernel != oldKernel) {\n      /*\n      redrawDetailedConvViewLegend({\n          legendHeight: 5,\n          range: kernelRange.range,\n          minMax: {min: kernelRange.min, max: kernelRange.max},\n          width: 130,\n          colorScale: kernelColorScale,\n          gradientGap: 0.35,\n      });\n      */\n      oldKernel = kernel;\n    }\n  });\n\n  onMount(() => {\n    redraw();\n    /*\n    redrawDetailedConvViewLegend({\n          legendHeight: 5,\n          range: kernelRange.range,\n          minMax: {min: kernelRange.min, max: kernelRange.max},\n          width: 130,\n          colorScale: kernelColorScale,\n          gradientGap: 0.35,\n    });\n    */\n  });\n\n</script>\n\n<div class=\"legend\"\n  bind:this={legendFinal}>\n  <!-- <svg id=\"legend\" width=100% height=100%></svg> -->\n</div>\n\n<div class=\"grid\"\n  bind:this={gridFinal}>\n  <svg id=\"grid\" width=100% height=100%></svg>\n</div>","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    compute_input_multiplies_with_weight, getDataRange,\n    getVisualizationSizeConstraint, generateOutputMappings,\n    getMatrixSliceFromInputHighlights, gridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n  import KernelMathView from './KernelMathView.svelte';\n  // image: nxn array -- prepadded.\n  // kernel: mxm array.\n  // stride: int\n  export let stride;\n  export let dilation\n  export let kernel;\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n  export let colorScale;\n  export let isInputInputLayer = false;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  // Dummy data for original state of component.\n  let testInputMatrixSlice = [];\n  for (let i = 0; i < kernel.length; i++) {\n    testInputMatrixSlice.push([]);\n    for (let j = 0; j < kernel.length; j++) {\n      testInputMatrixSlice[i].push(0)\n    }\n  }\n  testInputMatrixSlice = gridData(testInputMatrixSlice)\n  let testOutputMatrixSlice = gridData([0]);\n\n  let inputHighlights = [];\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = [];\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n\n  let counter;\n  // lots of replication between mouseover and start-conv. TODO: fix this.\n  function startConvolution(stride) {\n    counter = 0;\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, padded_input_size, dilation);\n    if (stride <= 0) return;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernel.length, outputMappings, kernel.length)\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernel.length);\n      testInputMatrixSlice = gridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      testOutputMatrixSlice = gridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, padded_input_size, dilation);\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernel.length, outputMappings, kernel.length)\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernel.length);\n    testInputMatrixSlice = gridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    testOutputMatrixSlice = gridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startConvolution(stride);\n  let testImage = gridData(image)\n  let testOutput = gridData(output)\n  let testKernel = gridData(kernel)\n  $ : {\n    startConvolution(stride);\n    testImage = gridData(image)\n    testOutput = gridData(output)\n    testKernel = gridData(kernel)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({image.length}, {image[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)}\n      dataRange={dataRange} stride={stride} colorScale={colorScale}\n      isInputLayer={isInputInputLayer}/>\n</div>\n<div class=\"column has-text-centered\">\n  <KernelMathView data={testInputMatrixSlice} kernel={testKernel} constraint={getVisualizationSizeConstraint(kernel.length)}\n                  dataRange={dataRange} kernelRange={getDataRange(kernel)} colorScale={colorScale}\n                  isInputLayer={isInputInputLayer}/>\n  <Dataview data={testOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernel.length)} dataRange={dataRange}/>\n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({output.length}, {output[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights} isKernelMath={false}\n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={stride}/>\n</div>","<script>\n\timport ConvolutionAnimator from './ConvolutionAnimator.svelte';\n  import { singleConv } from '../utils/cnn.js';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let kernel;\n  export let dataRange;\n  export let colorScale = d3.interpolateRdBu;\n  export let isInputInputLayer = false;\n  export let isExited = false;\n  // export let output;\n  \n  const dispatch = createEventDispatcher();\n\tlet stride = 1;\n  const dilation = 1;\n  var isPaused = false;\n  var outputFinal = singleConv(input, kernel, stride);\n  $: if (stride > 0) {\n    try { \n      outputFinal = singleConv(input, kernel, stride);\n    } catch {\n      console.log(\"Cannot handle stride of \" + stride);\n    }\n  }\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-convolution`);\n    scroll.animateScroll(anchor);\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    isExited = true;\n    dispatch('message', {\n      text: isExited\n    });\n  }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\" id=\"detailview-container\">\n\n    <!-- old stride input -->\n    <!-- <div class=\"columns is-mobile\">\n      <div class=\"column is-half is-offset-one-quarter\">\n        <div class=\"field is-grouped\">\n          <p class=\"control is-expanded\">\n            <input class=\"input\" type=\"text\" placeholder=\"Stride\" bind:value={stride} />\n          </p>\n          <p class=\"control\">\n            <button class=\"button is-success\" on:click={handleClickPause}>\n              Toggle Movement\n            </button>\n          </p>\n        </div>\n      </div>\n    </div> -->\n\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n\n        <div class=\"title-text\">\n          Convolution\n        </div>\n\n        <div class=\"buttons\">\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n            <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"container is-centered\">\n        <ConvolutionAnimator on:message={handlePauseFromInteraction} \n          kernel={kernel} image={input} output={outputFinal} \n          stride={stride} dilation={dilation} isPaused={isPaused}\n          dataRange={dataRange} colorScale={colorScale}\n          isInputInputLayer={isInputInputLayer} />\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\n        <div class=\"annotation-text\">\n          <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\n        </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    getVisualizationSizeConstraint, getMatrixSliceFromInputHighlights, gridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  let gridInputMatrixSlice = gridData([[0]]);\n  let gridOutputMatrixSlice = gridData([[0]]);\n  let inputHighlights = array1d(image.length * image.length, (i) => true);\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = array1d(image.length * image.length, (i) => true);\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n\n  let counter;\n\n  // lots of replication between mouseover and start-relu. TODO: fix this.\n  function startRelu() {\n    counter = 0;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      inputHighlights = array1d(image.length * image.length, (i) => undefined);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights[animatedH * output.length + animatedW] = true;\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, 1);\n      gridInputMatrixSlice = gridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      gridOutputMatrixSlice = gridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = array1d(image.length * image.length, (i) => undefined);\n    inputHighlights[animatedH * output.length + animatedW] = true;\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, 1);\n    gridInputMatrixSlice = gridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    gridOutputMatrixSlice = gridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startRelu();\n  let gridImage = gridData(image)\n  let gridOutput = gridData(output)\n  $ : {\n    startRelu();\n    gridImage = gridData(image)\n    gridOutput = gridData(output)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({image.length}, {image[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={gridImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)} dataRange={dataRange} stride={1}/>  \n</div>\n<div class=\"column has-text-centered\">\n  <span>\n    max(\n    <Dataview data={gridData([[0]])} highlights={outputHighlights} isKernelMath={true} \n    constraint={20} dataRange={dataRange}/>\n    ,\n    <Dataview data={gridInputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n    constraint={20} dataRange={dataRange}/>\n    )\n    =\n    <Dataview data={gridOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={20} dataRange={dataRange}/>\n  </span> \n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({output.length}, {output[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={gridOutput} highlights={outputHighlights} isKernelMath={false} \n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={1}/>\n</div>","<script>\n\timport ActivationAnimator from './ActivationAnimator.svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let output;\n  export let dataRange;\n  export let isExited;\n\n  const dispatch = createEventDispatcher();\n  let isPaused = false;\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    dispatch('message', {\n      text: true\n    });\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-relu`);\n    scroll.animateScroll(anchor);\n  }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\">\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n\n        <div class=\"title-text\">\n          ReLU Activation\n        </div>\n\n        <div class=\"buttons\">\n\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n              <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"container is-centered is-vcentered\">\n        <ActivationAnimator on:message={handlePauseFromInteraction} \n          image={input} output={output} isPaused={isPaused}\n          dataRange={dataRange}/>\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\n        <div class=\"annotation-text\">\n          <span style=\"font-weight:600\">Hover over</span> the matrices to change pixel.\n        </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    compute_input_multiplies_with_weight, getVisualizationSizeConstraint,\n    generateOutputMappings, getMatrixSliceFromInputHighlights, gridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n\n  export let stride;\n  export let dilation\n  export let kernelLength;\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  // Dummy data for original state of component.\n  let testInputMatrixSlice = [];\n  for (let i = 0; i < kernelLength; i++) {\n    testInputMatrixSlice.push([]);\n    for (let j = 0; j < kernelLength; j++) {\n      testInputMatrixSlice[i].push(0)\n    }\n  }\n  testInputMatrixSlice = gridData(testInputMatrixSlice)\n  let testOutputMatrixSlice = gridData([[0]]);\n\n  let inputHighlights = [];\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = [];\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n  \n  let counter;\n\n  // lots of replication between mouseover and start-pool. TODO: fix this.\n  function startMaxPool(stride) {\n    counter = 0;\n    let outputMappings = generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation);\n    if (stride <= 0) return;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernelLength, outputMappings, kernelLength)\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernelLength);\n      testInputMatrixSlice = gridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      testOutputMatrixSlice = gridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    let outputMappings = generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation);\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernelLength, outputMappings, kernelLength)\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernelLength);\n    testInputMatrixSlice = gridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    testOutputMatrixSlice = gridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startMaxPool(stride);\n  let testImage = gridData(image)\n  let testOutput = gridData(output)\n  $ : {\n    startMaxPool(stride);\n    testImage = gridData(image)\n    testOutput = gridData(output)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({testImage.length}, {testImage[0].length})\n  </div>\n\n  <Dataview on:message={handleMouseover} data={testImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)} dataRange={dataRange} stride={stride}/>  \n</div>\n<div class=\"column has-text-centered\">\n  <span>\n    max(\n    <Dataview data={testInputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernelLength)} dataRange={dataRange}/>\n    )\n    =\n    <Dataview data={testOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernelLength)} dataRange={dataRange}/>\n  </span> \n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({testOutput.length}, {testOutput[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights} isKernelMath={false} \n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={stride}/>\n</div>","<script>\n\timport PoolAnimator from './PoolAnimator.svelte';\n  import { singleMaxPooling } from '../utils/cnn.js';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let kernelLength;\n  export let dataRange;\n  export let isExited;\n  \n  const dispatch = createEventDispatcher();\n  // let isExited = false;\n\tlet stride = 2;\n  const dilation = 1;\n  var isPaused = false;\n  var outputFinal = singleMaxPooling(input);\n  // let dragging = false;\n  // let dragInfo = {x1: 0, x2: 0, y1: 0, y2: 0};\n  // let detailView = d3.select('#detailview').node();\n  $: if (stride > 0) {\n    try { \n      outputFinal = singleMaxPooling(input);\n    } catch {\n      console.log(\"Cannot handle stride of \" + stride);\n    }\n  }\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n    console.log(isPaused)\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    dispatch('message', {\n      text: true\n    });\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-pooling`);\n    scroll.animateScroll(anchor);\n  }\n\n  // Test dragging detail view, need more work\n  // const detailViewDragStart = (e) => {\n  //   // Record the starting pos\n  //   dragInfo.x1 = 0;\n  //   dragInfo.y1 = 0;\n  //   dragInfo.x2 = e.clientX;\n  //   dragInfo.y2 = e.clientY;\n  \n  //   dragging = true;\n  // }\n\n  // const detailViewDragEnd = (e) => {\n  //   dragging = false;\n  // }\n\n  // const detailViewDragMove = (e) => {\n  //   // Add up move to the starting pos\n  //   dragInfo.x1 = dragInfo.x2 - e.clientX;\n  //   dragInfo.y1 = dragInfo.y2 - e.clientY;\n  //   dragInfo.x2 = e.clientX;\n  //   dragInfo.y2 = e.clientY;\n\n  //   // Move detail view\n  //   detailView.style.top = (detailView.offsetTop - dragInfo.y1) + 'px';\n  //   detailView.style.left = (detailView.offsetLeft - dragInfo.x1) + 'px';\n  // }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\">\n\n    <!-- old stride input -->\n    <!-- <div class=\"columns is-mobile\">\n      <div class=\"column is-half is-offset-one-quarter\">\n        <div class=\"field is-grouped\">\n          <p class=\"control is-expanded\">\n            <input class=\"input\" type=\"text\" placeholder=\"Stride\" bind:value={stride} />\n          </p>\n          <p class=\"control\">\n            <button class=\"button is-success\" on:click={handleClickPause}>\n              Toggle Movement\n            </button>\n          </p>\n        </div>\n      </div>\n    </div> -->\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n      \n        <div class=\"title-text\">\n          Max Pooling\n        </div>\n\n        <div class=\"buttons\">\n\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n            <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"container is-centered is-vcentered\">\n        <PoolAnimator on:message={handlePauseFromInteraction} \n          kernelLength={kernelLength} image={input} output={outputFinal} \n          stride={stride} dilation={dilation} isPaused={isPaused}\n          dataRange={dataRange} />\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\n          <div class=\"annotation-text\">\n            <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\n          </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { onMount, afterUpdate, createEventDispatcher } from 'svelte';\n  export let logits;\n  export let logitColors;\n  export let selectedI;\n  export let highlightI = -1;\n  export let outputName;\n  export let outputValue;\n  export let startAnimation;\n\n  let softmaxViewComponent;\n  let svg = null;\n  const dispatch = createEventDispatcher();\n  const formater = (n, d) => {\n    if (d === undefined) {\n      return d3.format('.2f')(n);\n    } else {\n      return d3.format(`.${d}f`)(n);\n    }\n  }\n\n  $: highlightI, (() => {\n    if (svg !== null) {\n      svg.selectAll(`.formula-term`)\n        .style('text-decoration', 'none')\n        .style('font-weight', 'normal');\n\n      svg.selectAll(`.formula-term-${highlightI}`)\n      .style('font-weight', 'bold')\n      .style('text-decoration', 'underline');\n    }\n  })();\n\n  $: startAnimation, (() => {\n    if (svg !== null) {\n      svg.select(`.formula-term-${startAnimation.i}`)\n        .transition('softmax-edge')\n        .duration(startAnimation.duration)\n        .style('fill-opacity', 1);\n    }\n  })();\n\n  const mouseOverHandler = (d, i, g, curI) => {\n    highlightI = curI;\n    dispatch('mouseOver', {curI: curI});\n  }\n\n  const mouseLeaveHandler = (d, i, g, curI) => {\n    highlightI = -1;\n    dispatch('mouseLeave', {curI: curI});\n  }\n\n  const handleClickX = () => {\n    dispatch('xClicked', {});\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-softmax`);\n    scroll.animateScroll(anchor);\n  }\n\n  onMount(() => {\n    svg = d3.select(softmaxViewComponent)\n      .select('#softmax-svg');\n\n    let formulaRightGroup = svg.append('g')\n      .attr('class', 'formula-right')\n      .attr('transform', `translate(${10}, ${0})`)\n      .style('font-size', '15px');\n\n    // Denominator\n    let denominatorGroup = formulaRightGroup.append('g')\n      .attr('class', 'denominator')\n      .attr('transform', `translate(${0}, ${58})`);\n      \n    // Add the left (\n    denominatorGroup.append('text')\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('fill', 'gray')\n      .text('(');\n\n    // Need to loop through the logits array instead of data-binding because\n    // we want dynamic positioning based on prior '-' occurance\n    let curX = 8;\n    let numOfRows = 4;\n\n    logits.forEach((d, i) => {\n      if (i / numOfRows >= 1 && i % numOfRows === 0) {\n          curX = 8;\n      }\n\n      let curText = denominatorGroup.append('text')\n        .attr('x', curX)\n        .attr('y', Math.floor(i / numOfRows) * 20)\n        .style('cursor', 'crosshair')\n        .style('pointer-events', 'all')\n        .on('mouseover', (d, n, g) => mouseOverHandler(d, n, g, i))\n        .on('mouseleave', (d, n, g) => mouseLeaveHandler(d, n, g, i))\n        .text(`exp(`);\n      \n      curText.append('tspan')\n        .attr('class', `formula-term-${i} formula-term`)\n        .attr('dx', '1')\n        .style('fill', logitColors[i])\n        .style('fill-opacity', (i === selectedI) || startAnimation.hasInitialized ? 1 : 0)\n        .text(formater(d));\n      \n      curText.append('tspan')\n        .attr('dx', '1')\n        .text(')');\n      \n      let curBBox = curText.node().getBBox();\n      curX += curBBox.width + 4;\n\n      if (i !== logits.length - 1) {\n        denominatorGroup.append('text')\n          .attr('x', curX)\n          .attr('y', Math.floor(i / numOfRows) * 20)\n          .text('+');\n        curX += 14;\n      } else {\n        denominatorGroup.append('text')\n          .attr('x', curX-2)\n          .attr('y', Math.floor(i / numOfRows) * 20)\n          .style('fill', 'gray')\n          .text(')');\n      }\n    })\n\n    denominatorGroup.selectAll('text')\n      .data(logits)\n      .enter()\n      .append('text')\n      .attr('x', (d, i) => 40 * i)\n      .attr('y', 0)\n      .text(d => formater(d));\n    \n    // Calculate the dynamic denominator group width\n    let denominatorGroupBBox = denominatorGroup.node().getBBox();\n\n    // Draw the fraction line\n    formulaRightGroup.append('line')\n      .attr('class', 'separation-line')\n      .attr('x1', -5)\n      .attr('x2', denominatorGroupBBox.width + 5)\n      .attr('y1', 32)\n      .attr('y2', 32)\n      .style('stroke-width', 1.2)\n      .style('stroke', 'gray');\n    \n    // Draw the numerator\n    let numeratorGroup = formulaRightGroup.append('g')\n      .attr('class', 'numerator-group')\n      .attr('transform', `translate(${0}, ${20})`);\n    \n    let numeratorText = numeratorGroup.append('text')\n      .attr('x', denominatorGroupBBox.x + denominatorGroupBBox.width / 2)\n      .attr('y', 0)\n      .on('mouseover', (d, n, g) => mouseOverHandler(d, n, g, selectedI))\n      .on('mouseleave', (d, n, g) => mouseLeaveHandler(d, n, g, selectedI))\n      .style('pointer-events', 'all')\n      .style('cursor', 'crosshair')\n      .style('text-anchor', 'middle')\n      .text('exp(');\n\n    numeratorText.append('tspan')\n      .attr('class', `formula-term-${selectedI} formula-term`)\n      .attr('dx', 1)\n      .style('fill', logitColors[selectedI])\n      .text(`${formater(logits[selectedI])}`);\n\n    numeratorText.append('tspan')\n       .attr('dx', 1)\n      .text(')');\n    \n    // Draw the left part of the formula\n    let formulaLeftGroup = svg.append('g')\n      .attr('class', 'formula-left')\n      .attr('transform', `translate(${395}, ${32})`);\n    \n    let softmaxText = formulaLeftGroup.append('text')\n      .attr('x', 20)\n      .attr('dominant-baseline', 'middle')\n      .text(`${formater(outputValue, 4)}`);\n    \n    let softmaxTextBBox = softmaxText.node().getBBox();\n    \n    formulaLeftGroup.append('text')\n      .attr('dominant-baseline', 'middle')\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('fill', 'gray')\n      .style('font-weight', 'bold')\n      .text('=');\n\n  })\n\n</script>\n\n<style>\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 6px;\n    right: 10px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .box {\n    padding: 5px 10px 15px 10px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  svg {\n    margin: 10px 0 12px 0;\n  }\n</style>\n\n<div class=\"container\" bind:this={softmaxViewComponent}>\n  <div class=\"box\">\n\n    <div class=\"buttons\">\n      <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n        <i class=\"fas fa-info-circle\"></i>\n      </div>\n\n      <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n        <i class=\"fas control-icon fa-times-circle\"></i>\n      </div>\n    </div>\n\n    <div class=\"title-text\">\n      Softmax Score for <i>\"{outputName}\"</i>\n    </div>\n\n    <svg id=\"softmax-svg\" width=\"470\" height=\"105\"/>\n\n    <div class=\"annotation\">\n      <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\n      <div class=\"annotation-text\">\n        <span style=\"font-weight:600\">Hover over</span> the numbers to highlight logit circles.\n      </div>\n    </div>\n\n  </div>\n</div>\n\n","<script>\n  /* global d3 */\n\n  import { onMount, createEventDispatcher } from 'svelte';\n  import { modalStore } from '../stores.js';\n\n  let modalComponent;\n  let valiImg;\n  let inputValue = '';\n  let showLoading = false;\n  let files;\n  let usingURL = true;\n  let errorInfo = {\n    show: false,\n    error: ''\n  };\n  const dispatch = createEventDispatcher();\n\n  let modalInfo = {\n    show: false\n  };\n  modalStore.set(modalInfo);\n  modalStore.subscribe(value => {modalInfo = value});\n\n  const errorCallback = () => {\n    // The URL is invalid, show an error message on the UI\n    showLoading = false;\n    errorInfo.show = true;\n    errorInfo.error = usingURL ? \"We can't find the image at that URL.\" :\n      \"Not a valid image file.\";\n  }\n\n  const loadCallback = () => {\n    // The URL is valid, but we are not sure if loading it to canvas would be\n    // blocked by crossOrigin setting. Try it here before dispatch to parent.\n\n    // https://stackoverflow.com/questions/13674835/canvas-tainted-by-cross-origin-data\n    let canvas = document.createElement(\"canvas\");\n    let context = canvas.getContext(\"2d\");\n\n    canvas.width = valiImg.width;\n    canvas.height = valiImg.height;\n    context.drawImage(valiImg, 0, 0);\n\n    try {\n      context.getImageData(0, 0, valiImg.width, valiImg.height);\n      // If the foreign image does support CORS -> use this image\n      // dispatch to parent component to use the input image\n      showLoading = false;\n      modalInfo.show = false;\n      modalStore.set(modalInfo);\n      dispatch('urlTyped', {url: valiImg.src});\n      inputValue = null;\n    } catch(err) {\n      // If the foreign image does not support CORS -> use this image\n      showLoading = false;\n      errorInfo.show = true;\n      errorInfo.error = \"No permission to load this image.\"\n    }\n  }\n\n  const imageUpload = () => {\n    usingURL = false;\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      valiImg.src = event.target.result;\n    }\n    reader.readAsDataURL(files[0]);\n  }\n\n  const crossClicked = () => {\n    modalInfo.show = false;\n    modalStore.set(modalInfo);\n    // Dispatch the parent component\n    dispatch('xClicked', {preImage: modalInfo.preImage});\n  }\n\n  const addClicked = () => {\n    // Validate the input URL\n    showLoading = true;\n    errorInfo.show = false;\n    valiImg.crossOrigin = \"Anonymous\";\n    valiImg.src = inputValue;\n  }\n\n  onMount(() => {\n    let modal = d3.select(modalComponent)\n      .select('#input-modal');\n  })\n\n</script>\n\n<style>\n  .modal-card {\n    max-width: 500px;\n  }\n\n  .modal-card-title {\n    font-size: 20px;\n  }\n\n  .modal-card-head {\n    padding: 15px 20px;\n  }\n\n  .modal-card-foot {\n    padding: 12px 20px;\n    justify-content: space-between;\n  }\n\n  .is-smaller {\n    font-size: 15px;\n    padding: 0.5em 0.8em;\n    max-height: 2.2em;\n  }\n\n  .small-font {\n    font-size: 15px;\n  }\n\n  .error-message {\n    font-size: 15px;\n    padding: 0.5em 0;\n    color: #F22B61;\n  }\n\n  .control {\n    width: 100%;\n  }\n\n  .or-label {\n    font-size: 15px;\n    margin: 0 10px;\n    padding: 0.5em 0;\n  }\n\n  .field {\n    display: flex;\n    justify-content: space-between;\n  }\n\n</style>\n\n\n<div class=\"modal-component\"\n  bind:this={modalComponent}>\n\n  <div class=\"modal\"\n    id=\"input-modal\"\n    class:is-active={modalInfo.show}>\n\n    <div class=\"modal-background\" on:click={crossClicked}></div>\n\n    <div class=\"modal-card\">\n      <header class=\"modal-card-head\">\n        <p class=\"modal-card-title\">Add Input Image</p>\n        <button class=\"delete\" aria-label=\"close\" on:click={crossClicked}></button>\n      </header>\n\n      <section class=\"modal-card-body\">\n        <div class=\"field\">\n          <div class=\"control has-icons-left\"\n            class:is-loading={showLoading}>\n\n            <input class=\"input small-font\" type=\"url\"\n              bind:value={inputValue}\n              placeholder=\"Paste URL of image...\">\n\n            <span class=\"icon small-font is-left\">\n              <i class=\"fas fa-link\"></i>\n            </span>\n\n          </div>\n\n          <div class=\"or-label\">or</div>\n\n          <div class=\"file\">\n            <label class=\"file-label\">\n              <input class=\"file-input\" type=\"file\" name=\"image\"\n                accept=\".png,.jpeg,.tiff,.jpg,.png\"\n                bind:files={files}\n                on:change={imageUpload}>\n              <span class=\"file-cta small-font\">\n                <span class=\"file-icon\">\n                  <i class=\"fas fa-upload\"></i>\n                </span>\n                <span class=\"file-label\">\n                  Upload\n                </span>\n              </span>\n            </label>\n          </div>\n\n        </div>\n\n      </section>\n\n      <footer class=\"modal-card-foot\">\n\n        <div class=\"error-message\"\n          class:hidden={!errorInfo.show}>\n          {errorInfo.error}\n        </div>\n\n        <div class=\"button-container\">\n          <button class=\"button is-smaller\"\n            on:click={crossClicked}>\n            Cancel\n          </button>\n\n          <button class=\"button is-success is-smaller\"\n            on:click={addClicked}>\n            Add\n          </button>\n        </div>\n\n\n      </footer>\n    </div>\n\n  </div>\n\n  <!-- An invisible image to check if the user input URL is valid -->\n  <img style=\"display: none\"\n    id=\"vali-image\"\n    alt=\"hidden image\"\n    bind:this={valiImg}\n    on:error={errorCallback}\n    on:load={loadCallback} />\n\n</div>\n","<script>\n  export let data;\n  export let highlights;\n  export let outputLength;\n  export let stride;\n  export let padding;\n  export let isOutput = false;\n  export let isStrideValid;\n\n  import { onMount } from 'svelte';\n  import { afterUpdate } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  let grid_final;\n  const standardCellColor = \"#ddd\";\n  const paddingCellColor = \"#aaa\";\n  const dispatch = createEventDispatcher();\n\n  let oldHighlight = highlights;\n  let oldData = data;\n\n  const redraw = () => {\n    d3.select(grid_final).selectAll(\"#grid > *\").remove();\n    var grid = d3.select(grid_final).select(\"#grid\")\n      .attr(\"width\", 200)\n      .attr(\"height\", 200)\n      .append(\"svg\")\n      .attr(\"width\", 200)\n      .attr(\"height\", 200)\n    var row = grid.selectAll(\".row\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n    var column = row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter().append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x; })\n      .attr(\"y\", function(d) { return d.y; })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .style(\"opacity\", 0.5)\n      .style(\"stroke\", \"black\")\n      .style(\"fill\", function(d) {\n        // Colors cells appropriately that represent padding.\n        if (!isOutput && (d.row < padding || d.row > data.length - padding - 1\n          || d.col < padding || d.col > data.length - padding - 1)) {\n          return paddingCellColor;\n        } \n        return standardCellColor;\n      })\n      .on('mouseover', function(d) {\n        if (!isStrideValid) return;\n        if (data.length != outputLength) {\n          dispatch('message', {\n            hoverH: Math.min(Math.floor(d.row / stride), outputLength - 1),\n            hoverW: Math.min(Math.floor(d.col / stride), outputLength - 1)\n          });\n        } else {\n          dispatch('message', {\n            hoverH: Math.min(Math.floor(d.row / 1), outputLength - 1),\n            hoverW: Math.min(Math.floor(d.col / 1), outputLength - 1)\n          });\n        }\n      });\n  }\n\n  afterUpdate(() => {\n    if (data != oldData) {\n      redraw();\n      oldData = data;\n    }    \n\n    if (highlights != oldHighlight) {\n      var grid = d3.select(grid_final).select('#grid').select(\"svg\")\n      grid.selectAll(\".square\")\n        .style(\"fill\", function(d) {\n          if (highlights.length && highlights[d.row * data.length + d.col]) {\n            return \"#FF2738\";\n          } else {\n            // Colors cells appropriately that represent padding.\n            if (!isOutput && (d.row < padding || d.row > data.length - padding - 1\n              || d.col < padding || d.col > data.length - padding - 1)) {\n              return paddingCellColor;\n            } \n          return standardCellColor;\n          }\n      })\n      oldHighlight = highlights;\n    }\n  });\n\n  onMount(() => {\n    redraw();\n  });\n\n</script>\n\n<div style=\"display: inline-block; vertical-align: middle;\" class=\"grid\"\n  bind:this={grid_final}>\n  <svg id=\"grid\" width=100% height=100%></svg>\n</div>","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, compute_input_multiplies_with_weight,\n          generateOutputMappings, gridData\n  } from './DetailviewUtils.js';\n  import HyperparameterDataview from './HyperparameterDataview.svelte';\n  import KernelMathView from './KernelMathView.svelte';\n  // image: nxn array -- prepadded.\n  // kernel: mxm array.\n  // stride: int\n  export let stride;\n  export let dilation\n  export let kernel;\n  export let image;\n  export let output;\n  export let isPaused;\n  export let padding;\n  export let isStrideValid;\n\n  const dispatch = createEventDispatcher();\n\n  let inputHighlights = [];\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = [];\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n\n  let counter;\n  // lots of replication between mouseover and start-conv. TODO: fix this.\n  function startConvolution(stride) {\n    counter = 0;\n    isPaused = false;\n    dispatch('message', {\n      text: isPaused\n    });\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, image.length, dilation);\n    if (stride <= 0) return;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused || !isStrideValid) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, image.length, kernel.length, outputMappings, kernel.length)\n      counter++;\n    }, 1000)\n  }\n\n  function handleMouseover(event) {\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, image.length, dilation);\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, image.length, kernel.length, outputMappings, kernel.length)\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  // Fix the total grid size to change hyperparameters without changing the grid\n  // size.  This must be two pixels smaller than the HyperparameterDataview svg\n  // size, so that the stroke on the right side of the grid does not get cut off.\n  const gridSize = 198;\n  startConvolution(stride);\n  let testImage = gridData(image, gridSize / image.length);\n  let testOutput = gridData(output, gridSize / output.length);\n  let testKernel = gridData(kernel, gridSize / kernel.length);\n  $ : {\n    startConvolution(stride);\n    testImage = gridData(image, gridSize / image.length);\n    testOutput = gridData(output, gridSize / output.length);\n    testKernel = gridData(kernel, gridSize / kernel.length);\n  }\n</script>\n\n<style>\n  .wrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n  }\n\n  .column {\n    padding: 5px 10px 10px 10px;\n  }\n\n  .header-text {\n    line-height: 1.1;\n  }\n\n  .header-sub-text {\n    font-size: 13px;\n    color: #9a9a9a;\n    margin-bottom: 2px;\n  }\n</style>\n\n<div class=\"wrapper\">\n  <div class=\"column has-text-centered\">\n    <div class=\"header-text\">\n      Input ({image.length - 2 * padding}, {image.length - 2 * padding}) <br/>\n    </div>\n    <div class=\"header-sub-text\">\n      After-padding ({image.length}, {image.length})\n    </div>\n    <HyperparameterDataview on:message={handleMouseover} data={testImage} highlights={inputHighlights}\n        outputLength={output.length} stride={stride} padding={padding} isStrideValid={isStrideValid}/>\n  </div>\n  <div class=\"column has-text-centered\">\n    <div class=\"header-text\" style=\"padding-top: 27px;\">\n      Output ({output.length}, {output.length})\n    </div>\n    <div class=\"header-sub-text\">\n      &nbsp;\n    </div>\n    <HyperparameterDataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights}\n        outputLength={output.length} stride={stride} padding={padding} isOutput={true} isStrideValid={isStrideValid}/>\n  </div>\n</div>","<script>\n\timport HyperparameterAnimator from './HyperparameterAnimator.svelte';\n  import { singleConv } from '../utils/cnn.js';\n\n  let inputSize = 5;\n  let kernelSize = 2;\n  let padding = 0;\n  let stride = 1;\n  const dilation = 1;\n  let isPaused = false;\n  let isStrideValid = true;\n  $: inputSizeWithPadding = inputSize + 2 * padding;\n\n  function generateSquareArray(arrayDim) {\n    let arr = [];\n    for (let i = 0; i < arrayDim; i++) {\n      arr.push([]);\n      for (let j = 0; j < arrayDim; j++) {\n        arr[i].push(0)\n      }\n    }\n    return arr;\n  }\n\n  function handleClickPause() {\n    isPaused = !isPaused;\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  // Update input, kernel, and output as user adjusts hyperparameters.\n  let input = generateSquareArray(inputSize + padding * 2);\n  let kernel = generateSquareArray(kernelSize);\n  $: input = generateSquareArray(inputSize + padding * 2);\n  $: kernel = generateSquareArray(kernelSize);\n  let outputFinal = singleConv(input, kernel, stride);\n  $: if (stride > 0) {\n    const stepSize = (inputSizeWithPadding - kernelSize) / stride + 1;\n    let strideNumberInput = document.getElementById(\"strideNumber\");\n    if (Number.isInteger(stepSize)) {\n      outputFinal = singleConv(input, kernel, stride);\n      if (strideNumberInput != null) {\n        strideNumberInput.className = strideNumberInput.className.replace(\"is-danger\", \"\");\n      }\n      isStrideValid = true;\n    } else {\n      if (!strideNumberInput.className.includes(\"is-danger\")) {\n        strideNumberInput.className += \" is-danger\";\n      }\n      isStrideValid = false;\n      console.log(\"Cannot handle stride of \" + stride);\n    }\n  }\n</script>\n\n<style>\n  .control-button {\n    position: absolute;\n    top: 5px;\n    right: 15px;\n    color: gray;\n    font-size: 22px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 30px 20px 30px;\n    position: relative;\n  }\n\n  .left-part {\n    display: flex;\n    flex-direction: column;\n    margin-top: 30px;\n  }\n\n  .right-part {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .content-container {\n    display: flex;\n    justify-content: space-around;\n  }\n\n  .field {\n    padding-top: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    padding-left : 10px;\n  }\n\n  .annotation-text-hyper {\n    font-size: 15px;\n    font-style: italic;\n  }\n\n  .annotation > img {\n    width: 20px;\n    margin-right: 5px;\n  }\n\n  .is-very-small {\n    font-size: 12px; \n  }\n\n  .field {\n    align-items: center;\n  }\n\n  .field-label.is-normal {\n    padding-top: 0;\n  }\n\n  .field:not(:last-child) {\n    margin-bottom: 7px;\n  }\n\n  label {\n    display: inline-block;\n    width: 105px;\n    text-align: right;\n    font-weight: 500;\n    color: #4a4a4a;\n  } \n\n  input[type=number] {\n    width: 50px;\n  }\n\n  input[type=range] {\n    width: 160px;\n  }\n</style>\n\n<div class=\"container has-text-centered\" id=\"detailview-container\">\n  <div class=\"box\">\n\n      <div class=\"control-button\" on:click={handleClickPause}>\n        {@html isPaused ?\n          '<i class=\"fas fa-play-circle play-icon\"></i>' :\n          '<i class=\"fas fa-pause-circle\"></i>'}\n      </div>\n\n    <div class=\"content-container\">\n      <div class=\"left-part\">\n\n        <div class=\"input-row\">\n          <div class=\"field is-horizontal\">\n            <div class=\"field-label is-normal\">\n              <label class=\"label\">Input Size:</label>\n            </div>\n            <input class=\"input is-very-small\" type=\"number\" bind:value={inputSize}\n              min={kernelSize} max={7}>\n          </div>\n\n          <input type=\"range\" bind:value={inputSize}\n            min={kernelSize} max={7}>\n        </div>\n\n        <div class=\"input-row\">\n          <div class=\"field is-horizontal\">\n            <div class=\"field-label is-normal\">\n              <label class=\"label\">Padding:</label>\n            </div>\n            <input class=\"input is-very-small\" type=\"number\" bind:value={padding} min={0}\n              max={kernelSize - 1}>\n          </div>\n\n          <input type=\"range\" bind:value={padding} min={0}\n            max={kernelSize - 1}>\n        </div>\n\n        <div class=\"input-row\">\n          <div class=\"field is-horizontal\">\n            <div class=\"field-label is-normal\">\n              <label class=\"label\">Kernel Size:</label>\n            </div>\n            <input class=\"input is-very-small\" type=\"number\" bind:value={kernelSize} min={padding + 1}\n              max={inputSizeWithPadding}>\n          </div>\n\n          <input type=\"range\" bind:value={kernelSize} min={padding + 1}\n            max={inputSizeWithPadding}>\n        </div>\n\n        <div class=\"input-row\">\n          <div class=\"field is-horizontal\">\n            <div class=\"field-label is-normal\">\n              <label class=\"label\">Stride:</label>\n            </div>\n            <input class=\"input is-very-small\" type=number id=\"strideNumber\" bind:value={stride} min=1\n              max={Math.max(inputSizeWithPadding - kernelSize + 1, 2)}>\n          </div>\n\n          <input type=\"range\" bind:value={stride} min=1\n            max={Math.max(inputSizeWithPadding - kernelSize + 1, 2)}>\n        </div>\n      </div>\n\n        <div class=\"right-part\">\n          <HyperparameterAnimator on:message={handlePauseFromInteraction} \n            kernel={kernel} image={input} output={outputFinal} isStrideValid={isStrideValid}\n            stride={stride} dilation={dilation} padding={padding} isPaused={isPaused}/>\n\n          <div class=\"annotation\">\n            <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon' width=\"25px\">\n            <div class=\"annotation-text-hyper\">\n              <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\n            </div>\n          </div>\n          \n        </div>\n\n    </div>\n\n\n  </div>\n</div>","<script context=\"module\">\n\tlet iframeApiReady = false;\n\n\timport { setContext, onMount } from \"svelte\";\n\tvar tag = document.createElement(\"script\");\n\ttag.src = \"https://www.youtube.com/iframe_api\";\n\tvar firstScriptTag = document.getElementsByTagName(\"script\")[0];\n\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n\twindow.onYouTubeIframeAPIReady = () =>\n\twindow.dispatchEvent(new Event(\"iframeApiReady\"));\n</script>\n\n<script>\n\timport { createEventDispatcher } from \"svelte\";\n\timport { getContext } from \"svelte\";\n\texport let videoId;\n\texport let playerId = \"player\";\n\n\tlet player;\n\texport function play(startSecond = 0){\n\t\tplayer.seekTo(startSecond);\n\t\tplayer.playVideo()\n\t}\n\tconst dispatch = createEventDispatcher();\n\twindow.addEventListener(\"iframeApiReady\", function(e) {\n\t\tplayer = new YT.Player(playerId, {\n\t\t\tvideoId,\n\t\t\tevents: {\n\t\t\t\tonReady: onPlayerReady\n\t\t\t}\n\t\t});\n\t});\n\tfunction onPlayerReady(event) {\n      player.mute()\n    }\n</script>\n\n<div id={playerId} />","<script>\n\timport HyperparameterView from '../detail-view/Hyperparameterview.svelte';\n  import Youtube from './Youtube.svelte';\n\n\tlet softmaxEquation = `$$\\\\text{Softmax}(x_{i}) = \\\\frac{\\\\exp(x_i)}{\\\\sum_j \\\\exp(x_j)}$$`;\n\tlet reluEquation = `$$\\\\text{ReLU}(x) = \\\\max(0,x)$$`;\n\n  let currentPlayer;\n</script>\n\n<style>\n\t#description {\n    margin-bottom: 60px;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 78ch;\n  }\n\n  #description h2 {\n    color: #444;\n    font-size: 40px;\n    font-weight: 450;\n    margin-bottom: 12px;\n    margin-top: 60px;\n  }\n\n  #description h4 {\n    color: #444;\n    font-size: 32px;\n    font-weight: 450;\n    margin-bottom: 8px;\n    margin-top: 44px;\n  }\n\n  #description h6 {\n    color: #444;\n    font-size: 24px;\n    font-weight: 450;\n    margin-bottom: 8px;\n    margin-top: 44px;\n  }\n\n  #description p {\n    margin: 16px 0;\n  }\n\n  #description p img {\n    vertical-align: middle;\n  }\n\n  #description .figure-caption {\n    font-size: 13px;\n    margin-top: 5px;\n  }\n\n  #description ol {\n    margin-left: 40px;\n  }\n\n  #description p, \n  #description div,\n  #description li {\n    color: #555;\n    font-size: 17px;\n    line-height: 1.6;\n  }\n\n  #description small {\n    font-size: 12px;\n  }\n\n  #description ol li img {\n    vertical-align: middle;\n  }\n\n  #description .video-link {\n    color: #3273DC;\n    cursor: pointer;\n    font-weight: normal;\n    text-decoration: none;\n  }\n\n  #description ul {\n      list-style-type: disc;\n      margin-top: -10px;\n      margin-left: 40px;\n      margin-bottom: 15px;\n  }\n    \n  #description a:hover, \n  #description .video-link:hover {\n    text-decoration: underline;\n  }\n\n  .figure, .video {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n</style>\n\n<body>\n  <div id=\"description\">\n    <h2>What is a Convolutional Neural Network?</h2>\n    <p>\n\t\tIn machine learning, a classifier assigns a class label to a data point.  For example, an <em>image classifier</em> produces a class label (e.g, bird, plane) for what objects exist within an image.  A <em>convolutional neural network</em>, or CNN for short, is a type of classifier, which excels at solving this problem!\n\t </p>\n  \t<p>\n  \t\tA CNN is a neural network: an algorithm used to recognize patterns in data. Neural Networks in general are composed of a collection of neurons that are organized in layers, each with their own learnable weights and biases.  Let’s break down a CNN into its basic building blocks.\n  \t</p>\n  \t<ol>\n  \t\t<li>A <strong>tensor</strong> can be thought of as an n-dimensional matrix.  In the CNN above, tensors will be 3-dimensional with the exception of the output layer.</li>\n  \t\t<li>A <strong>neuron</strong> can be thought of as a function that takes in multiple inputs and yields a single output.  The outputs of neurons are represented above as the <span style=\"color:#FF7577;\">red</span> &rarr; <span style=\"color:#60A7D7;\">blue</span> <strong>activation maps</strong>.</li>\n  \t\t<li>A <strong>layer</strong> is simply a collection of neurons with the same operation, including the same hyperparameters.</li>\n  \t\t<li><strong>Kernel weights and biases</strong>, while unique to each neuron, are tuned during the training phase, and allow the classifier to adapt to the problem and dataset provided.  They are encoded in the visualization with a <span style=\"color:#BC8435;\">yellow</span> &rarr; <span style=\"color:#39988F;\">green</span> diverging colorscale.  The specific values can be viewed in the <em>Interactive Formula View</em> by clicking a neuron or by hovering over the kernel/bias in the <em>Convolutional Elastic Explanation View</em>.</li>\n  \t\t<li>A CNN conveys a <strong>differentiable score function</strong>, which is represented as <strong>class scores</strong> in the visualization on the output layer.</li>\n  \t</ol> \n  \t<p>\n  \t\tIf you have studied neural networks before, these terms may sound familiar to you.  So what makes a CNN different? CNNs utilize a special type of layer, aptly named a convolutional layer, that makes them well-positioned to learn from image and image-like data.  Regarding image data, CNNs can be used for many different computer vision tasks, such as <a href=\"http://ijcsit.com/docs/Volume%207/vol7issue5/ijcsit20160705014.pdf\" title=\"CNN Applications\">image processing, classification, segmentation, and object detection</a>.\n  \t</p>  \n  \t<p>\n  \t\tIn CNN Explainer, you can see how a simple CNN can be used for image classification.  Because of the network’s simplicity, its performance isn’t perfect, but that’s okay! The network architecture, <a href=\"http://cs231n.stanford.edu/\" title=\"Tiny VGG Net presented by Stanford's CS231n\">Tiny VGG</a>, used in CNN Explainer contains many of the same layers and operations used in state-of-the-art CNNs today, but on a smaller scale.  This way, it will be easier to understand getting started.\n      </p>     \n\n      <h2>What does each layer of the network do?</h2>\n      <p>\n  \t\tLet’s walk through each layer in the network.  Feel free to interact with the visualization above by clicking and hovering over various parts of it as you read. \n      </p>\n      <h4 id='article-input'>Input Layer</h4>\n      <p>\n      \tThe input layer (leftmost layer) represents the input image into the CNN.  Because we use RGB images as input, the input layer has three channels, corresponding to the red, green, and blue channels, respectively, which are shown in this layer. Use the color scale when you click on the <img class=\"is-rounded\" width=\"12%\" height=\"12%\" src=\"PUBLIC_URL/assets/figures/network_details.png\" alt=\"network details icon\"/> icon above to display detailed information (on this layer, and others).\n      </p>\n      <h4 id='article-convolution'>Convolutional Layers</h4>\n      <p>\n  \t\tThe convolutional layers are the foundation of CNN, as they contain the learned kernels (weights), which extract features that distinguish different images from one another&mdash;this is what we want for classification!  As you interact with the convolutional layer, you will notice links between the previous layers and the convolutional layers.  Each link represents a unique kernel, which is used for the convolution operation to produce the current convolutional neuron’s output or activation map.  \n  \t</p>\n  \t<p>\n  \t\tThe convolutional neuron performs an elementwise dot product with a unique kernel and the output of the previous layer’s corresponding neuron.  This will yield as many intermediate results as there are unique kernels.  The convolutional neuron is the result of all of the intermediate results summed together with the learned bias.\n  \t</p>\n  \t<p>\n  \t\tFor example, let’s look at the first convolutional layer in the Tiny VGG architecture above.  Notice that there are 10 neurons in this layer, but only 3 neurons in the previous layer.  In the Tiny VGG architecture, convolutional layers are fully-connected, meaning each neuron is connected to every other neuron in the previous layer.  Focusing on the output of the topmost convolutional neuron from the first convolutional layer, we see that there are 3 unique kernels when we hover over the activation map.  \n  \t</p>\n    <div class=\"figure\">\n      <img src=\"PUBLIC_URL/assets/figures/convlayer_overview_demo.gif\" alt=\"clicking on topmost first conv. layer activation map\" width=60% height=60% align=\"middle\"/>\n      <div class=\"figure-caption\">\n  \t\t  Figure 1.  As you hover over the activation map of the topmost node from the first convolutional layer, you can see that 3 kernels were applied to yield this activation map.  After clicking this activation map, you can see the convolution operation occuring with each unique kernel.\n  \t  </div>\n    </div>\n\n  \t<p>\n  \t\tThe size of these kernels is a hyper-parameter specified by the designers of the network architecture.  In order to produce the output of the convolutional neuron (activation map), we must perform an elementwise dot product with the output of the previous layer and the unique kernel learned by the network.  In TinyVGG, the dot product operation uses a stride of 1, which means that the kernel is shifted over 1 pixel per dot product, but this is a hyperparameter that the network architecture designer can adjust to better fit their dataset.  We must do this for all 3 kernels, which will yield 3 intermediate results.  \n  \t</p>\n    <div class=\"figure\">\n      <img src=\"PUBLIC_URL/assets/figures/convlayer_detailedview_demo.gif\" alt=\"clicking on topmost first conv. layer activation map\" />\n      <div class=\"figure-caption\">\n        Figure 2. The kernel being applied to yield the topmost intermediate result for the discussed activation map.\n      </div>\n    </div>\n  \t<p>\n  \t\tThen, an elementwise sum is performed containing all 3 intermediate results along with the bias the network has learned.  After this, the resulting 2-dimensional tensor will be the activation map viewable on the interface above for the topmost neuron in the first convolutional layer.  This same operation must be applied to produce each neuron’s activation map.\n  \t</p>\n  \t<p>\n  \t\tWith some simple math, we are able to deduce that there are 3 x 10 = 30 unique kernels, each of size 3x3, applied in the first convolutional layer.  The connectivity between the convolutional layer and the previous layer is a design decision when building a network architecture, which will affect the number of kernels per convolutional layer.  Click around the visualization to better understand the operations behind the convolutional layer.  See if you can follow the example above!\n    </p>\n    <h6>Understanding Hyperparameters</h6>\n    <p>\n    \t<HyperparameterView/>\n    </p>\n    <ol>\n    \t<li><strong>Padding</strong> is often necessary when the kernel extends beyond the activation map.  Padding conserves data at the borders of activation maps, which leads to better performance, and it can help <a href=\"https://arxiv.org/pdf/1603.07285.pdf\" title=\"See page 13\">preserve the input's spatial size</a>, which allows an architecture designer to build depper, higher performing networks.  There exist <a href=\"https://arxiv.org/pdf/1811.11718.pdf\" title=\"Outlines major padding techniques\">many padding techniques</a>, but the most commonly used approach is zero-padding because of its performance, simplicity, and computational efficiency.  The technique involves adding zeros symmetrically around the edges of an input.  This approach is adopted by many high-performing CNNs such as <a href=\"https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf\" title=\"AlexNet\">AlexNet</a>.</li>\n    \t<li><strong>Kernel size</strong>, often also referred to as filter size, refers to the dimensions of the sliding window over the input.  Choosing this hyperparameter has a massive impact on the image classification task.  For example, small kernel sizes are able to extract a much larger amount of information containing highly local features from the input.  As you can see on the visualization above, a smaller kernel size also leads to a smaller reduction in layer dimensions, which allows for a deeper architecture.  Conversely, a large kernel size extracts less information, which leads to a faster reduction in layer dimensions, often leading to worse performance.  Large kernels are better suited to extract features that are larger.  At the end of the day, choosing an appropriate kernel size will be dependent on your task and dataset, but generally, smaller kernel sizes lead to better performance for the image classification task because an architecture designer is able to stack <a href=\"https://arxiv.org/pdf/1409.1556.pdf\" title=\"Learn why deeper networks perform better!\">more and more layers together to learn more and more complex features</a>!</li>\n    \t<li><strong>Stride</strong> indicates how many pixels the kernel should be shifted over at a time.  For example, as described in the convolutional layer example above, Tiny VGG uses a stride of 1 for its convolutional layers, which means that the dot product is performed on a 3x3 window of the input to yield an output value, then is shifted to the right by one pixel for every subsequent operation.  The impact stride has on a CNN is similar to kernel size.  As stride is decreased, more features are learned because more data is extracted, which also leads to larger output layers.  On the contrary, as stride is increased, this leads to more limited feature extraction and smaller output layer dimensions.  One responsibility of the architecture designer is to ensure that the kernel slides across the input symmetrically when implementing a CNN.  Use the hyperparameter visualization above to alter stride on various input/kernel dimensions to understand this constraint!</li>\n    </ol>\n    <h4>Activation Functions</h4>\n    <h6 id='article-relu'>ReLU</h6>\n    <p>\n    \tNeural networks are extremely prevalent in modern technology&mdash;because they are so accurate!  The highest performing CNNs today consist of an absurd amount of layers, which are able to learn more and more features.  Part of the reason these groundbreaking CNNs are able to achieve such <a href=\"https://arxiv.org/pdf/1512.03385.pdf\" title=\"ResNet\">tremendous accuracies</a> is because of their non-linearity.  ReLU applies much-needed non-linearity into the model.  Non-linearity is necessary to produce non-linear decision boundaries, so that the output cannot be written as a linear combination of the inputs.  If a non-linear activation function was not present, deep CNN architectures would devolve into a single, equivalent convolutional layer, which would not perform nearly as well.  The ReLU activation function is specifically used as a non-linear activation function, as opposed to other non-linear functions such as <em>Sigmoid</em> because it has been <a href=\"https://arxiv.org/pdf/1906.01975.pdf\" title=\"See page 29\">empirically observed</a> that CNNs using ReLU are faster to train than their counterparts.\n    </p>\n    <p>\n  \tThe ReLU activation function is a one-to-one mathematical operation: {reluEquation}\n    </p>\n    <div class=\"figure\">\n    <img src=\"PUBLIC_URL/assets/figures/relu_graph.png\" alt=\"relu graph\" width=\"30%\" height=\"30%\"/>\n      <div class=\"figure-caption\">\n        Figure 3. The ReLU activation function graphed, which disregards all negative data.\n      </div>\n    </div>\n    <p>\n  \tThis activation function is applied elementwise on every value from the input tensor.  For example, if applied ReLU on the value 2.24, the result would be 2.24, since 2.24 is larger than 0.  You can observe how this activation function is applied by clicking a ReLU neuron in the network above.  The Rectified Linear Activation function (ReLU) is performed after every convolutional layer in the network architecture outlined above.  Notice the impact this layer has on the activation map of various neurons throughout the network!\n    </p>\n    <h6 id='article-softmax'>Softmax</h6>\n    <p>\n    \t{softmaxEquation}\n    \tA softmax operation serves a key purpose: making sure the CNN outputs sum to 1.  Because of this, softmax operations are useful to scale model outputs into probabilities.  Clicking on the last layer reveals the softmax operation in the network. Notice how the logits after flatten aren’t scaled between zero to one.  For a visual indication of the impact of each logit (unscaled scalar value), they are encoded using a <span style=\"color:#FFC385;\">light orange</span> &rarr; <span style=\"color:#C44103;\">dark orange</span> color scale.  After passing through the softmax function, each class now corresponds to an appropriate probability! \n    </p>\n    <p>\n    \tYou might be thinking what the difference between standard normalization and softmax is&mdash;after all, both rescale the logits between 0 and 1.  Remember that backpropagation is a key aspect of training neural networks&mdash;we want the correct answer to have the largest “signal.” By using softmax, we are effectively “approximating” argmax while gaining differentiability.  Rescaling doesn’t weigh the max significantly higher than other logits, whereas softmax does.  Simply put, softmax is a “softer” argmax&mdash;see what we did there?\n    </p>\n    <div class=\"figure\">\n    <img src=\"PUBLIC_URL/assets/figures/softmax_animation.gif\" alt=\"softmax interactive formula view\"/>\n      <div class=\"figure-caption\">\n        Figure 4. The <em>Softmax Interactive Formula View</em> allows a user to interact with both the color encoded logits and formula to understand how the prediction scores after the flatten layer are normalized to yield classification scores.\n      </div>\n    </div>\n    <h4 id='article-pooling'>Pooling Layers</h4>\n    <p>\n    \tThere are many types of pooling layers in different CNN architectures, but they all have the purpose of gradually decreasing the spatial extent of the network, which reduces the parameters and overall computation of the network.  The type of pooling used in the Tiny VGG architecture above is Max-Pooling.\n    </p>\n    <p>\n    \tThe Max-Pooling operation requires selecting a kernel size and a stride length during architecture design.  Once selected, the operation slides the kernel with the specified stride over the input while only selecting the largest value at each kernel slice from the input to yield a value for the output.  This process can be viewed by clicking a pooling neuron in the network above.\n    </p>\n    <p>\n    \tIn the Tiny VGG architecture above, the pooling layers use a 2x2 kernel and a stride of 2.  This operation with these specifications results in the discarding of 75% of activations.  By discarding so many values, Tiny VGG is more computationally efficient and avoids overfitting.\n    </p>\n    <h4 id='article-flatten'>Flatten Layer</h4>\n    <p>      \n      This layer converts a three-dimensional layer in the network into a one-dimensional vector to fit the  input of a fully-connected layer for classification.  For example, a 5x5x2 tensor would be converted into a vector of size 50.  The previous convolutional layers of the network extracted the features from the input image, but now it is time to classify the features.  We use the softmax function to classify these features, which requires a 1-dimensional input.  This is why the flatten layer is necessary.  This layer can be viewed by clicking any output class.  \n    </p>\n\n    <h2>Interactive features</h2>\n    <ol>\n    \t<li><strong>Upload your own image</strong> by selecting <img class=\"icon is-rounded\" src=\"PUBLIC_URL/assets/figures/upload_image_icon.png\" alt=\"upload image icon\"/> to understand how your image is classified into the 10 classes.  By analyzing the neurons throughout the network, you can understand the activations maps and extracted features.</li>\n    \t<li><strong>Change the activation map colorscale</strong> to better understand the impact of activations at different levels of abstraction by adjusting <img class=\"is-rounded\" width=\"12%\" height=\"12%\" src=\"PUBLIC_URL/assets/figures/heatmap_scale.png\" alt=\"heatmap\"/>.</li>\n    \t<li><strong>Understand network details</strong> such as layer dimensions and colorscales by clicking the <img class=\"is-rounded\" width=\"12%\" height=\"12%\" src=\"PUBLIC_URL/assets/figures/network_details.png\" alt=\"network details icon\"/> icon.</li>\n    \t<li><strong>Simulate network operations</strong> by clicking the <img class=\"icon is-rounded\" src=\"PUBLIC_URL/assets/figures/play_button.png\" alt=\"play icon\"/> button or interact with the layer slice in the <em>Interactive Formula View</em> by hovering over portions of the input or output to understand the mappings and underlying operations.</li>\n      <li><strong>Learn layer functions</strong> by clicking <img class=\"icon is-rounded\" src=\"PUBLIC_URL/assets/figures/info_button.png\" alt=\"info icon\"/> from the <em>Interactive Formula View</em> to read layer details from the article.</li>\n    </ol> \n\n    <h2>Video Tutorial</h2>\n    <ul>\n      <li class=\"video-link\" on:click={currentPlayer.play(0)}>\n        CNN Explainer Introduction\n        <small>(0:00-0:22)</small>\n      </li>\n      <li class=\"video-link\" on:click={currentPlayer.play(27)}>\n        <em>Overview</em>\n        <small>(0:27-0:37)</small>\n      </li>\n      <li class=\"video-link\" on:click={currentPlayer.play(37)}>\n        Convolutional <em>Elastic Explanation View</em>\n        <small>(0:37-0:46)</small>\n      </li>\n      <li class=\"video-link\" on:click={currentPlayer.play(46)}>\n        Convolutional, ReLU, and Pooling <em>Interactive Formula Views</em>\n        <small>(0:46-1:21)</small>\n      </li>\n      <li class=\"video-link\" on:click={currentPlayer.play(82)}>\n        Flatten <em>Elastic Explanation View</em>\n        <small>(1:22-1:41)</small>\n      </li>\n      <li class=\"video-link\" on:click={currentPlayer.play(101)}>\n        Softmax <em>Interactive Formula View</em>\n        <small>(1:41-2:02)</small>\n      </li>\n      <li class=\"video-link\" on:click={currentPlayer.play(126)}>\n        Engaging Learning Experience: Understanding Classification\n        <small>(2:06-2:28)</small>\n      </li>\n      <li class=\"video-link\" on:click={currentPlayer.play(149)}>\n        Interactive Tutorial Article\n        <small>(2:29-2:54)</small>\n      </li>\n    </ul>\n    <div class=\"video\">\n      <Youtube videoId=\"HnWIHWFbuUQ\" playerId=\"demo_video\" bind:this={currentPlayer}/>\n    </div>\n\n    <h2>How is CNN Explainer implemented?</h2>\n    <p>\n      CNN Explainer uses <a href=\"https://js.tensorflow.org/\"><em>TensorFlow.js</em></a>, an in-browser GPU-accelerated deep learning library to load the pretrained model for visualization.  The entire interactive system is written in Javascript using <a href=\"https://svelte.dev/\"><em>Svelte</em></a> as a framework and <a href=\"https://d3js.org/\"><em>D3.js</em></a> for visualizations. You only need a web browser to get started learning CNNs today!\n    </p>\n\n    <h2>Who developed CNN Explainer?</h2>\n    <p>\n      CNN Explainer was created by \n      <a href=\"https://zijie.wang/\">Jay Wang</a>,\n      <a href=\"https://www.linkedin.com/in/robert-turko/\">Robert Turko</a>, \n      <a href=\"http://oshaikh.com/\">Omar Shaikh</a>,\n      <a href=\"https://haekyu.com/\">Haekyu Park</a>,\n      <a href=\"http://nilakshdas.com/\">Nilaksh Das</a>,\n      <a href=\"https://fredhohman.com/\">Fred Hohman</a>,\n      <a href=\"http://minsuk.com\">Minsuk Kahng</a>, and\n      <a href=\"https://www.cc.gatech.edu/~dchau/\">Polo Chau</a>,\n      which was the result of a research collaboration between \n      Georgia Tech and Oregon State.  We thank Anmol Chhabria, Kaan Sancak, Kantwon Rogers, and the Georgia Tech Visualization Lab for their support and constructive feedback.  This work was supported in part by NSF grants IIS-1563816, CNS-1704701, NASA NSTRF, DARPA GARD, gifts from Intel, NVIDIA, Google, Amazon.\n    </p>\n  </div>\n</body>","/* global tf */\n\n// Network input image size\nconst networkInputSize = 64;\n\n// Enum of node types\nconst nodeType = {\n  INPUT: 'input',\n  CONV: 'conv',\n  POOL: 'pool',\n  RELU: 'relu',\n  FC: 'fc',\n  FLATTEN: 'flatten'\n}\n\nclass Node {\n  /**\n   * Class structure for each neuron node.\n   * \n   * @param {string} layerName Name of the node's layer.\n   * @param {int} index Index of this node in its layer.\n   * @param {string} type Node type {input, conv, pool, relu, fc}. \n   * @param {number} bias The bias assocated to this node.\n   * @param {number[]} output Output of this node.\n   */\n  constructor(layerName, index, type, bias, output) {\n    this.layerName = layerName;\n    this.index = index;\n    this.type = type;\n    this.bias = bias;\n    this.output = output;\n\n    // Weights are stored in the links\n    this.inputLinks = [];\n    this.outputLinks = [];\n  }\n}\n\nclass Link {\n  /**\n   * Class structure for each link between two nodes.\n   * \n   * @param {Node} source Source node.\n   * @param {Node} dest Target node.\n   * @param {number} weight Weight associated to this link. It can be a number,\n   *  1D array, or 2D array.\n   */\n  constructor(source, dest, weight) {\n    this.source = source;\n    this.dest = dest;\n    this.weight = weight;\n  }\n}\n\n/**\n * Construct a CNN with given extracted outputs from every layer.\n * \n * @param {number[][]} allOutputs Array of outputs for each layer.\n *  allOutputs[i][j] is the output for layer i node j.\n * @param {Model} model Loaded tf.js model.\n * @param {Tensor} inputImageTensor Loaded input image tensor.\n */\nconst constructCNNFromOutputs = (allOutputs, model, inputImageTensor) => {\n  let cnn = [];\n\n  // Add the first layer (input layer)\n  let inputLayer = [];\n  let inputShape = model.layers[0].batchInputShape.slice(1);\n  let inputImageArray = inputImageTensor.transpose([2, 0, 1]).arraySync();\n\n  // First layer's three nodes' outputs are the channels of inputImageArray\n  for (let i = 0; i < inputShape[2]; i++) {\n    let node = new Node('input', i, nodeType.INPUT, 0, inputImageArray[i]);\n    inputLayer.push(node);\n  }\n                                                                                                                   \n  cnn.push(inputLayer);\n  let curLayerIndex = 1;\n\n  for (let l = 0; l < model.layers.length; l++) {\n    let layer = model.layers[l];\n    // Get the current output\n    let outputs = allOutputs[l].squeeze();\n    outputs = outputs.arraySync();\n\n    let curLayerNodes = [];\n    let curLayerType;\n\n    // Identify layer type based on the layer name\n    if (layer.name.includes('conv')) {\n      curLayerType = nodeType.CONV;\n    } else if (layer.name.includes('pool')) {\n      curLayerType = nodeType.POOL;\n    } else if (layer.name.includes('relu')) {\n      curLayerType = nodeType.RELU;\n    } else if (layer.name.includes('output')) {\n      curLayerType = nodeType.FC;\n    } else if (layer.name.includes('flatten')) {\n      curLayerType = nodeType.FLATTEN;\n    } else {\n      console.log('Find unknown type');\n    }\n\n    // Construct this layer based on its layer type\n    switch (curLayerType) {\n      case nodeType.CONV: {\n        let biases = layer.bias.val.arraySync();\n        // The new order is [output_depth, input_depth, height, width]\n        let weights = layer.kernel.val.transpose([3, 2, 0, 1]).arraySync();\n\n        // Add nodes into this layer\n        for (let i = 0; i < outputs.length; i++) {\n          let node = new Node(layer.name, i, curLayerType, biases[i],\n            outputs[i]);\n\n          // Connect this node to all previous nodes (create links)\n          // CONV layers have weights in links. Links are one-to-multiple.\n          for (let j = 0; j < cnn[curLayerIndex - 1].length; j++) {\n            let preNode = cnn[curLayerIndex - 1][j];\n            let curLink = new Link(preNode, node, weights[i][j]);\n            preNode.outputLinks.push(curLink);\n            node.inputLinks.push(curLink);\n          }\n          curLayerNodes.push(node);\n        }\n        break;\n      }\n      case nodeType.FC: {\n        let biases = layer.bias.val.arraySync();\n        // The new order is [output_depth, input_depth]\n        let weights = layer.kernel.val.transpose([1, 0]).arraySync();\n\n        // Add nodes into this layer\n        for (let i = 0; i < outputs.length; i++) {\n          let node = new Node(layer.name, i, curLayerType, biases[i],\n            outputs[i]);\n\n          // Connect this node to all previous nodes (create links)\n          // FC layers have weights in links. Links are one-to-multiple.\n\n          // Since we are visualizing the logit values, we need to track\n          // the raw value before softmax\n          let curLogit = 0;\n          for (let j = 0; j < cnn[curLayerIndex - 1].length; j++) {\n            let preNode = cnn[curLayerIndex - 1][j];\n            let curLink = new Link(preNode, node, weights[i][j]);\n            preNode.outputLinks.push(curLink);\n            node.inputLinks.push(curLink);\n            curLogit += preNode.output * weights[i][j];\n          }\n          curLogit += biases[i];\n          node.logit = curLogit;\n          curLayerNodes.push(node);\n        }\n\n        // Sort flatten layer based on the node TF index\n        cnn[curLayerIndex - 1].sort((a, b) => a.realIndex - b.realIndex);\n        break;\n      }\n      case nodeType.RELU:\n      case nodeType.POOL: {\n        // RELU and POOL have no bias nor weight\n        let bias = 0;\n        let weight = null;\n\n        // Add nodes into this layer\n        for (let i = 0; i < outputs.length; i++) {\n          let node = new Node(layer.name, i, curLayerType, bias, outputs[i]);\n\n          // RELU and POOL layers have no weights. Links are one-to-one\n          let preNode = cnn[curLayerIndex - 1][i];\n          let link = new Link(preNode, node, weight);\n          preNode.outputLinks.push(link);\n          node.inputLinks.push(link);\n\n          curLayerNodes.push(node);\n        }\n        break;\n      }\n      case nodeType.FLATTEN: {\n        // Flatten layer has no bias nor weights.\n        let bias = 0;\n\n        for (let i = 0; i < outputs.length; i++) {\n          // Flatten layer has no weights. Links are multiple-to-one.\n          // Use dummy weights to store the corresponding entry in the previsou\n          // node as (row, column)\n          // The flatten() in tf2.keras has order: channel -> row -> column\n          let preNodeWidth = cnn[curLayerIndex - 1][0].output.length,\n            preNodeNum = cnn[curLayerIndex - 1].length,\n            preNodeIndex = i % preNodeNum,\n            preNodeRow = Math.floor(Math.floor(i / preNodeNum) / preNodeWidth),\n            preNodeCol = Math.floor(i / preNodeNum) % preNodeWidth,\n            // Use channel, row, colume to compute the real index with order\n            // row -> column -> channel\n            curNodeRealIndex = preNodeIndex * (preNodeWidth * preNodeWidth) +\n              preNodeRow * preNodeWidth + preNodeCol;\n          \n          let node = new Node(layer.name, i, curLayerType,\n              bias, outputs[i]);\n          \n          // TF uses the (i) index for computation, but the real order should\n          // be (curNodeRealIndex). We will sort the nodes using the real order\n          // after we compute the logits in the output layer.\n          node.realIndex = curNodeRealIndex;\n\n          let link = new Link(cnn[curLayerIndex - 1][preNodeIndex],\n              node, [preNodeRow, preNodeCol]);\n\n          cnn[curLayerIndex - 1][preNodeIndex].outputLinks.push(link);\n          node.inputLinks.push(link);\n\n          curLayerNodes.push(node);\n        }\n\n        // Sort flatten layer based on the node TF index\n        curLayerNodes.sort((a, b) => a.index - b.index);\n        break;\n      }\n      default:\n        console.error('Encounter unknown layer type');\n        break;\n    }\n\n    // Add current layer to the NN\n    cnn.push(curLayerNodes);\n    curLayerIndex++;\n  }\n\n  return cnn;\n}\n\n/**\n * Construct a CNN with given model and input.\n * \n * @param {string} inputImageFile filename of input image.\n * @param {Model} model Loaded tf.js model.\n */\nexport const constructCNN = async (inputImageFile, model) => {\n  // Load the image file\n  let inputImageTensor = await getInputImageArray(inputImageFile, true);\n\n  // Need to feed the model with a batch\n  let inputImageTensorBatch = tf.stack([inputImageTensor]);\n\n  // To get intermediate layer outputs, we will iterate through all layers in\n  // the model, and sequencially apply transformations.\n  let preTensor = inputImageTensorBatch;\n  let outputs = [];\n\n  // Iterate through all layers, and build one model with that layer as output\n  for (let l = 0; l < model.layers.length; l++) {\n    let curTensor = model.layers[l].apply(preTensor);\n\n    // Record the output tensor\n    // Because there is only one element in the batch, we use squeeze()\n    // We also want to use CHW order here\n    let output = curTensor.squeeze();\n    if (output.shape.length === 3) {\n      output = output.transpose([2, 0, 1]);\n    }\n    outputs.push(output);\n\n    // Update preTensor for next nesting iteration\n    preTensor = curTensor;\n  }\n\n  let cnn = constructCNNFromOutputs(outputs, model, inputImageTensor);\n  return cnn;\n}\n\n// Helper functions\n\n/**\n * Crop the largest central square of size 64x64x3 of a 3d array.\n * \n * @param {[int8]} arr array that requires cropping and padding (if a 64x64 crop\n * is not present)\n * @returns 64x64x3 array\n */\nconst cropCentralSquare = (arr) => {\n  let width = arr.length;\n  let height = arr[0].length;\n  let croppedArray;\n\n  // Crop largest square from image if the image is smaller than 64x64 and pad the\n  // cropped image.\n  if (width < networkInputSize || height < networkInputSize) {\n    // TODO(robert): Finish the padding logic.  Pushing now for Omar to work on when he is ready.\n    let cropDimensions = Math.min(width, height);\n    let startXIdx = Math.floor(width / 2) - (cropDimensions / 2);\n    let startYIdx = Math.floor(height / 2) - (cropDimensions / 2);\n    let unpaddedSubarray = arr.slice(startXIdx, startXIdx + cropDimensions).map(i => i.slice(startYIdx, startYIdx + cropDimensions));\n  } else {\n    let startXIdx = Math.floor(width / 2) - Math.floor(networkInputSize / 2);\n    let startYIdx = Math.floor(height / 2) - Math.floor(networkInputSize / 2);\n    croppedArray = arr.slice(startXIdx, startXIdx + networkInputSize).map(i => i.slice(startYIdx, startYIdx + networkInputSize));\n  }\n  return croppedArray;\n}\n\n/**\n * Convert canvas image data into a 3D tensor with dimension [height, width, 3].\n * Recall that tensorflow uses NHWC order (batch, height, width, channel).\n * Each pixel is in 0-255 scale.\n * \n * @param {[int8]} imageData Canvas image data\n * @param {int} width Canvas image width\n * @param {int} height Canvas image height\n */\nconst imageDataTo3DTensor = (imageData, width, height, normalize=true) => {\n  // Create array placeholder for the 3d array\n  let imageArray = tf.fill([width, height, 3], 0).arraySync();\n\n  // Iterate through the data to fill out channel arrays above\n  for (let i = 0; i < imageData.length; i++) {\n    let pixelIndex = Math.floor(i / 4),\n      channelIndex = i % 4,\n      row = width === height ? Math.floor(pixelIndex / width)\n                              : pixelIndex % width,\n      column = width === height ? pixelIndex % width\n                              : Math.floor(pixelIndex / width);\n    \n    if (channelIndex < 3) {\n      let curEntry  = imageData[i];\n      // Normalize the original pixel value from [0, 255] to [0, 1]\n      if (normalize) {\n        curEntry /= 255;\n      }\n      imageArray[row][column][channelIndex] = curEntry;\n    }\n  }\n\n  // If the image is not 64x64, crop and or pad the image appropriately.\n  if (width != networkInputSize && height != networkInputSize) {\n    imageArray = cropCentralSquare(imageArray)\n  }\n\n  let tensor = tf.tensor3d(imageArray);\n  return tensor;\n}\n\n/**\n * Get the 3D pixel value array of the given image file.\n * \n * @param {string} imgFile File path to the image file\n * @returns A promise with the corresponding 3D array\n */\nconst getInputImageArray = (imgFile, normalize=true) => {\n  let canvas = document.createElement('canvas');\n  canvas.style.cssText = 'display:none;';\n  document.getElementsByTagName('body')[0].appendChild(canvas);\n  let context = canvas.getContext('2d');\n\n  return new Promise((resolve, reject) => {\n    let inputImage = new Image();\n    inputImage.crossOrigin = \"Anonymous\";\n    inputImage.src = imgFile;\n    let canvasImage;\n    inputImage.onload = () => {\n      canvas.width = inputImage.width;\n      canvas.height = inputImage.height;\n      // Resize the input image of the network if it is too large to simply crop\n      // the center 64x64 portion in order to still provide a representative\n      // input image into the network.\n      if (inputImage.width > networkInputSize || inputImage.height > networkInputSize) {\n        // Step 1 - Resize using smaller dimension to scale the image down. \n        let resizeCanvas = document.createElement('canvas'),\n            resizeContext = resizeCanvas.getContext('2d');\n        let smallerDimension = Math.min(inputImage.width, inputImage.height);\n        const resizeFactor = (networkInputSize + 1) / smallerDimension;\n        resizeCanvas.width = inputImage.width * resizeFactor;\n        resizeCanvas.height = inputImage.height * resizeFactor;\n        resizeContext.drawImage(inputImage, 0, 0, resizeCanvas.width,\n          resizeCanvas.height);\n\n        // Step 2 - Flip non-square images horizontally and rotate them 90deg since\n        // non-square images are not stored upright.\n        if (inputImage.width != inputImage.height) {\n          context.translate(resizeCanvas.width, 0);\n          context.scale(-1, 1);\n          context.translate(resizeCanvas.width / 2, resizeCanvas.height / 2);\n          context.rotate(90 * Math.PI / 180);\n        }\n\n        // Step 3 - Draw resized image on original canvas.\n        if (inputImage.width != inputImage.height) {\n          context.drawImage(resizeCanvas, -resizeCanvas.width / 2, -resizeCanvas.height / 2);\n        } else {\n          context.drawImage(resizeCanvas, 0, 0);\n        }\n        canvasImage = context.getImageData(0, 0, resizeCanvas.width,\n          resizeCanvas.height);\n\n      } else {\n        context.drawImage(inputImage, 0, 0);\n        canvasImage = context.getImageData(0, 0, inputImage.width,\n          inputImage.height);\n      }\n      // Get image data and convert it to a 3D array\n      let imageData = canvasImage.data;\n      let imageWidth = canvasImage.width;\n      let imageHeight = canvasImage.height;\n\n      // Remove this newly created canvas element\n      canvas.parentNode.removeChild(canvas);\n\n      resolve(imageDataTo3DTensor(imageData, imageWidth, imageHeight, normalize));\n    }\n    inputImage.onerror = reject;\n  })\n}\n\n/**\n * Wrapper to load a model.\n * \n * @param {string} modelFile Filename of converted (through tensorflowjs.py)\n *  model json file.\n */\nexport const loadTrainedModel = (modelFile) => {\n  return tf.loadLayersModel(modelFile);\n}\n","/* global d3 */\n\nconst layerColorScales = {\n  input: [d3.interpolateGreys, d3.interpolateGreys, d3.interpolateGreys],\n  conv: d3.interpolateRdBu,\n  relu: d3.interpolateRdBu,\n  pool: d3.interpolateRdBu,\n  fc: d3.interpolateGreys,\n  weight: d3.interpolateBrBG,\n  logit: d3.interpolateOranges\n};\n\nlet nodeLength = 40;\n\nexport const overviewConfig = {\n  nodeLength : nodeLength,\n  plusSymbolRadius : nodeLength / 5,\n  numLayers : 12,\n  edgeOpacity : 0.8,\n  edgeInitColor : 'rgb(230, 230, 230)',\n  edgeHoverColor : 'rgb(130, 130, 130)',\n  edgeHoverOuting : false,\n  edgeStrokeWidth : 0.7,\n  intermediateColor : 'gray',\n  layerColorScales: layerColorScales,\n  svgPaddings: {top: 25, bottom: 25, left: 50, right: 50},\n  kernelRectLength: 8/3,\n  gapRatio: 4,\n  overlayRectOffset: 12,\n  classLists: ['lifeboat', 'ladybug', 'pizza', 'bell pepper', 'school bus',\n    'koala', 'espresso', 'red panda', 'orange', 'sport car']\n};","import { overviewConfig } from '../config.js';\n\n// Configs\nconst nodeLength = overviewConfig.nodeLength;\n\n/**\n * Compute the [minimum, maximum] of a 1D or 2D array.\n * @param {[number]} array \n */\nexport  const getExtent = (array) => {\n  let min = Infinity;\n  let max = -Infinity;\n\n  // Scalar\n  if (array.length === undefined) {\n    return [array, array];\n  }\n\n  // 1D array\n  if (array[0].length === undefined) {\n    for (let i = 0; i < array[0].length; i++) {\n      if (array[i] < min) {\n        min = array[i];\n      } else if (array[i] > max) {\n        max = array[i];\n      }\n    }\n    return [min, max];\n  }\n\n  // 2D array\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array[0].length; j++) {\n      if (array[i][j] < min) {\n        min = array[i][j];\n      } else if (array[i][j] > max) {\n        max = array[i][j];\n      }\n    }\n  }\n  return [min, max];\n}\n\n/**\n * Convert the svg element center coord to document absolute value\n * // Inspired by https://github.com/caged/d3-tip/blob/master/index.js#L286\n * @param {elem} elem \n */\nexport const getMidCoords = (svg, elem) => {\n  if (svg !== undefined) {\n    let targetel = elem;\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode;\n    }\n    // Get the absolute coordinate of the E point of element bbox\n    let point = svg.node().ownerSVGElement.createSVGPoint();\n    let matrix = targetel.getScreenCTM();\n    let tbbox = targetel.getBBox();\n    // let width = tbbox.width;\n    let height = tbbox.height;\n\n    point.x += 0;\n    point.y -= height / 2;\n    let bbox = point.matrixTransform(matrix);\n    return {\n      top: bbox.y,\n      left: bbox.x\n    };\n  }\n}\n\n/**\n * Return the output knot (right boundary center)\n * @param {object} point {x: x, y:y}\n */\nexport const getOutputKnot = (point) => {\n  return {\n    x: point.x + nodeLength,\n    y: point.y + nodeLength / 2\n  };\n}\n\n/**\n * Return the output knot (left boundary center)\n * @param {object} point {x: x, y:y}\n */\nexport const getInputKnot = (point) => {\n  return {\n    x: point.x,\n    y: point.y + nodeLength / 2\n  }\n}\n\n/**\n * Compute edge data\n * @param {[[[number, number]]]} nodeCoordinate Constructed neuron svg locations\n * @param {[object]} cnn Constructed CNN model\n */\nexport const getLinkData = (nodeCoordinate, cnn) => {\n  let linkData = [];\n  // Create links backward (starting for the first conv layer)\n  for (let l = 1; l < cnn.length; l++) {\n    for (let n = 0; n < cnn[l].length; n++) {\n      let isOutput = cnn[l][n].layerName === 'output';\n      let curTarget = getInputKnot(nodeCoordinate[l][n]);\n      for (let p = 0; p < cnn[l][n].inputLinks.length; p++) {\n        // Specially handle output layer (since we are ignoring the flatten)\n        let inputNodeIndex = cnn[l][n].inputLinks[p].source.index;\n        \n        if (isOutput) {\n          let flattenDimension = cnn[l-1][0].output.length *\n            cnn[l-1][0].output.length;\n          if (inputNodeIndex % flattenDimension !== 0){\n              continue;\n          }\n          inputNodeIndex = Math.floor(inputNodeIndex / flattenDimension);\n        }\n        let curSource = getOutputKnot(nodeCoordinate[l-1][inputNodeIndex]);\n        let curWeight = cnn[l][n].inputLinks[p].weight;\n        linkData.push({\n          source: curSource,\n          target: curTarget,\n          weight: curWeight,\n          targetLayerIndex: l,\n          targetNodeIndex: n,\n          sourceNodeIndex: inputNodeIndex\n        });\n      }\n    }\n  }\n  return linkData;\n}\n\n\n/**\n * Color scale wrapper (support artificially lighter color!)\n * @param {function} colorScale D3 color scale function\n * @param {number} range Color range (max - min)\n * @param {number} value Color value\n * @param {number} gap Tail of the color scale to skip\n */\nexport const gappedColorScale = (colorScale, range, value, gap) => {\n  if (gap === undefined) { gap = 0; }\n  let normalizedValue = (value + range / 2) / range;\n  return colorScale(normalizedValue * (1 - 2 * gap) + gap);\n}","/* global d3, SmoothScroll */\n\nimport {\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n  detailedModeStore, cnnLayerMinMaxStore, hoverInfoStore\n} from '../stores.js';\nimport {\n  getExtent, getLinkData\n} from './draw-utils.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst numLayers = overviewConfig.numLayers;\nconst edgeOpacity = overviewConfig.edgeOpacity;\nconst edgeInitColor = overviewConfig.edgeInitColor;\nconst edgeStrokeWidth = overviewConfig.edgeStrokeWidth;\nconst svgPaddings = overviewConfig.svgPaddings;\nconst gapRatio = overviewConfig.gapRatio;\nconst classLists = overviewConfig.classLists;\nconst formater = d3.format('.4f');\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet detailedMode = undefined;\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\n\n/**\n * Use bounded d3 data to draw one canvas\n * @param {object} d d3 data\n * @param {index} i d3 data index\n * @param {[object]} g d3 group\n * @param {number} range color range map (max - min)\n */\nexport const drawOutput = (d, i, g, range) => {\n  let image = g[i];\n  let colorScale = layerColorScales[d.type];\n\n  if (d.type === 'input') {\n    colorScale = colorScale[d.index];\n  }\n\n  // Set up a second convas in order to resize image\n  let imageLength = d.output.length === undefined ? 1 : d.output.length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  if (imageLength === 1) {\n    imageSingleArray[0] = d.output;\n  } else {\n    for (let i = 0; i < imageSingleArray.length; i+=4) {\n      let pixeIndex = Math.floor(i / 4);\n      let row = Math.floor(pixeIndex / imageLength);\n      let column = pixeIndex % imageLength;\n      let color = undefined;\n      if (d.type === 'input' || d.type === 'fc' ) {\n        color = d3.rgb(colorScale(1 - d.output[row][column]))\n      } else {\n        color = d3.rgb(colorScale((d.output[row][column] + range / 2) / range));\n      }\n\n      imageSingleArray[i] = color.r;\n      imageSingleArray[i + 1] = color.g;\n      imageSingleArray[i + 2] = color.b;\n      imageSingleArray[i + 3] = 255;\n    }\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = nodeLength * 3;\n  largeCanvas.height = nodeLength * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n    0, 0, nodeLength * 3, nodeLength * 3);\n  \n  let imageDataURL = largeCanvas.toDataURL();\n  d3.select(image).attr('xlink:href', imageDataURL);\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Draw bar chart to encode the output value\n * @param {object} d d3 data\n * @param {index} i d3 data index\n * @param {[object]} g d3 group\n * @param {function} scale map value to length\n */\nconst drawOutputScore = (d, i, g, scale) => {\n  let group = d3.select(g[i]);\n  group.select('rect.output-rect')\n    .transition('output')\n    .delay(500)\n    .duration(800)\n    .ease(d3.easeCubicIn)\n    .attr('width', scale(d.output))\n}\n\nexport const drawCustomImage = (image, inputLayer) => {\n\n  let imageWidth = image.width;\n  // Set up a second convas in order to resize image\n  let imageLength = inputLayer[0].output.length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  for (let i = 0; i < imageSingleArray.length; i+=4) {\n    let pixeIndex = Math.floor(i / 4);\n    let row = Math.floor(pixeIndex / imageLength);\n    let column = pixeIndex % imageLength;\n\n    let red = inputLayer[0].output[row][column];\n    let green = inputLayer[1].output[row][column];\n    let blue = inputLayer[2].output[row][column];\n\n    imageSingleArray[i] = red * 255;\n    imageSingleArray[i + 1] = green * 255;\n    imageSingleArray[i + 2] = blue * 255;\n    imageSingleArray[i + 3] = 255;\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = imageWidth * 3;\n  largeCanvas.height = imageWidth * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n    0, 0, imageWidth * 3, imageWidth * 3);\n  \n  let imageDataURL = largeCanvas.toDataURL();\n  // d3.select(image).attr('xlink:href', imageDataURL);\n  image.src = imageDataURL;\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Create color gradient for the legend\n * @param {[object]} g d3 group\n * @param {function} colorScale Colormap\n * @param {string} gradientName Label for gradient def\n * @param {number} min Min of legend value\n * @param {number} max Max of legend value\n */\nconst getLegendGradient = (g, colorScale, gradientName, min, max) => {\n  if (min === undefined) { min = 0; }\n  if (max === undefined) { max = 1; }\n  let gradient = g.append('defs')\n    .append('svg:linearGradient')\n    .attr('id', `${gradientName}`)\n    .attr('x1', '0%')\n    .attr('y1', '100%')\n    .attr('x2', '100%')\n    .attr('y2', '100%')\n    .attr('spreadMethod', 'pad');\n  let interpolation = 10\n  for (let i = 0; i < interpolation; i++) {\n    let curProgress = i / (interpolation - 1);\n    let curColor = colorScale(curProgress * (max - min) + min);\n    gradient.append('stop')\n      .attr('offset', `${curProgress * 100}%`)\n      .attr('stop-color', curColor)\n      .attr('stop-opacity', 1);\n  }\n}\n\n/**\n * Draw all legends\n * @param {object} legends Parent group\n * @param {number} legendHeight Height of the legend element\n */\nconst drawLegends = (legends, legendHeight) => {\n  // Add local legends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range1 = cnnLayerRanges.local[start];\n    let range2 = cnnLayerRanges.local[start + 2];\n\n    let localLegendScale1 = d3.scaleLinear()\n      .range([0, 2 * nodeLength + hSpaceAroundGap - 1.2])\n      .domain([-range1 / 2, range1 / 2]);\n    \n    let localLegendScale2 = d3.scaleLinear()\n      .range([0, 3 * nodeLength + 2 * hSpaceAroundGap - 1.2])\n      .domain([-range2 / 2, range2 / 2]);\n\n    let localLegendAxis1 = d3.axisBottom()\n      .scale(localLegendScale1)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range1 / 2, 0, range1 / 2]);\n    \n    let localLegendAxis2 = d3.axisBottom()\n      .scale(localLegendScale2)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range2 / 2, 0, range2 / 2]);\n\n    let localLegend1 = legends.append('g')\n      .attr('class', 'legend local-legend')\n      .attr('id', `local-legend-${i}-1`)\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'local')\n      .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n\n    localLegend1.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(localLegendAxis1)\n\n    localLegend1.append('rect')\n      .attr('width', 2 * nodeLength + hSpaceAroundGap)\n      .attr('height', legendHeight)\n      .style('fill', 'url(#convGradient)');\n\n    let localLegend2 = legends.append('g')\n      .attr('class', 'legend local-legend')\n      .attr('id', `local-legend-${i}-2`)\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'local')\n      .attr('transform', `translate(${nodeCoordinate[start + 2][0].x}, ${0})`);\n\n    localLegend2.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(localLegendAxis2)\n\n    localLegend2.append('rect')\n      .attr('width', 3 * nodeLength + 2 * hSpaceAroundGap)\n      .attr('height', legendHeight)\n      .style('fill', 'url(#convGradient)');\n  }\n\n  // Add module legends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range = cnnLayerRanges.module[start];\n\n    let moduleLegendScale = d3.scaleLinear()\n      .range([0, 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio - 1.2])\n      .domain([-range / 2, range / 2]);\n\n    let moduleLegendAxis = d3.axisBottom()\n      .scale(moduleLegendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range / 2, -(range / 4), 0, range / 4, range / 2]);\n\n    let moduleLegend = legends.append('g')\n      .attr('class', 'legend module-legend')\n      .attr('id', `module-legend-${i}`)\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'module')\n      .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n    \n    moduleLegend.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(moduleLegendAxis)\n\n    moduleLegend.append('rect')\n      .attr('width', 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio)\n      .attr('height', legendHeight)\n      .style('fill', 'url(#convGradient)');\n  }\n\n  // Add global legends\n  let start = 1;\n  let range = cnnLayerRanges.global[start];\n\n  let globalLegendScale = d3.scaleLinear()\n    .range([0, 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio - 1.2])\n    .domain([-range / 2, range / 2]);\n\n  let globalLegendAxis = d3.axisBottom()\n    .scale(globalLegendScale)\n    .tickFormat(d3.format('.2f'))\n    .tickValues([-range / 2, -(range / 4), 0, range / 4, range / 2]);\n\n  let globalLegend = legends.append('g')\n    .attr('class', 'legend global-legend')\n    .attr('id', 'global-legend')\n    .classed('hidden', !detailedMode || selectedScaleLevel !== 'global')\n    .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n\n  globalLegend.append('g')\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\n    .call(globalLegendAxis)\n\n  globalLegend.append('rect')\n    .attr('width', 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio)\n    .attr('height', legendHeight)\n    .style('fill', 'url(#convGradient)');\n\n\n  // Add output legend\n  let outputRectScale = d3.scaleLinear()\n        .domain(cnnLayerRanges.output)\n        .range([0, nodeLength - 1.2]);\n\n  let outputLegendAxis = d3.axisBottom()\n    .scale(outputRectScale)\n    .tickFormat(d3.format('.1f'))\n    .tickValues([0, cnnLayerRanges.output[1]])\n  \n  let outputLegend = legends.append('g')\n    .attr('class', 'legend output-legend')\n    .attr('id', 'output-legend')\n    .classed('hidden', !detailedMode)\n    .attr('transform', `translate(${nodeCoordinate[11][0].x}, ${0})`);\n  \n  outputLegend.append('g')\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\n    .call(outputLegendAxis);\n\n  outputLegend.append('rect')\n    .attr('width', nodeLength)\n    .attr('height', legendHeight)\n    .style('fill', 'gray');\n  \n  // Add input image legend\n  let inputScale = d3.scaleLinear()\n    .range([0, nodeLength - 1.2])\n    .domain([0, 1]);\n\n  let inputLegendAxis = d3.axisBottom()\n    .scale(inputScale)\n    .tickFormat(d3.format('.1f'))\n    .tickValues([0, 0.5, 1]);\n\n  let inputLegend = legends.append('g')\n    .attr('class', 'legend input-legend')\n    .classed('hidden', !detailedMode)\n    .attr('transform', `translate(${nodeCoordinate[0][0].x}, ${0})`);\n  \n  inputLegend.append('g')\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\n    .call(inputLegendAxis);\n\n  inputLegend.append('rect')\n    .attr('x', 0.3)\n    .attr('width', nodeLength - 0.3)\n    .attr('height', legendHeight)\n    .attr('transform', `rotate(180, ${nodeLength/2}, ${legendHeight/2})`)\n    .style('stroke', 'rgb(20, 20, 20)')\n    .style('stroke-width', 0.3)\n    .style('fill', 'url(#inputGradient)');\n}\n\n/**\n * Draw the overview\n * @param {number} width Width of the cnn group\n * @param {number} height Height of the cnn group\n * @param {object} cnnGroup Group to appen cnn elements to\n * @param {function} nodeMouseOverHandler Callback func for mouseOver\n * @param {function} nodeMouseLeaveHandler Callback func for mouseLeave\n * @param {function} nodeClickHandler Callback func for click\n */\nexport const drawCNN = (width, height, cnnGroup, nodeMouseOverHandler,\n  nodeMouseLeaveHandler, nodeClickHandler) => {\n  // Draw the CNN\n  // There are 8 short gaps and 5 long gaps\n  hSpaceAroundGap = (width - nodeLength * numLayers) / (8 + 5 * gapRatio);\n  hSpaceAroundGapStore.set(hSpaceAroundGap);\n  let leftAccuumulatedSpace = 0;\n\n  // Iterate through the cnn to draw nodes in each layer\n  for (let l = 0; l < cnn.length; l++) {\n    let curLayer = cnn[l];\n    let isOutput = curLayer[0].layerName === 'output';\n\n    nodeCoordinate.push([]);\n\n    // Compute the x coordinate of the whole layer\n    // Output layer and conv layer has long gaps\n    if (isOutput || curLayer[0].type === 'conv') {\n      leftAccuumulatedSpace += hSpaceAroundGap * gapRatio;\n    } else {\n      leftAccuumulatedSpace += hSpaceAroundGap;\n    }\n\n    // All nodes share the same x coordiante (left in div style)\n    let left = leftAccuumulatedSpace;\n\n    let layerGroup = cnnGroup.append('g')\n      .attr('class', 'cnn-layer-group')\n      .attr('id', `cnn-layer-group-${l}`);\n\n    vSpaceAroundGap = (height - nodeLength * curLayer.length) /\n      (curLayer.length + 1);\n    vSpaceAroundGapStore.set(vSpaceAroundGap);\n\n    let nodeGroups = layerGroup.selectAll('g.node-group')\n      .data(curLayer, d => d.index)\n      .enter()\n      .append('g')\n      .attr('class', 'node-group')\n      .style('cursor', 'pointer')\n      .style('pointer-events', 'all')\n      .on('click', nodeClickHandler)\n      .on('mouseover', nodeMouseOverHandler)\n      .on('mouseleave', nodeMouseLeaveHandler)\n      .classed('node-output', isOutput)\n      .attr('id', (d, i) => {\n        // Compute the coordinate\n        // Not using transform on the group object because of a decade old\n        // bug on webkit (safari)\n        // https://bugs.webkit.org/show_bug.cgi?id=23113\n        let top = i * nodeLength + (i + 1) * vSpaceAroundGap;\n        top += svgPaddings.top;\n        nodeCoordinate[l].push({x: left, y: top});\n        return `layer-${l}-node-${i}`\n      });\n    \n    // Overwrite the mouseover and mouseleave function for output nodes to show\n    // hover info in the UI\n    layerGroup.selectAll('g.node-output')\n      .on('mouseover', (d, i, g) => {\n        nodeMouseOverHandler(d, i, g);\n        hoverInfoStore.set( {show: true, text: `Output value: ${formater(d.output)}`} );\n      })\n      .on('mouseleave', (d, i, g) => {\n        nodeMouseLeaveHandler(d, i, g);\n        hoverInfoStore.set( {show: false, text: `Output value: ${formater(d.output)}`} );\n      });\n    \n    if (curLayer[0].layerName !== 'output') {\n      // Embed raster image in these groups\n      nodeGroups.append('image')\n        .attr('class', 'node-image')\n        .attr('width', nodeLength)\n        .attr('height', nodeLength)\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y);\n      \n      // Add a rectangle to show the border\n      nodeGroups.append('rect')\n        .attr('class', 'bounding')\n        .attr('width', nodeLength)\n        .attr('height', nodeLength)\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y)\n        .style('fill', 'none')\n        .style('stroke', 'gray')\n        .style('stroke-width', 1)\n        .classed('hidden', true);\n    } else {\n      nodeGroups.append('rect')\n        .attr('class', 'output-rect')\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y + nodeLength / 2 + 8)\n        .attr('height', nodeLength / 4)\n        .attr('width', 0)\n        .style('fill', 'gray');\n      nodeGroups.append('text')\n        .attr('class', 'output-text')\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y + nodeLength / 2)\n        .style('dominant-baseline', 'middle')\n        .style('font-size', '11px')\n        .style('fill', 'black')\n        .style('opacity', 0.5)\n        .text((d, i) => classLists[i]);\n      \n      // Add annotation text to tell readers the exact output probability\n      // nodeGroups.append('text')\n      //   .attr('class', 'annotation-text')\n      //   .attr('id', (d, i) => `output-prob-${i}`)\n      //   .attr('x', left)\n      //   .attr('y', (d, i) => nodeCoordinate[l][i].y + 10)\n      //   .text(d => `(${d3.format('.4f')(d.output)})`);\n    }\n    leftAccuumulatedSpace += nodeLength;\n  }\n\n  // Share the nodeCoordinate\n  nodeCoordinateStore.set(nodeCoordinate)\n\n  // Compute the scale of the output score width (mapping the the node\n  // width to the max output score)\n  let outputRectScale = d3.scaleLinear()\n        .domain(cnnLayerRanges.output)\n        .range([0, nodeLength]);\n\n  // Draw the canvas\n  for (let l = 0; l < cnn.length; l++) {\n    let range = cnnLayerRanges[selectedScaleLevel][l];\n    svg.select(`g#cnn-layer-group-${l}`)\n      .selectAll('image.node-image')\n      .each((d, i, g) => drawOutput(d, i, g, range));\n  }\n\n  svg.selectAll('g.node-output').each(\n    (d, i, g) => drawOutputScore(d, i, g, outputRectScale)\n  );\n\n  // Add layer label\n  let layerNames = cnn.map(d => {\n    if (d[0].layerName === 'output') {\n      return {\n        name: d[0].layerName,\n        dimension: `(${d.length})`\n      }\n    } else {\n      return {\n        name: d[0].layerName,\n        dimension: `(${d[0].output.length}, ${d[0].output.length}, ${d.length})`\n      }\n    }\n  });\n\n  let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n  let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n  \n  let detailedLabels = svg.selectAll('g.layer-detailed-label')\n    .data(layerNames)\n    .enter()\n    .append('g')\n    .attr('class', 'layer-detailed-label')\n    .attr('id', (d, i) => `layer-detailed-label-${i}`)\n    .classed('hidden', !detailedMode)\n    .attr('transform', (d, i) => {\n      let x = nodeCoordinate[i][0].x + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 6;\n      return `translate(${x}, ${y})`;\n    })\n    .style('cursor', d => d.name.includes('output') ? 'default' : 'help')\n    .on('click', (d) => {\n      let target = '';\n      if (d.name.includes('conv')) { target = 'convolution' }\n      if (d.name.includes('relu')) { target = 'relu' }\n      if (d.name.includes('max_pool')) { target = 'pooling'}\n      if (d.name.includes('input')) { target = 'input'}\n\n      // Scroll to a article element\n      let anchor = document.querySelector(`#article-${target}`);\n      scroll.animateScroll(anchor);\n    });\n  \n  detailedLabels.append('title')\n    .text('Move to article section');\n    \n  detailedLabels.append('text')\n    .style('opacity', 0.7)\n    .style('dominant-baseline', 'middle')\n    .append('tspan')\n    .style('font-size', '12px')\n    .text(d => d.name)\n    .append('tspan')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .text(d => d.dimension);\n  \n  let labels = svg.selectAll('g.layer-label')\n    .data(layerNames)\n    .enter()\n    .append('g')\n    .attr('class', 'layer-label')\n    .attr('id', (d, i) => `layer-label-${i}`)\n    .classed('hidden', detailedMode)\n    .attr('transform', (d, i) => {\n      let x = nodeCoordinate[i][0].x + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .style('cursor', d => d.name.includes('output') ? 'default' : 'help')\n    .on('click', (d) => {\n      let target = '';\n      if (d.name.includes('conv')) { target = 'convolution' }\n      if (d.name.includes('relu')) { target = 'relu' }\n      if (d.name.includes('max_pool')) { target = 'pooling'}\n      if (d.name.includes('input')) { target = 'input'}\n\n      // Scroll to a article element\n      let anchor = document.querySelector(`#article-${target}`);\n      scroll.animateScroll(anchor);\n    });\n  \n  labels.append('title')\n    .text('Move to article section');\n  \n  labels.append('text')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .text(d => {\n      if (d.name.includes('conv')) { return 'conv' }\n      if (d.name.includes('relu')) { return 'relu' }\n      if (d.name.includes('max_pool')) { return 'max_pool'}\n      return d.name\n    });\n\n  // Add layer color scale legends\n  getLegendGradient(svg, layerColorScales.conv, 'convGradient');\n  getLegendGradient(svg, layerColorScales.input[0], 'inputGradient');\n\n  let legendHeight = 5;\n  let legends = svg.append('g')\n      .attr('class', 'color-legend')\n      .attr('transform', `translate(${0}, ${\n        svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap +\n        nodeLength * 10\n      })`);\n  \n  drawLegends(legends, legendHeight);\n\n  // Add edges between nodes\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n  \n  let linkData = getLinkData(nodeCoordinate, cnn);\n\n  let edgeGroup = cnnGroup.append('g')\n    .attr('class', 'edge-group');\n  \n  edgeGroup.selectAll('path.edge')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .attr('class', d =>\n      `edge edge-${d.targetLayerIndex} edge-${d.targetLayerIndex}-${d.targetNodeIndex}`)\n    .attr('id', d => \n      `edge-${d.targetLayerIndex}-${d.targetNodeIndex}-${d.sourceNodeIndex}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', edgeStrokeWidth)\n    .style('opacity', edgeOpacity)\n    .style('stroke', edgeInitColor);\n\n  // Add input channel annotations\n  let inputAnnotation = cnnGroup.append('g')\n    .attr('class', 'input-annotation');\n\n  let redChannel = inputAnnotation.append('text')\n    .attr('x', nodeCoordinate[0][0].x + nodeLength / 2)\n    .attr('y', nodeCoordinate[0][0].y + nodeLength + 5)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n  \n  redChannel.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#C95E67')\n    .text('Red');\n  \n  redChannel.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(' channel');\n\n  inputAnnotation.append('text')\n    .attr('x', nodeCoordinate[0][1].x + nodeLength / 2)\n    .attr('y', nodeCoordinate[0][1].y + nodeLength + 5)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle')\n    .style('fill', '#3DB665')\n    .text('Green');\n\n  inputAnnotation.append('text')\n    .attr('x', nodeCoordinate[0][2].x + nodeLength / 2)\n    .attr('y', nodeCoordinate[0][2].y + nodeLength + 5)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle')\n    .style('fill', '#3F7FBC')\n    .text('Blue');\n}\n\n/**\n * Update canvas values when user changes input image\n */\nexport const updateCNN = () => {\n  // Compute the scale of the output score width (mapping the the node\n  // width to the max output score)\n  let outputRectScale = d3.scaleLinear()\n      .domain(cnnLayerRanges.output)\n      .range([0, nodeLength]);\n\n  // Rebind the cnn data to layer groups layer by layer\n  for (let l = 0; l < cnn.length; l++) {\n    let curLayer = cnn[l];\n    let range = cnnLayerRanges[selectedScaleLevel][l];\n    let layerGroup = svg.select(`g#cnn-layer-group-${l}`);\n\n    let nodeGroups = layerGroup.selectAll('g.node-group')\n      .data(curLayer);\n\n    if (l < cnn.length - 1) {\n      // Redraw the canvas and output node\n      nodeGroups.transition('disappear')\n        .duration(300)\n        .ease(d3.easeCubicOut)\n        .style('opacity', 0)\n        .on('end', function() {\n          d3.select(this)\n            .select('image.node-image')\n            .each((d, i, g) => drawOutput(d, i, g, range));\n          d3.select(this).transition('appear')\n            .duration(700)\n            .ease(d3.easeCubicIn)\n            .style('opacity', 1);\n        });\n    } else {\n      nodeGroups.each(\n        (d, i, g) => drawOutputScore(d, i, g, outputRectScale)\n      );\n    }\n  }\n\n  // Update the color scale legend\n  // Local legends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range1 = cnnLayerRanges.local[start];\n    let range2 = cnnLayerRanges.local[start + 2];\n\n    let localLegendScale1 = d3.scaleLinear()\n      .range([0, 2 * nodeLength + hSpaceAroundGap])\n      .domain([-range1 / 2, range1 / 2]);\n    \n    let localLegendScale2 = d3.scaleLinear()\n      .range([0, 3 * nodeLength + 2 * hSpaceAroundGap])\n      .domain([-range2 / 2, range2 / 2]);\n\n    let localLegendAxis1 = d3.axisBottom()\n      .scale(localLegendScale1)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range1 / 2, 0, range1 / 2]);\n    \n    let localLegendAxis2 = d3.axisBottom()\n      .scale(localLegendScale2)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range2 / 2, 0, range2 / 2]);\n    \n    svg.select(`g#local-legend-${i}-1`).select('g').call(localLegendAxis1);\n    svg.select(`g#local-legend-${i}-2`).select('g').call(localLegendAxis2);\n  }\n\n  // Module legend\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range = cnnLayerRanges.local[start];\n\n    let moduleLegendScale = d3.scaleLinear()\n      .range([0, 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio - 1.2])\n      .domain([-range, range]);\n\n    let moduleLegendAxis = d3.axisBottom()\n      .scale(moduleLegendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range, -(range / 2), 0, range/2, range]);\n    \n    svg.select(`g#module-legend-${i}`).select('g').call(moduleLegendAxis);\n  }\n\n  // Global legend\n  let start = 1;\n  let range = cnnLayerRanges.global[start];\n\n  let globalLegendScale = d3.scaleLinear()\n    .range([0, 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio - 1.2])\n    .domain([-range, range]);\n\n  let globalLegendAxis = d3.axisBottom()\n    .scale(globalLegendScale)\n    .tickFormat(d3.format('.2f'))\n    .tickValues([-range, -(range / 2), 0, range/2, range]);\n\n  svg.select(`g#global-legend`).select('g').call(globalLegendAxis);\n\n  // Output legend\n  let outputLegendAxis = d3.axisBottom()\n    .scale(outputRectScale)\n    .tickFormat(d3.format('.1f'))\n    .tickValues([0, cnnLayerRanges.output[1]]);\n  \n  svg.select('g#output-legend').select('g').call(outputLegendAxis);\n}\n\n/**\n * Update the ranges for current CNN layers\n */\nexport const updateCNNLayerRanges = () => {\n  // Iterate through all nodes to find a output ranges for each layer\n  let cnnLayerRangesLocal = [1];\n  let curRange = undefined;\n\n  // Also track the min/max of each layer (avoid computing during intermediate\n  // layer)\n  cnnLayerMinMax = [];\n\n  for (let l = 0; l < cnn.length - 1; l++) {\n    let curLayer = cnn[l];\n\n    // Compute the min max\n    let outputExtents = curLayer.map(l => getExtent(l.output));\n    let aggregatedExtent = outputExtents.reduce((acc, cur) => {\n      return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n    })\n    cnnLayerMinMax.push({min: aggregatedExtent[0], max: aggregatedExtent[1]});\n\n    // conv layer refreshes curRange counting\n    if (curLayer[0].type === 'conv' || curLayer[0].type === 'fc') {\n      aggregatedExtent = aggregatedExtent.map(Math.abs);\n      // Plus 0.1 to offset the rounding error (avoid black color)\n      curRange = 2 * (0.1 + \n        Math.round(Math.max(...aggregatedExtent) * 1000) / 1000);\n    }\n\n    if (curRange !== undefined){\n      cnnLayerRangesLocal.push(curRange);\n    }\n  }\n\n  // Finally, add the output layer range\n  cnnLayerRangesLocal.push(1);\n  cnnLayerMinMax.push({min: 0, max: 1});\n\n  // Support different levels of scales (1) lcoal, (2) component, (3) global\n  let cnnLayerRangesComponent = [1];\n  let numOfComponent = (numLayers - 2) / 5;\n  for (let i = 0; i < numOfComponent; i++) {\n    let curArray = cnnLayerRangesLocal.slice(1 + 5 * i, 1 + 5 * i + 5);\n    let maxRange = Math.max(...curArray);\n    for (let j = 0; j < 5; j++) {\n      cnnLayerRangesComponent.push(maxRange);\n    }\n  }\n  cnnLayerRangesComponent.push(1);\n\n  let cnnLayerRangesGlobal = [1];\n  let maxRange = Math.max(...cnnLayerRangesLocal.slice(1,\n    cnnLayerRangesLocal.length - 1));\n  for (let i = 0; i < numLayers - 2; i++) {\n    cnnLayerRangesGlobal.push(maxRange);\n  }\n  cnnLayerRangesGlobal.push(1);\n\n  // Update the ranges dictionary\n  cnnLayerRanges.local = cnnLayerRangesLocal;\n  cnnLayerRanges.module = cnnLayerRangesComponent;\n  cnnLayerRanges.global = cnnLayerRangesGlobal;\n  cnnLayerRanges.output = [0, d3.max(cnn[cnn.length - 1].map(d => d.output))];\n\n  cnnLayerRangesStore.set(cnnLayerRanges);\n  cnnLayerMinMaxStore.set(cnnLayerMinMax);\n}","/* global d3 */\n\nimport { svgStore, vSpaceAroundGapStore } from '../stores.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst intermediateColor = overviewConfig.intermediateColor;\nconst svgPaddings = overviewConfig.svgPaddings;\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\n/**\n * Move one layer horizontally\n * @param {object} arg Multiple arguments {\n *   layerIndex: current layer index\n *   targetX: destination x\n *   disable: make this layer unresponsible\n *   delay: animation delay\n *   opacity: change the current layer's opacity\n *   specialIndex: avoid manipulating `specialIndex`th node\n *   onEndFunc: call this function when animation finishes\n *   transitionName: animation ID\n * }\n */\nexport const moveLayerX = (arg) => {\n  let layerIndex = arg.layerIndex;\n  let targetX = arg.targetX;\n  let disable = arg.disable;\n  let delay = arg.delay;\n  let opacity = arg.opacity;\n  let specialIndex = arg.specialIndex;\n  let onEndFunc = arg.onEndFunc;\n  let transitionName = arg.transitionName === undefined ? 'move' : arg.transitionName;\n  let duration = arg.duration === undefined ? 500 : arg.duration;\n\n  // Move the selected layer\n  let curLayer = svg.select(`g#cnn-layer-group-${layerIndex}`);\n  curLayer.selectAll('g.node-group').each((d, i, g) => {\n    d3.select(g[i])\n      .style('cursor', disable && i !== specialIndex ? 'default' : 'pointer')\n      .style('pointer-events', disable && i !== specialIndex ? 'none' : 'all')\n      .select('image')\n      .transition(transitionName)\n      .ease(d3.easeCubicInOut)\n      .delay(delay)\n      .duration(duration)\n      .attr('x', targetX);\n    \n    d3.select(g[i])\n      .select('rect.bounding')\n      .transition(transitionName)\n      .ease(d3.easeCubicInOut)\n      .delay(delay)\n      .duration(duration)\n      .attr('x', targetX);\n    \n    if (opacity !== undefined && i !== specialIndex) {\n      d3.select(g[i])\n        .select('image')\n        .style('opacity', opacity);\n    }\n  });\n  \n  // Also move the layer labels\n  svg.selectAll(`g#layer-label-${layerIndex}`)\n    .transition(transitionName)\n    .ease(d3.easeCubicInOut)\n    .delay(delay)\n    .duration(duration)\n    .attr('transform', () => {\n      let x = targetX + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .on('end', onEndFunc);\n\n  svg.selectAll(`g#layer-detailed-label-${layerIndex}`)\n    .transition(transitionName)\n    .ease(d3.easeCubicInOut)\n    .delay(delay)\n    .duration(duration)\n    .attr('transform', () => {\n      let x = targetX + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 6;\n      return `translate(${x}, ${y})`;\n    })\n    .on('end', onEndFunc);\n}\n\n/**\n * Append a gradient definition to `group`\n * @param {string} gradientID CSS ID for the gradient def\n * @param {[{offset: number, color: string, opacity: number}]} stops Gradient stops\n * @param {element} group Element to append def to\n */\nexport const addOverlayGradient = (gradientID, stops, group) => {\n  if (group === undefined) {\n    group = svg;\n  }\n\n  // Create a gradient\n  let defs = group.append(\"defs\")\n    .attr('class', 'overlay-gradient');\n\n  let gradient = defs.append(\"linearGradient\")\n    .attr(\"id\", gradientID)\n    .attr(\"x1\", \"0%\")\n    .attr(\"x2\", \"100%\")\n    .attr(\"y1\", \"100%\")\n    .attr(\"y2\", \"100%\");\n  \n  stops.forEach(s => {\n    gradient.append('stop')\n      .attr('offset', s.offset)\n      .attr('stop-color', s.color)\n      .attr('stop-opacity', s.opacity);\n  })\n}\n\n/**\n * Draw the legend for intermediate layer\n * @param {object} arg \n * {\n *   legendHeight: height of the legend rectangle\n *   curLayerIndex: the index of selected layer\n *   range: colormap range\n *   group: group to append the legend\n *   minMax: {min: min value, max: max value}\n *   width: width of the legend\n *   x: x position of the legend\n *   y: y position of the legend\n *   isInput: if the legend is for the input layer (special handle black to\n *      white color scale)\n *   colorScale: d3 color scale\n *   gradientAppendingName: name of the appending gradient\n *   gradientGap: gap to make the color lighter\n * }\n */\nexport const drawIntermediateLayerLegend = (arg) => {\n  let legendHeight = arg.legendHeight,\n    curLayerIndex = arg.curLayerIndex,\n    range = arg.range,\n    group = arg.group,\n    minMax = arg.minMax,\n    width = arg.width,\n    x = arg.x,\n    y = arg.y,\n    isInput = arg.isInput,\n    colorScale = arg.colorScale,\n    gradientAppendingName = arg.gradientAppendingName,\n    gradientGap = arg.gradientGap;\n  \n  if (colorScale === undefined) { colorScale = layerColorScales.conv; }\n  if (gradientGap === undefined) { gradientGap = 0; }\n  \n  // Add a legend color gradient\n  let gradientName = 'url(#inputGradient)';\n  let normalizedColor = v => colorScale(v * (1 - 2 * gradientGap) + gradientGap);\n\n  if (!isInput) {\n    let leftValue = (minMax.min + range / 2) / range,\n      zeroValue = (0 + range / 2) / range,\n      rightValue = (minMax.max + range / 2) / range,\n      totalRange = minMax.max - minMax.min,\n      zeroLocation = (0 - minMax.min) / totalRange,\n      leftMidValue = leftValue + (zeroValue - leftValue)/2,\n      rightMidValue = zeroValue + (rightValue - zeroValue)/2;\n\n    let stops = [\n      {offset: 0, color: normalizedColor(leftValue), opacity: 1},\n      {offset: zeroLocation / 2,\n        color: normalizedColor(leftMidValue),\n        opacity: 1},\n      {offset: zeroLocation,\n        color: normalizedColor(zeroValue),\n        opacity: 1},\n      {offset: zeroLocation + (1 - zeroValue) / 2,\n        color: normalizedColor(rightMidValue),\n        opacity: 1},\n      {offset: 1, color: normalizedColor(rightValue), opacity: 1}\n    ];\n\n    if (gradientAppendingName === undefined) {\n      addOverlayGradient('intermediate-legend-gradient', stops, group);\n      gradientName = 'url(#intermediate-legend-gradient)';\n    } else {\n      addOverlayGradient(`${gradientAppendingName}`, stops, group);\n      gradientName = `url(#${gradientAppendingName})`;\n    }\n  }\n\n  let legendScale = d3.scaleLinear()\n    .range([0, width - 1.2])\n    .domain(isInput ? [0, range] : [minMax.min, minMax.max]);\n\n  let legendAxis = d3.axisBottom()\n    .scale(legendScale)\n    .tickFormat(d3.format(isInput ? 'd' : '.2f'))\n    .tickValues(isInput ? [0, range] : [minMax.min, 0, minMax.max]);\n  \n  let intermediateLegend = group.append('g')\n    .attr('class', `intermediate-legend-${curLayerIndex - 1}`)\n    .attr('transform', `translate(${x}, ${y})`);\n  \n  let legendGroup = intermediateLegend.append('g')\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\n    .call(legendAxis);\n  \n  legendGroup.selectAll('text')\n    .style('font-size', '9px')\n    .style('fill', intermediateColor);\n  \n  legendGroup.selectAll('path, line')\n    .style('stroke', intermediateColor);\n\n  intermediateLegend.append('rect')\n    .attr('width', width)\n    .attr('height', legendHeight)\n    .attr('transform', `rotate(${isInput ? 180 : 0},\n      ${width / 2}, ${legendHeight / 2})`)\n    .style('fill', gradientName);\n}\n\n/**\n * Draw an very neat arrow!\n * @param {object} arg \n * {\n *   group: element to append this arrow to\n *   sx: source x\n *   sy: source y\n *   tx: target x\n *   ty: target y\n *   dr: radius of curve (I'm using a circle)\n *   hFlip: the direction to choose the circle (there are always two ways)\n * }\n */\nexport const drawArrow = (arg) => {\n  let group = arg.group,\n    sx = arg.sx,\n    sy = arg.sy,\n    tx = arg.tx,\n    ty = arg.ty,\n    dr = arg.dr,\n    hFlip = arg.hFlip,\n    marker = arg.marker === undefined ? 'marker' : arg.marker;\n\n  /* Cool graphics trick -> merge translate and scale together\n  translateX = (1 - scaleX) * tx,\n  translateY = (1 - scaleY) * ty;\n  */\n  \n  let arrow = group.append('g')\n    .attr('class', 'arrow-group');\n\n  arrow.append('path')\n    .attr(\"d\", `M${sx},${sy}A${dr},${dr} 0 0,${hFlip ? 0 : 1} ${tx},${ty}`)\n    .attr('marker-end', `url(#${marker})`)\n    .style('stroke', 'gray')\n    .style('fill', 'none');\n}\n","/* global d3 */\n\nimport {\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n  needRedrawStore, cnnLayerMinMaxStore, shouldIntermediateAnimateStore,\n  hoverInfoStore, detailedModeStore, intermediateLayerPositionStore\n} from '../stores.js';\nimport {\n  getExtent, getOutputKnot, getInputKnot, gappedColorScale\n} from './draw-utils.js';\nimport {\n  drawOutput\n} from './overview-draw.js';\nimport {\n  drawIntermediateLayerLegend, moveLayerX, addOverlayGradient,\n  drawArrow\n} from './intermediate-utils.js';\nimport { singleConv } from '../utils/cnn.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst plusSymbolRadius = overviewConfig.plusSymbolRadius;\nconst numLayers = overviewConfig.numLayers;\nconst intermediateColor = overviewConfig.intermediateColor;\nconst kernelRectLength = overviewConfig.kernelRectLength;\nconst svgPaddings = overviewConfig.svgPaddings;\nconst gapRatio = overviewConfig.gapRatio;\nconst overlayRectOffset = overviewConfig.overlayRectOffset;\nconst formater = d3.format('.4f');\nlet isEndOfAnimation = false;\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet needRedraw = [undefined, undefined];\nneedRedrawStore.subscribe( value => {needRedraw = value;} )\n\nlet shouldIntermediateAnimate = undefined;\nshouldIntermediateAnimateStore.subscribe(value => {\n  shouldIntermediateAnimate = value;\n})\n\nlet detailedMode = undefined;\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\n\nlet intermediateLayerPosition = undefined;\nintermediateLayerPositionStore.subscribe ( value => {intermediateLayerPosition = value;} )\n\n// let curRightX = 0;\n\n/**\n * Draw the intermediate layer activation heatmaps\n * @param {element} image Neuron heatmap image\n * @param {number} range Colormap range\n * @param {function} colorScale Colormap\n * @param {number} length Image length\n * @param {[[number]]} dataMatrix Heatmap matrix\n */\nconst drawIntermidiateImage = (image, range, colorScale, length,\n  dataMatrix) => {\n  // Set up a buffer convas in order to resize image\n  let imageLength = length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  for (let i = 0; i < imageSingleArray.length; i+=4) {\n    let pixeIndex = Math.floor(i / 4);\n    let row = Math.floor(pixeIndex / imageLength);\n    let column = pixeIndex % imageLength;\n    let color = d3.rgb(colorScale((dataMatrix[row][column] + range / 2) / range));\n\n    imageSingleArray[i] = color.r;\n    imageSingleArray[i + 1] = color.g;\n    imageSingleArray[i + 2] = color.b;\n    imageSingleArray[i + 3] = 255;\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = nodeLength * 3;\n  largeCanvas.height = nodeLength * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n    0, 0, nodeLength * 3, nodeLength * 3);\n  \n  let imageDataURL = largeCanvas.toDataURL();\n  image.attr('xlink:href', imageDataURL);\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Create a node group for the intermediate layer\n * @param {number} curLayerIndex Intermediate layer index\n * @param {number} selectedI Clicked node index\n * @param {element} groupLayer Group element\n * @param {number} x Node's x\n * @param {number} y Node's y\n * @param {number} nodeIndex Node's index\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n * @param {bool} interaction Whether support interaction\n */\nconst createIntermediateNode = (curLayerIndex, selectedI, groupLayer, x, y,\n  nodeIndex, stride, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked, interaction) => {\n  let newNode = groupLayer.append('g')\n    .datum(cnn[curLayerIndex - 1][nodeIndex])\n    .attr('class', 'intermediate-node')\n    .attr('cursor', interaction ? 'pointer': 'default')\n    .attr('pointer-events', interaction ? 'all': 'none')\n    .attr('node-index', nodeIndex)\n    .on('mouseover', intermediateNodeMouseOverHandler)\n    .on('mouseleave', intermediateNodeMouseLeaveHandler)\n    .on('click', (d, g, i) => intermediateNodeClicked(d, g, i, selectedI,\n      curLayerIndex));\n  \n  newNode.append('image')\n    .attr('width', nodeLength)\n    .attr('height', nodeLength)\n    .attr('x', x)\n    .attr('y', y);\n\n  // Overlay the image with a mask of many small rectangles\n  let strideTime = Math.floor(nodeLength / stride);\n  let overlayGroup = newNode.append('g')\n    .attr('class', 'overlay-group')\n    .attr('transform', `translate(${x}, ${y})`);\n  \n  for (let i = 0; i < strideTime; i++) {\n    for (let j = 0; j < strideTime; j++) {\n      overlayGroup.append('rect')\n        .attr('class', `mask-overlay mask-${i}-${j}`)\n        .attr('width', stride)\n        .attr('height', stride)\n        .attr('x', i * stride)\n        .attr('y', j * stride)\n        .style('fill', 'var(--light-gray)')\n        .style('stroke', 'var(--light-gray)')\n        .style('opacity', 1);\n    }\n  }\n\n  // Add a rectangle to show the border\n  newNode.append('rect')\n    .attr('class', 'bounding')\n    .attr('width', nodeLength)\n    .attr('height', nodeLength)\n    .attr('x', x)\n    .attr('y', y)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor)\n    .style('stroke-width', 1);\n  \n  return newNode;\n}\n\nconst startOutputAnimation = (kernelGroup, tickTime1D, stride, delay,\n  curLayerIndex) => {\n  const slidingAnimation = () => {\n    let originX = +kernelGroup.attr('data-origin-x');\n    let originY = +kernelGroup.attr('data-origin-y');\n    let oldTick = +kernelGroup.attr('data-tick');\n    let i = (oldTick) % tickTime1D;\n    let j = Math.floor((oldTick) / tickTime1D);\n    let x = originX + i * stride;\n    let y = originY + j * stride;\n    let newTick = (oldTick + 1) % (tickTime1D * tickTime1D);\n\n    // Remove one mask rect at each tick\n    svg.selectAll(`rect.mask-${i}-${j}`)\n      .transition('window-sliding-mask')\n      .delay(delay + 100)\n      .duration(300)\n      .style('opacity', 0);\n\n      kernelGroup.attr('data-tick', newTick)\n      .transition('window-sliding-input')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${x}, ${y})`)\n      .on('end', () => {\n        if (newTick === 0) {\n          /* Uncomment to wrap the sliding\n          svg.selectAll(`rect.mask-overlay`)\n            .transition('window-sliding-mask')\n            .delay(delay - 200)\n            .duration(300)\n            .style('opacity', 1);\n          */\n\n          // Stop the animation\n          // Be careful with animation racing so call this function here instead\n          // of under selectALL\n          if (!isEndOfAnimation) {\n            animationButtonClicked(curLayerIndex);\n          }\n        }\n        if (shouldIntermediateAnimate) {\n          slidingAnimation();\n        }\n      });\n  }\n  slidingAnimation();\n}\n\nconst startIntermediateAnimation = (kernelGroupInput, kernelGroupResult,\n  tickTime1D, stride) => {\n  let delay = 200;\n  const slidingAnimation = () => {\n    let originX = +kernelGroupInput.attr('data-origin-x');\n    let originY = +kernelGroupInput.attr('data-origin-y');\n    let originXResult = +kernelGroupResult.attr('data-origin-x');\n    let oldTick = +kernelGroupInput.attr('data-tick');\n    let i = (oldTick) % tickTime1D;\n    let j = Math.floor((oldTick) / tickTime1D);\n    let x = originX + i * stride;\n    let y = originY + j * stride;\n    let xResult = originXResult + (oldTick % tickTime1D) * stride;\n    let newTick = (oldTick + 1) % (tickTime1D * tickTime1D);\n\n    // Remove one mask rect at each tick\n    svg.selectAll(`rect.mask-${i}-${j}`)\n      .transition('window-sliding-mask')\n      .delay(delay + 100)\n      .duration(300)\n      .style('opacity', 0);\n\n    kernelGroupInput.attr('data-tick', newTick)\n      .transition('window-sliding-input')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${x}, ${y})`);\n\n    kernelGroupResult.attr('data-tick', newTick)\n      .transition('window-sliding-result')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${xResult}, ${y})`)\n      .on('end', () => {\n        /* Uncomment to wrap the sliding\n        if (newTick === 0) {\n          svg.selectAll(`rect.mask-overlay`)\n            .transition('window-sliding-mask')\n            .delay(delay - 200)\n            .duration(300)\n            .style('opacity', 1);\n        }\n        */\n        if (shouldIntermediateAnimate) {\n          slidingAnimation();\n        }\n      });\n  }\n  slidingAnimation();\n}\n\nconst animationButtonClicked = (curLayerIndex) => {\n  if (d3.event !== null) {\n    d3.event.stopPropagation();\n  }\n  \n  let delay = 200;\n  let tickTime1D = nodeLength / (kernelRectLength * 3);\n  let stride = kernelRectLength * 3; \n\n  if (isEndOfAnimation) {\n    // Start the animation\n    shouldIntermediateAnimateStore.set(true);\n\n    // Show kernel\n    svg.selectAll('.kernel-clone')\n      .transition()\n      .duration(300)\n      .style('opacity', 1)\n\n    // Restore the mask\n    svg.selectAll(`rect.mask-overlay`)\n      .transition()\n      .duration(300)\n      .style('opacity', 1);\n\n    // Start the intermediate animation\n    for (let i  = 0; i < nodeCoordinate[curLayerIndex - 1].length; i++) {\n      startIntermediateAnimation(d3.select(`.kernel-input-${i}`),\n        d3.select(`.kernel-result-${i}`), tickTime1D, stride);\n    }\n\n    // Start the output animation\n    startOutputAnimation(d3.select('.kernel-output'),\n      tickTime1D, stride, delay, curLayerIndex);\n    \n    // Change the flow edge style\n    svg.selectAll('path.flow-edge')\n      .attr('stroke-dasharray', '4 2')\n      .attr('stroke-dashoffset', 0)\n      .each((d, i, g) => animateEdge(d, i, g, 0 - 1000));\n\n    // Change button icon\n    svg.select('.animation-control-button')\n      .attr('xlink:href', 'PUBLIC_URL/assets/img/fast_forward.svg');\n    \n    isEndOfAnimation = false;\n\n  } else {\n    // End the animation\n    shouldIntermediateAnimateStore.set(false);\n    \n    // Show all intermediate and output results\n    svg.selectAll(`rect.mask-overlay`)\n      .transition('skip')\n      .duration(600)\n      .style('opacity', 0);\n    \n    // Move kernel to the beginning to prepare for the next animation\n    let kernelClones = svg.selectAll('.kernel-clone');\n    kernelClones.attr('data-tick', 0)\n      .transition('skip')\n      .duration(300)\n      .style('opacity', 0)\n      .on('end', (d, i, g) => {\n        let element = d3.select(g[i]);\n        let originX = +element.attr('data-origin-x');\n        let originY = +element.attr('data-origin-y');\n        element.attr('transform', `translate(${originX}, ${originY})`);\n      });\n    \n    // Change flow edge style\n    svg.selectAll('path.flow-edge')\n      .interrupt()\n      .attr('stroke-dasharray', '0 0');\n    \n    // Change button icon\n    svg.select('.animation-control-button')\n      .attr('xlink:href', 'PUBLIC_URL/assets/img/redo.svg');\n    \n    isEndOfAnimation = true;\n  }\n}\n\nconst animateEdge = (d, i, g, dashoffset) => {\n  let curPath = d3.select(g[i]);\n  curPath.transition()\n    .duration(60000)\n    .ease(d3.easeLinear)\n    .attr('stroke-dashoffset', dashoffset)\n    .on('end', (d, i, g) => {\n      if (shouldIntermediateAnimate) {\n        animateEdge(d, i, g, dashoffset - 2000);\n      }\n    });\n}\n\n/**\n * Draw one intermediate layer\n * @param {number} curLayerIndex \n * @param {number} leftX X value of intermediate layer left border\n * @param {number} rightX X value of intermediate layer right border\n * @param {number} rightStart X value of right component starting anchor\n * @param {number} intermediateGap The inner gap\n * @param {number} d Clicked node bounded data\n * @param {number} i Clicked node index\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n */\nconst drawIntermediateLayer = (curLayerIndex, leftX, rightX, rightStart,\n  intermediateGap, d, i, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked) => {\n  \n  // curRightX = rightStart;\n\n  // Add the intermediate layer\n  let intermediateLayer = svg.append('g')\n    .attr('class', 'intermediate-layer')\n    .style('opacity', 0);\n  \n  // Recovert the animation counter\n  isEndOfAnimation = false;\n  \n  // Tried to add a rectangle to block the intermediate because of webkit's\n  // horrible support (decade old bug) for foreignObject. It doesnt work either.\n  // https://bugs.webkit.org/show_bug.cgi?id=23113\n  // (1). ForeignObject's inside position is wrong on webkit\n  // (2). 'opacity' of ForeignObject doesn't work on webkit\n  // (3). ForeignObject always show up at the front regardless the svg\n  //      stacking order on webkit\n\n  let intermediateX1 = leftX + nodeLength + intermediateGap;\n  let intermediateX2 = intermediateX1 + nodeLength + intermediateGap * 1.5;\n\n  let range = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n  let colorScale = layerColorScales[d.type];\n  let intermediateMinMax = [];\n  \n  // Copy the previsious layer to construct foreignObject placeholder\n  // Also add edges from/to the intermediate layer in this loop\n  let linkData = [];\n\n  // Accumulate the intermediate sum\n  // let itnermediateSumMatrix = init2DArray(d.output.length,\n  //  d.output.length, 0);\n\n  // Compute the min max of all kernel weights in the intermediate layer\n  let kernelExtents = d.inputLinks.map(link => getExtent(link.weight));\n  let kernelExtent = kernelExtents.reduce((acc, cur) => {\n    return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n  })\n  let kernelRange = 2 * (Math.round(\n    Math.max(...kernelExtent.map(Math.abs)) * 1000) / 1000);\n  let kernelColorGap = 0.2;\n\n  // Compute stride for the kernel animation\n  let stride = kernelRectLength * 3; \n\n  // Also add the overlay mask on the output node\n  let outputY = nodeCoordinate[curLayerIndex][i].y;\n  let curNode = svg.select(`#layer-${curLayerIndex}-node-${i}`);\n  let outputOverlayGroup = curNode.append('g')\n    .attr('class', 'overlay-group')\n    .attr('transform', `translate(${rightX}, ${outputY})`);\n\n  let strideTime = Math.floor(nodeLength / stride);\n  \n  for (let i = 0; i < strideTime; i++) {\n    for (let j = 0; j < strideTime; j++) {\n      outputOverlayGroup.append('rect')\n        .attr('class', `mask-overlay mask-${i}-${j}`)\n        .attr('width', stride)\n        .attr('height', stride)\n        .attr('x', i * stride)\n        .attr('y', j * stride)\n        .style('fill', 'var(--light-gray)')\n        .style('stroke', 'var(--light-gray)')\n        .style('opacity', 1);\n    }\n  }\n\n  // Make sure the bounding box is on top of other things\n  curNode.select('rect.bounding').raise();\n\n  // Add sliding kernel for the output node\n  let kernelGroup = intermediateLayer.append('g')\n    .attr('class', `kernel kernel-output kernel-clone`)\n    .attr('transform', `translate(${rightX}, ${outputY})`);\n\n  kernelGroup.append('rect')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', kernelRectLength * 3)\n    .attr('height', kernelRectLength * 3)\n    .attr('fill', 'none')\n    .attr('stroke', intermediateColor);\n  \n  kernelGroup.attr('data-tick', 0)\n    .attr('data-origin-x', rightX)\n    .attr('data-origin-y', outputY);\n\n  let delay = 200;\n  let tickTime1D = nodeLength / (kernelRectLength * 3);\n\n  startOutputAnimation(kernelGroup, tickTime1D, stride, delay, curLayerIndex);\n\n  // First intermediate layer\n  nodeCoordinate[curLayerIndex - 1].forEach((n, ni) => {\n\n    // Compute the intermediate value\n    let inputMatrix = cnn[curLayerIndex - 1][ni].output;\n    let kernelMatrix = cnn[curLayerIndex][i].inputLinks[ni].weight;\n    let interMatrix = singleConv(inputMatrix, kernelMatrix);\n\n    // Compute the intermediate layer min max\n    intermediateMinMax.push(getExtent(interMatrix));\n\n    // Update the intermediate sum\n    // itnermediateSumMatrix = matrixAdd(itnermediateSumMatrix, interMatrix);\n\n    // Layout the canvas and rect\n    let newNode = createIntermediateNode(curLayerIndex, i, intermediateLayer,\n      intermediateX1, n.y, ni, stride, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked, true);\n    \n    // Draw the image\n    let image = newNode.select('image');\n    drawIntermidiateImage(image, range, colorScale, d.output.length,\n      interMatrix);      \n\n    // Edge: input -> intermediate1\n    linkData.push({\n      source: getOutputKnot({x: leftX, y: n.y}),\n      target: getInputKnot({x: intermediateX1, y: n.y}),\n      name: `input-${ni}-inter1-${ni}`\n    });\n\n    // Edge: intermediate1 -> intermediate2-1\n    linkData.push({\n      source: getOutputKnot({x: intermediateX1, y: n.y}),\n      target: getInputKnot({x: intermediateX2,\n        y: nodeCoordinate[curLayerIndex][i].y}),\n      name: `inter1-${ni}-inter2-1`\n    });\n\n    // Create a small kernel illustration\n    // Here we minus 2 because of no padding\n    // let tickTime1D = nodeLength / (kernelRectLength) - 2;\n    let kernelRectX = leftX - kernelRectLength * 3 * 2;\n    let kernelGroup = intermediateLayer.append('g')\n      .attr('class', `kernel kernel-${ni}`)\n      .attr('transform', `translate(${kernelRectX}, ${n.y})`);\n\n    let weightText = 'Kernel weights: [';\n    let f2 = d3.format('.2f');\n    for (let r = 0; r < kernelMatrix.length; r++) {\n      for (let c = 0; c < kernelMatrix[0].length; c++) {\n        kernelGroup.append('rect')\n          .attr('class', 'kernel')\n          .attr('x', kernelRectLength * c)\n          .attr('y', kernelRectLength * r)\n          .attr('width', kernelRectLength)\n          .attr('height', kernelRectLength)\n          .attr('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n            kernelMatrix[r][c], kernelColorGap));\n\n        let sep = '';\n        if (c === 0 && r == 0) { sep = ''; }\n        else if (c === 0) { sep = '; '; }\n        else { sep = ', '; }\n        weightText = weightText.concat(sep, `${f2(kernelMatrix[r][c])}`);\n      }\n    }\n    weightText = weightText.concat(']');\n\n    kernelGroup.append('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', kernelRectLength * 3)\n      .attr('height', kernelRectLength * 3)\n      .attr('fill', 'none')\n      .attr('stroke', intermediateColor);\n    \n    kernelGroup.style('pointer-events', 'all')\n      .style('cursor', 'crosshair')\n      .on('mouseover', () => {\n        hoverInfoStore.set( {show: true, text: weightText} );\n      })\n      .on('mouseleave', () => {\n        hoverInfoStore.set( {show: false, text: weightText} );\n      })\n      .on('click', () => {d3.event.stopPropagation()});\n\n    // Sliding the kernel on the input channel and result channel at the same\n    // time\n    let kernelGroupInput = kernelGroup.clone(true)\n      .style('pointer-events', 'none')\n      .style('cursor', 'pointer')\n      .classed('kernel-clone', true)\n      .classed(`kernel-input-${ni}`, true);\n\n    kernelGroupInput.style('opacity', 0.9)\n      .selectAll('rect.kernel')\n      .style('opacity', 0.7);\n\n    kernelGroupInput.attr('transform', `translate(${leftX}, ${n.y})`)\n      .attr('data-tick', 0)\n      .attr('data-origin-x', leftX)\n      .attr('data-origin-y', n.y);\n\n    let kernelGroupResult = kernelGroup.clone(true)\n      .style('pointer-events', 'none')\n      .style('cursor', 'pointer')\n      .classed('kernel-clone', true)\n      .classed(`kernel-result-${ni}`, true);\n\n    kernelGroupResult.style('opacity', 0.9)\n      .selectAll('rect.kernel')\n      .style('fill', 'none');\n\n    kernelGroupResult.attr('transform',\n      `translate(${intermediateX1}, ${n.y})`)\n      .attr('data-origin-x', intermediateX1)\n      .attr('data-origin-y', n.y);\n    \n    startIntermediateAnimation(kernelGroupInput, kernelGroupResult, tickTime1D,\n      stride);\n  });\n\n  // Aggregate the intermediate min max\n  let aggregatedExtent = intermediateMinMax.reduce((acc, cur) => {\n    return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n  })\n  let aggregatedMinMax = {min: aggregatedExtent[0], max: aggregatedExtent[1]};\n\n  // Draw the plus operation symbol\n  let symbolY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2;\n  let symbolRectHeight = 1;\n  let symbolGroup = intermediateLayer.append('g')\n    .attr('class', 'plus-symbol')\n    .attr('transform', `translate(${intermediateX2 + plusSymbolRadius}, ${symbolY})`);\n  \n  symbolGroup.append('rect')\n    .attr('x', -plusSymbolRadius)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', 2 * plusSymbolRadius)\n    .attr('height', 2 * plusSymbolRadius)\n    .attr('rx', 3)\n    .attr('ry', 3)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor);\n  \n  symbolGroup.append('rect')\n    .attr('x', -(plusSymbolRadius - 3))\n    .attr('y', -symbolRectHeight / 2)\n    .attr('width', 2 * (plusSymbolRadius - 3))\n    .attr('height', symbolRectHeight)\n    .style('fill', intermediateColor);\n\n  symbolGroup.append('rect')\n    .attr('x', -symbolRectHeight / 2)\n    .attr('y', -(plusSymbolRadius - 3))\n    .attr('width', symbolRectHeight)\n    .attr('height', 2 * (plusSymbolRadius - 3))\n    .style('fill', intermediateColor);\n\n  // Place the bias rectangle below the plus sign if user clicks the firrst\n  // conv node\n  if (i == 0) {\n    // Add bias symbol to the plus symbol\n    symbolGroup.append('circle')\n        .attr('cx', 0)\n        .attr('cy', nodeLength / 2 + kernelRectLength)\n        .attr('r', 4)\n        .style('stroke', intermediateColor)\n        .style('cursor', 'crosshair')\n        .style('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n          d.bias, kernelColorGap))\n        .on('mouseover', () => {\n          hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n        })\n        .on('mouseleave', () => {\n          hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n        });\n\n    // Link from bias to the plus symbol\n    linkData.push({\n      source: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength},\n      target: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 + plusSymbolRadius},\n      name: `bias-plus`\n    });\n  } else {\n    // Add bias symbol to the plus symbol\n    symbolGroup.append('circle')\n      .attr('cx', 0)\n      .attr('cy', -nodeLength / 2 - kernelRectLength)\n      .attr('r', 4)\n      .style('stroke', intermediateColor)\n      .style('cursor', 'crosshair')\n      .style('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n        d.bias, kernelColorGap))\n      .on('mouseover', () => {\n        hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n      })\n      .on('mouseleave', () => {\n        hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n      });\n    \n    // Link from bias to the plus symbol\n    linkData.push({\n      source: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y},\n      target: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 - plusSymbolRadius},\n      name: `bias-plus`\n    });\n  }\n\n  // Link from the plus symbol to the output\n  linkData.push({\n    source: getOutputKnot({x: intermediateX2 + 2 * plusSymbolRadius - nodeLength,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: rightX,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `symbol-output`\n  });\n  \n  // Output -> next layer\n  linkData.push({\n    source: getOutputKnot({x: rightX,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: rightStart,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `output-next`\n  });\n\n  // Draw the layer label\n  intermediateLayer.append('g')\n    .attr('class', 'layer-intermediate-label layer-label')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .classed('hidden', detailedMode)\n    .append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('font-weight', 800)\n    .style('opacity', '0.8')\n    .text('intermediate');\n  \n  intermediateLayer.append('g')\n    .attr('class', 'animation-control')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 4;\n      return `translate(${x}, ${y})`;\n    })\n    .on('click', () => animationButtonClicked(curLayerIndex))\n    .append('image')\n    .attr('class', 'animation-control-button')\n    .attr('xlink:href', 'PUBLIC_URL/assets/img/fast_forward.svg')\n    .attr('x', 50)\n    .attr('y', 0)\n    .attr('height', 13)\n    .attr('width', 13);\n\n  // Draw the detailed model layer label\n  intermediateLayer.append('g')\n    .attr('class', 'layer-intermediate-label layer-detailed-label')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n      return `translate(${x}, ${y})`;\n    })\n    .classed('hidden', !detailedMode)\n    .append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', '0.7')\n    .style('font-weight', 800)\n    .append('tspan')\n    .text('intermediate')\n    .append('tspan')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .text(`(${cnn[curLayerIndex][0].output.length},\n      ${cnn[curLayerIndex][0].output[0].length},\n      ${cnn[curLayerIndex].length})`);\n\n  // Draw the edges\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n  \n  let edgeGroup = intermediateLayer.append('g')\n    .attr('class', 'edge-group')\n    .lower();\n  \n  let dashoffset = 0;\n\n  edgeGroup.selectAll('path')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .classed('flow-edge', d => d.name !== 'output-next')\n    .attr('id', d => `edge-${d.name}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', 1)\n    .style('stroke', intermediateColor);\n\n  edgeGroup.select('#edge-output-next')\n    .style('opacity', 0.1);\n  \n  edgeGroup.selectAll('path.flow-edge')\n    .attr('stroke-dasharray', '4 2')\n    .attr('stroke-dashoffset', 0)\n    .each((d, i, g) => animateEdge(d, i, g, dashoffset - 1000));\n  \n  return {intermediateLayer: intermediateLayer,\n    intermediateMinMax: aggregatedMinMax,\n    kernelRange: kernelRange,\n    kernelMinMax: {min: kernelExtent[0], max: kernelExtent[1]}};\n}\n\n/**\n * Add an annotation for the kernel and the sliding\n * @param {object} arg \n * {\n *  leftX: X value of the left border of intermedaite layer\n *  group: element group\n *  intermediateGap: the inner gap of intermediate layer\n *  isFirstConv: if this intermediate layer is after the first layer\n *  i: index of the selected node\n * }\n */\nconst drawIntermediateLayerAnnotation = (arg) => {\n  let leftX = arg.leftX,\n    curLayerIndex = arg.curLayerIndex,\n    group = arg.group,\n    intermediateGap = arg.intermediateGap,\n    isFirstConv = arg.isFirstConv,\n    i = arg.i;\n\n  let kernelAnnotation = group.append('g')\n    .attr('class', 'kernel-annotation');\n  \n  kernelAnnotation.append('text')\n    .text('Kernel')\n    .attr('class', 'annotation-text')\n    .attr('x', leftX - 2.5 * kernelRectLength * 3)\n    .attr('y', nodeCoordinate[curLayerIndex - 1][0].y + kernelRectLength * 3)\n    .style('dominant-baseline', 'baseline')\n    .style('text-anchor', 'end');\n\n  let sliderX, sliderY, arrowSX, arrowSY, dr;\n  let sliderX2, sliderY2, arrowSX2, arrowSY2, dr2, arrowTX2, arrowTY2;\n  \n  if (isFirstConv) {\n    sliderX = leftX;\n    sliderY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength +\n      kernelRectLength * 3;\n    arrowSX = leftX - 5;\n    arrowSY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength +\n      kernelRectLength * 3 + 5;\n    dr = 20;\n\n    sliderX2 = leftX;\n      sliderY2 = nodeCoordinate[curLayerIndex - 1][1].y + nodeLength +\n    kernelRectLength * 3;\n    arrowSX2 = leftX - kernelRectLength * 3;\n    arrowSY2 = nodeCoordinate[curLayerIndex - 1][1].y + nodeLength + 15;\n    arrowTX2 = leftX - 13;\n    arrowTY2 =  nodeCoordinate[curLayerIndex - 1][1].y + 15;\n    dr2 = 35;\n  } else {\n    sliderX = leftX - 3 * kernelRectLength * 3;\n    sliderY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 3;\n    arrowSX = leftX - 2 * kernelRectLength * 3 - 5;\n    arrowSY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength - 10;\n    dr = 50;\n\n    sliderX2 = leftX - 3 * kernelRectLength * 3;\n    sliderY2 = nodeCoordinate[curLayerIndex - 1][2].y - 3;\n    arrowTX2 = leftX - kernelRectLength * 3 - 4;\n    arrowTY2 = nodeCoordinate[curLayerIndex - 1][2].y + kernelRectLength * 3 + 6;\n    arrowSX2 = leftX - kernelRectLength * 3 - 13;\n    arrowSY2 = nodeCoordinate[curLayerIndex - 1][2].y + 26;\n    dr2 = 20;\n  }\n\n  let slideText = kernelAnnotation.append('text')\n    .attr('x', sliderX)\n    .attr('y', sliderY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', isFirstConv ? 'start' : 'end');\n  \n  slideText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Slide kernel over input channel');\n\n  slideText.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('to get intermediate result');\n\n  // slideText.append('tspan')\n  //   .attr('x', sliderX)\n  //   .attr('dy', '1em')\n  //   .style('dominant-baseline', 'hanging')\n  //   .text('');\n\n  slideText.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1.2em')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 700)\n    .text('Click ');\n  \n  slideText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 400)\n    .text('to learn more')\n\n  drawArrow({\n    group: group,\n    tx: leftX - 7,\n    ty: nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 2,\n    sx: arrowSX,\n    sy: arrowSY,\n    hFlip: !isFirstConv,\n    dr: dr,\n    marker: 'marker'\n  });\n\n  // Add kernel annotation\n  let slideText2 = kernelAnnotation.append('text')\n    .attr('x', sliderX2)\n    .attr('y', sliderY2)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', isFirstConv ? 'start' : 'end');\n\n  slideText2.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Each input chanel');\n\n  slideText2.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('gets a different kernel');\n\n  slideText2.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1.3em')\n    .style('font-weight', 700)\n    .style('dominant-baseline', 'hanging')\n    .text('Hover over ');\n\n  slideText2.append('tspan')\n    .style('font-weight', 400)\n    .style('dominant-baseline', 'hanging')\n    .text('to see value!')\n\n  drawArrow({\n    group: group,\n    tx: arrowTX2,\n    ty: arrowTY2,\n    sx: arrowSX2,\n    sy: arrowSY2,\n    dr: dr2,\n    hFlip: !isFirstConv,\n    marker: 'marker'\n  });\n\n\n  // Add annotation for the sum operation\n  let plusAnnotation = group.append('g')\n    .attr('class', 'plus-annotation');\n  \n  let intermediateX2 = leftX + 2 * nodeLength + 2.5 * intermediateGap;\n  let textX = intermediateX2;\n  let textY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n      kernelRectLength * 3;\n  \n  // Special case 1: first node\n  if (i === 0) { textX += 30; }\n\n  // Special case 2: last node \n  if (i === 9) {\n    textX = intermediateX2 + plusSymbolRadius - 10;\n    textY -= 2.5 * nodeLength;\n  }\n\n  let plusText = plusAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'start');\n  \n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Add up all intermediate');\n  \n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('results and then add bias');\n  \n  if (i === 9) {\n    drawArrow({\n      group: group,\n      sx: intermediateX2 + 50,\n      sy: nodeCoordinate[curLayerIndex][i].y - (nodeLength / 2 + kernelRectLength * 2),\n      tx: intermediateX2 + 2 * plusSymbolRadius + 5,\n      ty: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 - plusSymbolRadius,\n      dr: 50,\n      hFlip: false,\n      marker: 'marker-alt'\n    });\n  } else {\n    drawArrow({\n      group: group,\n      sx: intermediateX2 + 35,\n      sy: nodeCoordinate[curLayerIndex][i].y + nodeLength + kernelRectLength * 2,\n      tx: intermediateX2 + 2 * plusSymbolRadius + 5,\n      ty: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 + plusSymbolRadius,\n      dr: 30,\n      hFlip: true,\n      marker: 'marker-alt'\n    });\n  }\n\n  // Add annotation for the bias\n  let biasTextY = nodeCoordinate[curLayerIndex][i].y;\n  if (i === 0) {\n    biasTextY += nodeLength + 3 * kernelRectLength;\n  } else {\n    biasTextY -= 2 * kernelRectLength + 5;\n  }\n  plusAnnotation.append('text')\n    .attr('class', 'annotation-text')\n    .attr('x', intermediateX2 + plusSymbolRadius)\n    .attr('y', biasTextY)\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', i === 0 ? 'hanging' : 'baseline')\n    .text('Bias');\n}\n\n/**\n * Append a filled rectangle under a pair of nodes.\n * @param {number} curLayerIndex Index of the selected layer\n * @param {number} i Index of the selected node\n * @param {number} leftX X value of the left border of intermediate layer\n * @param {number} intermediateGap Inner gap of this intermediate layer\n * @param {number} padding Padding around the rect\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n */\nconst addUnderneathRect = (curLayerIndex, i, leftX,\n  intermediateGap, padding, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked) => {\n  // Add underneath rects\n  let underGroup = svg.select('g.underneath');\n\n  for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n    underGroup.append('rect')\n      .attr('class', 'underneath-gateway')\n      .attr('id', `underneath-gateway-${n}`)\n      .attr('x', leftX - padding)\n      .attr('y', nodeCoordinate[curLayerIndex - 1][n].y - padding)\n      .attr('width', (2 * nodeLength + intermediateGap) + 2 * padding)\n      .attr('height', nodeLength + 2 * padding)\n      .attr('rx', 10)\n      .style('fill', 'rgba(160, 160, 160, 0.2)')\n      .style('opacity', 0);\n    \n    // Register new events for input layer nodes\n    svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n      .style('pointer-events', 'all')\n      .style('cursor', 'pointer')\n      .on('mouseover', intermediateNodeMouseOverHandler)\n      .on('mouseleave', intermediateNodeMouseLeaveHandler)\n      .on('click', (d, ni, g) => intermediateNodeClicked(d, ni, g,\n        i, curLayerIndex));\n      // .on('click', (d, i) => {console.log(i)});\n  }\n  underGroup.lower();\n}\n\n/**\n * Add an overlaying rect\n * @param {string} gradientName Gradient name of overlay rect\n * @param {number} x X value of the overlaying rect\n * @param {number} y Y value of the overlaying rect\n * @param {number} width Rect width\n * @param {number} height Rect height\n */\nexport const addOverlayRect = (gradientName, x, y, width, height) => {\n  if (svg.select('.intermediate-layer-overlay').empty()) {\n    svg.append('g').attr('class', 'intermediate-layer-overlay');\n  }\n\n  let intermediateLayerOverlay = svg.select('.intermediate-layer-overlay');\n\n  let overlayRect = intermediateLayerOverlay.append('rect')\n    .attr('class', 'overlay')\n    .style('fill', `url(#${gradientName})`)\n    .style('stroke', 'none')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('x', x)\n    .attr('y', y)\n    .style('opacity', 0);\n  \n  overlayRect.transition('move')\n    .duration(800)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Redraw the layer if needed (entering the intermediate view to make sure\n * all layers have the same color scale)\n * @param {number} curLayerIndex Index of the selected layer\n * @param {number} i Index of the selected node\n */\nconst redrawLayerIfNeeded = (curLayerIndex, i) => {\n  // Determine the range for this layerview, and redraw the layer with\n  // smaller range so all layers have the same range\n  let rangePre = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n  let rangeCur = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n  let range = Math.max(rangePre, rangeCur);\n\n  if (rangePre > rangeCur) {\n    // Redraw the current layer (selected node)\n    svg.select(`g#layer-${curLayerIndex}-node-${i}`)\n      .select('image.node-image')\n      .each((d, g, i) => drawOutput(d, g, i, range));\n    \n    // Record the change so we will re-redraw the layer when user quits\n    // the intermediate view\n    needRedraw = [curLayerIndex, i];\n    needRedrawStore.set(needRedraw);\n    \n  } else if (rangePre < rangeCur) {\n    // Redraw the previous layer (whole layer)\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n      .selectAll('image.node-image')\n      .each((d, g, i) => drawOutput(d, g, i, range));\n\n    // Record the change so we will re-redraw the layer when user quits\n    // the intermediate view\n    needRedraw = [curLayerIndex - 1, undefined];\n    needRedrawStore.set(needRedraw);\n  }\n\n  // Compute the min, max value of all nodes in pre-layer and the selected\n  // node of cur-layer\n  let min = cnnLayerMinMax[curLayerIndex - 1].min,\n    max = cnnLayerMinMax[curLayerIndex - 1].max;\n\n  // Selected node\n  let n = cnn[curLayerIndex][i];\n  for (let r = 0; r < n.output.length; r++) {\n    for (let c = 0; c < n.output[0].length; c++) {\n      if (n.output[r][c] < min) { min = n.output[r][c]; }\n      if (n.output[r][c] > max) { max = n.output[r][c]; }\n    }\n  }\n\n  return {range: range, minMax: {min: min, max: max}};\n}\n\n/**\n * Draw the intermediate layer before conv_1_1\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv1 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  // Compute the target location\n  let targetX = nodeCoordinate[curLayerIndex - 1][0].x + 2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n  let leftX = nodeCoordinate[curLayerIndex - 1][0].x;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_1_1'] = targetX + nodeLength;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the selected layer\n  moveLayerX({layerIndex: curLayerIndex, targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the right shrink region\n  let rightStart = targetX + nodeLength + hSpaceAroundGap * gapRatio;\n  let rightGap = (width - rightStart - 10 * nodeLength) / 10;\n\n  // Move the right layers\n  for (let i = curLayerIndex + 1; i < numLayers; i++) {\n    let curX = rightStart + (i - (curLayerIndex + 1)) * (nodeLength + rightGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay gradient and rect\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n  {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n  {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient', stops);\n\n  addOverlayRect('overlay-gradient', rightStart - overlayRectOffset / 2,\n  0, width - rightStart + overlayRectOffset,\n  height + svgPaddings.top + svgPaddings.bottom);\n\n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n  drawIntermediateLayer(curLayerIndex, leftX, targetX, rightStart,\n    intermediateGap, d, i, intermediateNodeMouseOverHandler,\n    intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 8,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n\n  // Compute the selected node's min max\n  // Selected node\n  let min = Infinity, max = -Infinity;\n  let n = cnn[curLayerIndex][i];\n  for (let r = 0; r < n.output.length; r++) {\n  for (let c = 0; c < n.output[0].length; c++) {\n    if (n.output[r][c] < min) { min = n.output[r][c]; }\n    if (n.output[r][c] > max) { max = n.output[r][c]; }\n  }\n  }\n\n  let finalMinMax = {\n  min: Math.min(min, intermediateMinMax.min),\n  max: Math.max(max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n  .attr('class', 'intermediate-layer-annotation')\n  .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    isFirstConv: true,\n    i: i\n  });\n\n  let range = cnnLayerRanges.local[curLayerIndex];\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: 1,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    isInput: true,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10 - 25\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: finalMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: nodeCoordinate[curLayerIndex - 1][2].x,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_1_2\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv2 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  let targetX = nodeCoordinate[curLayerIndex - 1][0].x + 2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_1_2'] = targetX + nodeLength;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the selected layer\n  moveLayerX({layerIndex: curLayerIndex, targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the right shrink region\n  let rightStart = targetX + nodeLength + hSpaceAroundGap * gapRatio;\n  let rightGap = (width - rightStart - 8 * nodeLength) / 8;\n\n  // Move the right layers\n  for (let i = curLayerIndex + 1; i < numLayers; i++) {\n    let curX = rightStart + (i - (curLayerIndex + 1)) * (nodeLength + rightGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient-right', stops);\n\n  let leftRightRatio = (2 * nodeLength + hSpaceAroundGap * gapRatio) /\n    (8 * nodeLength + intermediateGap * 7);\n  let endingGradient = 0.85 + (0.95 - 0.85) * leftRightRatio;\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: endingGradient},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, nodeLength * 2 + hSpaceAroundGap * gapRatio + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n\n  // Draw the intermediate layer\n  let leftX = nodeCoordinate[curLayerIndex - 1][0].x;\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX, targetX, rightStart,\n      intermediateGap, d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n\n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: finalMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_2_1\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv3 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n\n  let targetX = nodeCoordinate[curLayerIndex][0].x;\n  let leftX = targetX - (2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2);\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_2_1'] = targetX + nodeLength;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Move the previous layer\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  moveLayerX({layerIndex: curLayerIndex,\n    targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 5 * nodeLength) / 5;\n  let rightStart = nodeCoordinate[curLayerIndex][0].x +\n    nodeLength + hSpaceAroundGap;\n\n  // Move the left layers\n  for (let i = 0; i < curLayerIndex - 1; i++) {\n    let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient-right', stops);\n\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, leftEnd - nodeCoordinate[0][0].x + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX,\n      nodeCoordinate[curLayerIndex][0].x, rightStart, intermediateGap,\n      d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n          \n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    minMax: finalMinMax,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_2_2\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv4 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  let targetX = nodeCoordinate[curLayerIndex][0].x;\n  let leftX = targetX - (2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2);\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_2_2'] = leftX;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Move the previous layer\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  moveLayerX({layerIndex: curLayerIndex,\n    targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 7 * nodeLength) / 7;\n  let rightStart = targetX + nodeLength + hSpaceAroundGap;\n\n  // Move the left layers\n  for (let i = 0; i < curLayerIndex - 1; i++) {\n    let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient-right', stops);\n\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, leftEnd - nodeCoordinate[0][0].x + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX,\n      nodeCoordinate[curLayerIndex][0].x, rightStart, intermediateGap,\n      d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n          \n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    group: intermediateLayer,\n    minMax: finalMinMax,\n    width: 2 * nodeLength + intermediateGap,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n","/* global d3, SmoothScroll */\n\nimport {\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n  cnnLayerMinMaxStore, isInSoftmaxStore, softmaxDetailViewStore,\n  hoverInfoStore, allowsSoftmaxAnimationStore, detailedModeStore\n} from '../stores.js';\nimport {\n  getOutputKnot, getInputKnot, gappedColorScale, getMidCoords\n} from './draw-utils.js';\nimport {\n  drawIntermediateLayerLegend, moveLayerX, addOverlayGradient,\n  drawArrow\n} from './intermediate-utils.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst plusSymbolRadius = overviewConfig.plusSymbolRadius;\nconst intermediateColor = overviewConfig.intermediateColor;\nconst kernelRectLength = overviewConfig.kernelRectLength;\nconst svgPaddings = overviewConfig.svgPaddings;\nconst gapRatio = overviewConfig.gapRatio;\nconst classList = overviewConfig.classLists;\nconst formater = d3.format('.4f');\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet isInSoftmax = undefined;\nisInSoftmaxStore.subscribe( value => {isInSoftmax = value;} )\n\nlet allowsSoftmaxAnimation = undefined;\nallowsSoftmaxAnimationStore.subscribe( value => {allowsSoftmaxAnimation = value;} )\n\nlet softmaxDetailViewInfo = undefined;\nsoftmaxDetailViewStore.subscribe( value => {softmaxDetailViewInfo = value;} )\n\nlet hoverInfo = undefined;\nhoverInfoStore.subscribe( value => {hoverInfo = value;} )\n\nlet detailedMode = undefined;\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\n\nlet layerIndexDict = {\n  'input': 0,\n  'conv_1_1': 1,\n  'relu_1_1': 2,\n  'conv_1_2': 3,\n  'relu_1_2': 4,\n  'max_pool_1': 5,\n  'conv_2_1': 6,\n  'relu_2_1': 7,\n  'conv_2_2': 8,\n  'relu_2_2': 9,\n  'max_pool_2': 10,\n  'output': 11\n}\n\nlet hasInitialized = false;\nlet logits = [];\nlet flattenFactoredFDict = {};\n\nconst moveLegend = (d, i, g, moveX, duration, restore) => {\n  let legend = d3.select(g[i]);\n\n  if (!restore) {\n    let previousTransform = legend.attr('transform');\n    let previousLegendX = +previousTransform.replace(/.*\\(([\\d\\.]+),.*/, '$1');\n    let previousLegendY = +previousTransform.replace(/.*,\\s([\\d\\.]+)\\)/, '$1');\n  \n    legend.transition('softmax')\n      .duration(duration)\n      .ease(d3.easeCubicInOut)\n      .attr('transform', `translate(${previousLegendX - moveX}, ${previousLegendY})`);\n    \n    // If not in restore mode, we register the previous location to the DOM element\n    legend.attr('data-preX', previousLegendX);\n    legend.attr('data-preY', previousLegendY);\n  } else {\n    // Restore the recorded location\n    let previousLegendX = +legend.attr('data-preX');\n    let previousLegendY = +legend.attr('data-preY');\n\n    legend.transition('softmax')\n      .duration(duration)\n      .ease(d3.easeCubicInOut)\n      .attr('transform', `translate(${previousLegendX}, ${previousLegendY})`);\n  }\n}\n\nconst logitCircleMouseOverHandler = (i) => {\n  // Update the hover info UI\n  hoverInfoStore.set({\n    show: true,\n    text: `Logit: ${formater(logits[i])}`\n  })\n\n  // Highlight the text in the detail view\n  softmaxDetailViewInfo.highlightI = i;\n  softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n  let logitLayer = svg.select('.logit-layer');\n  let logitLayerLower = svg.select('.underneath');\n  let intermediateLayer = svg.select('.intermediate-layer');\n\n  // Highlight the circle\n  logitLayer.select(`#logit-circle-${i}`)\n    .style('stroke-width', 2);\n\n  // Highlight the associated plus symbol\n  intermediateLayer.select(`#plus-symbol-clone-${i}`)\n    .style('opacity', 1)\n    .select('circle')\n    .style('fill', d => d.fill);\n  \n  // Raise the associated edge group\n  logitLayerLower.select(`#logit-lower-${i}`).raise();\n\n  // Highlight the associated edges\n  logitLayerLower.selectAll(`.softmax-abstract-edge-${i}`)\n    .style('stroke-width', 0.8)\n    .style('stroke', '#E0E0E0');\n\n  logitLayerLower.selectAll(`.softmax-edge-${i}`)\n    .style('stroke-width', 1)\n    .style('stroke', '#E0E0E0');\n  \n  logitLayerLower.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 3)\n    .style('stroke', '#E0E0E0');\n\n  logitLayer.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 3)\n    .style('stroke', '#E0E0E0');\n}\n\nconst logitCircleMouseLeaveHandler = (i) => {\n  // screenshot\n  // return;\n\n  // Update the hover info UI\n  hoverInfoStore.set({\n    show: false,\n    text: `Logit: ${formater(logits[i])}`\n  })\n\n  // Dehighlight the text in the detail view\n  softmaxDetailViewInfo.highlightI = -1;\n  softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n  let logitLayer = svg.select('.logit-layer');\n  let logitLayerLower = svg.select('.underneath');\n  let intermediateLayer = svg.select('.intermediate-layer');\n\n  // Restore the circle\n  logitLayer.select(`#logit-circle-${i}`)\n    .style('stroke-width', 1);\n\n  // Restore the associated plus symbol\n  intermediateLayer.select(`#plus-symbol-clone-${i}`)\n    .style('opacity', 0.2);\n\n  // Restore the associated edges\n  logitLayerLower.selectAll(`.softmax-abstract-edge-${i}`)\n    .style('stroke-width', 0.2)\n    .style('stroke', '#EDEDED');\n\n  logitLayerLower.selectAll(`.softmax-edge-${i}`)\n    .style('stroke-width', 0.2)\n    .style('stroke', '#F1F1F1');\n\n  logitLayerLower.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 1.2)\n    .style('stroke', '#E5E5E5');\n  \n  logitLayer.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 1.2)\n    .style('stroke', '#E5E5E5');\n}\n\n// This function is binded to the detail view in Overview.svelte\nexport const softmaxDetailViewMouseOverHandler = (event) => {\n  logitCircleMouseOverHandler(event.detail.curI);\n}\n\n// This function is binded to the detail view in Overview.svelte\nexport const softmaxDetailViewMouseLeaveHandler = (event) => {\n  logitCircleMouseLeaveHandler(event.detail.curI);\n}\n\nconst drawLogitLayer = (arg) => {\n  let curLayerIndex = arg.curLayerIndex,\n    moveX = arg.moveX,\n    softmaxLeftMid = arg.softmaxLeftMid,\n    selectedI = arg.selectedI,\n    intermediateX1 = arg.intermediateX1,\n    intermediateX2 = arg.intermediateX2,\n    pixelWidth = arg.pixelWidth,\n    pixelHeight = arg.pixelHeight,\n    topY = arg.topY,\n    bottomY = arg.bottomY,\n    softmaxX = arg.softmaxX,\n    middleGap = arg.middleGap,\n    middleRectHeight = arg.middleRectHeight,\n    symbolGroup = arg.symbolGroup,\n    symbolX = arg.symbolX,\n    flattenRange = arg.flattenRange;\n\n  let logitLayer = svg.select('.intermediate-layer')\n    .append('g')\n    .attr('class', 'logit-layer')\n    .raise();\n  \n  // Minotr layer ordering change\n  let tempClone = svg.select('.intermediate-layer')\n    .select('.flatten-layer')\n    .select('.plus-symbol')\n    .clone(true)\n    .attr('class', 'temp-clone-plus-symbol')\n    .attr('transform', `translate(${symbolX - moveX},\n      ${nodeCoordinate[curLayerIndex][selectedI].y + nodeLength / 2})`)\n    // Cool hack -> d3 clone doesnt clone events, make the front object pointer\n    // event transparent so users can trigger the underlying object's event!\n    .style('pointer-events', 'none')\n    .remove();\n\n  let tempPlusSymbol = logitLayer.append(() => tempClone.node());\n  \n  svg.select('.softmax-symbol').raise();\n\n  let logitLayerLower = svg.select('.underneath')\n    .append('g')\n    .attr('class', 'logit-layer-lower')\n    .lower();\n  \n  // Use circles to encode logit values\n  let centerX = softmaxLeftMid - moveX * 4 / 5;\n\n  // Get all logits\n  logits = [];\n  for (let i = 0; i < cnn[layerIndexDict['output']].length; i++) {\n    logits.push(cnn[layerIndexDict['output']][i].logit);\n  }\n\n  // Construct a color scale for the logit values\n  let logitColorScale = d3.scaleLinear()\n    .domain(d3.extent(logits))\n    .range([0.2, 1]);\n  \n  // Draw the current logit circle before animation\n  let logitRadius = 8;\n  logitLayer.append('circle')\n    .attr('class', 'logit-circle')\n    .attr('id', `logit-circle-${selectedI}`)\n    .attr('cx', centerX)\n    .attr('cy', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .attr('r', logitRadius)\n    .style('fill', layerColorScales.logit(logitColorScale(logits[selectedI])))\n    .style('cursor', 'crosshair')\n    .style('pointer-events', 'all')\n    .style('stroke', intermediateColor)\n    .on('mouseover', () => logitCircleMouseOverHandler(selectedI))\n    .on('mouseleave', () => logitCircleMouseLeaveHandler(selectedI))\n    .on('click', () => { d3.event.stopPropagation() });\n  \n  // Show the logit circle corresponding label\n  let softmaxDetailAnnotation = svg.select('.intermediate-layer-annotation')\n    .select('.softmax-detail-annoataion');\n\n  softmaxDetailAnnotation.select(`#logit-text-${selectedI}`)\n    .style('opacity', 1);\n\n  tempPlusSymbol.raise();\n\n  // Draw another line from plus symbol to softmax symbol\n  logitLayer.append('line')\n    .attr('class', `logit-output-edge-${selectedI}`)\n    .attr('x1', intermediateX2 - moveX + plusSymbolRadius * 2)\n    .attr('x2', softmaxX)\n    .attr('y1', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .attr('y2', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .style('fill', 'none')\n    .style('stroke', '#EAEAEA')\n    .style('stroke-width', '1.2')\n    .lower();\n\n  // Add the flatten to logit links\n  let linkData = [];\n  let flattenLength = cnn.flatten.length / cnn[1].length;\n  let underneathIs = [...Array(cnn[layerIndexDict['output']].length).keys()]\n    .filter(d => d != selectedI);\n  let curIIndex = 0;\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n\n  const drawOneEdgeGroup = () => {\n    // Only draw the new group if it is in the softmax mode\n    if (!allowsSoftmaxAnimation) {\n      svg.select('.underneath')\n        .selectAll(`.logit-lower`)\n        .remove();\n      return;\n    }\n\n    let curI = underneathIs[curIIndex];\n\n    let curEdgeGroup = svg.select('.underneath')\n      .select(`#logit-lower-${curI}`);\n    \n    if (curEdgeGroup.empty()) {\n      curEdgeGroup = svg.select('.underneath')\n        .append('g')\n        .attr('class', 'logit-lower')\n        .attr('id', `logit-lower-${curI}`)\n        .style('opacity', 0);\n\n      // Hack: now show all edges, only draw 1/3 of the actual edges\n      for (let f = 0; f < flattenLength; f += 3) {\n        let loopFactors = [0, 9];\n        loopFactors.forEach(l => {\n          let factoredF = f + l * flattenLength;\n    \n          // Flatten -> output\n          linkData.push({\n            source: {x: intermediateX1 + pixelWidth + 3 - moveX,\n              y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n            target: {x: intermediateX2 - moveX,\n              y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2},\n            index: factoredF,\n            weight: cnn.flatten[factoredF].outputLinks[curI].weight,\n            color: '#F1F1F1',\n            width: 0.5,\n            opacity: 1,\n            class: `softmax-edge-${curI}`\n          });\n        });\n      }\n\n      // Draw middle rect to logits\n      for (let vi = 0; vi < cnn[layerIndexDict['output']].length - 2; vi++) {\n        linkData.push({\n          source: {x: intermediateX1 + pixelWidth + 3 - moveX,\n            y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n            middleRectHeight * (vi + 0.5)},\n          target: {x: intermediateX2 - moveX,\n            y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2},\n          index: -1,\n          color: '#EDEDED',\n          width: 0.5,\n          opacity: 1,\n          class: `softmax-abstract-edge-${curI}`\n        });\n      }\n\n      // Render the edges on the underneath layer\n      curEdgeGroup.selectAll(`path.softmax-edge-${curI}`)\n        .data(linkData)\n        .enter()\n        .append('path')\n        .attr('class', d => d.class)\n        .attr('id', d => `edge-${d.name}`)\n        .attr('d', d => linkGen({source: d.source, target: d.target}))\n        .style('fill', 'none')\n        .style('stroke-width', d => d.width)\n        .style('stroke', d => d.color === undefined ? intermediateColor : d.color)\n        .style('opacity', d => d.opacity)\n        .style('pointer-events', 'none');\n    }\n    \n    let curNodeGroup = logitLayer.append('g')\n      .attr('class', `logit-layer-${curI}`)\n      .style('opacity', 0);\n    \n    // Draw the plus symbol\n    let symbolClone = symbolGroup.clone(true)\n      .style('opacity', 0);\n\n    // Change the style of the clone\n    symbolClone.attr('class', 'plus-symbol-clone')\n      .attr('id', `plus-symbol-clone-${curI}`)\n      .select('circle')\n      .datum({fill: gappedColorScale(layerColorScales.weight,\n        flattenRange, cnn[layerIndexDict['output']][curI].bias, 0.35)})\n      .style('pointer-events', 'none')\n      .style('fill', '#E5E5E5');\n\n    symbolClone.attr('transform', `translate(${symbolX},\n      ${nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2})`);\n    \n    // Draw the outter link using only merged path\n    let outputEdgeD1 = linkGen({\n      source: {\n        x: intermediateX2 - moveX + plusSymbolRadius * 2,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      },\n      target: {\n        x: centerX + logitRadius,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      }\n    });\n\n    let outputEdgeD2 = linkGen({\n      source: {\n        x: centerX + logitRadius,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      },\n      target: {\n        x: softmaxX,\n        y: nodeCoordinate[curLayerIndex][selectedI].y + nodeLength / 2\n      }\n    });\n\n    // There are ways to combine these two paths into one. However, the animation\n    // for merged path is not continuous, so we use two saperate paths here.\n\n    let outputEdge1 = logitLayerLower.append('path')\n      .attr('class', `logit-output-edge-${curI}`)\n      .attr('d', outputEdgeD1)\n      .style('fill', 'none')\n      .style('stroke', '#EAEAEA')\n      .style('stroke-width', '1.2');\n\n    let outputEdge2 = logitLayerLower.append('path')\n      .attr('class', `logit-output-edge-${curI}`)\n      .attr('d', outputEdgeD2)\n      .style('fill', 'none')\n      .style('stroke', '#EAEAEA')\n      .style('stroke-width', '1.2');\n    \n    let outputEdgeLength1 = outputEdge1.node().getTotalLength();\n    let outputEdgeLength2 = outputEdge2.node().getTotalLength();\n    let totalLength = outputEdgeLength1 + outputEdgeLength2;\n    let totalDuration = hasInitialized ? 500 : 800;\n    let opacityDuration = hasInitialized ? 400 : 600;\n\n    outputEdge1.attr('stroke-dasharray', outputEdgeLength1 + ' ' + outputEdgeLength1)\n      .attr('stroke-dashoffset', outputEdgeLength1);\n    \n    outputEdge2.attr('stroke-dasharray', outputEdgeLength2 + ' ' + outputEdgeLength2)\n      .attr('stroke-dashoffset', outputEdgeLength2);\n\n    outputEdge1.transition('softmax-output-edge')\n      .duration(outputEdgeLength1 / totalLength * totalDuration)\n      .attr('stroke-dashoffset', 0);\n\n    outputEdge2.transition('softmax-output-edge')\n      .delay(outputEdgeLength1 / totalLength * totalDuration)\n      .duration(outputEdgeLength2 / totalLength * totalDuration)\n      .attr('stroke-dashoffset', 0);\n    \n    // Draw the logit circle\n    curNodeGroup.append('circle')\n      .attr('class', 'logit-circle')\n      .attr('id', `logit-circle-${curI}`)\n      .attr('cx', centerX)\n      .attr('cy', nodeCoordinate[curLayerIndex - 1][curI].y + nodeLength / 2)\n      .attr('r', 7)\n      .style('fill', layerColorScales.logit(logitColorScale(logits[curI])))\n      .style('stroke', intermediateColor)\n      .style('cursor', 'crosshair')\n      .on('mouseover', () => logitCircleMouseOverHandler(curI))\n      .on('mouseleave', () => logitCircleMouseLeaveHandler(curI))\n      .on('click', () => { d3.event.stopPropagation() });\n    \n    // Show the element in the detailed view\n    softmaxDetailViewInfo.startAnimation = {\n      i: curI,\n      duration: opacityDuration,\n      // Always show the animation\n      hasInitialized: false\n    };\n    softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n    // Show the elements with animation    \n    curNodeGroup.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1);\n\n    if ((selectedI < 3 && curI == 9) || (selectedI >= 3 && curI == 0)) {\n      // Show the hover text\n      softmaxDetailAnnotation.select('.softmax-detail-hover-annotation')\n        .transition('softmax-edge')\n        .duration(opacityDuration)\n        .style('opacity', 1);\n    }\n\n    softmaxDetailAnnotation.select(`#logit-text-${curI}`)\n      .transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1);\n    \n    curEdgeGroup.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1)\n      .on('end', () => {\n        // Recursive animaiton\n        curIIndex ++;\n        if (curIIndex < underneathIs.length) {\n          linkData = [];\n          drawOneEdgeGroup();\n        } else {\n          hasInitialized = true;\n          softmaxDetailViewInfo.hasInitialized = true;\n          softmaxDetailViewStore.set(softmaxDetailViewInfo);\n        }\n      });\n    \n    symbolClone.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 0.2);\n  }\n\n  // Show the softmax detail view\n  let anchorElement = svg.select('.intermediate-layer')\n    .select('.layer-label').node();\n  let pos = getMidCoords(svg, anchorElement);\n  let wholeSvg = d3.select('#cnn-svg');\n  let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n  let detailViewTop = 100 + svgYMid - 192 / 2;\n\n  const detailview = document.getElementById('detailview');\n  detailview.style.top = `${detailViewTop}px`;\n  detailview.style.left = `${pos.left - 490 - 50}px`;\n  detailview.style.position = 'absolute';\n\n  softmaxDetailViewStore.set({\n    show: true,\n    logits: logits,\n    logitColors: logits.map(d => layerColorScales.logit(logitColorScale(d))),\n    selectedI: selectedI,\n    highlightI: -1,\n    outputName: classList[selectedI],\n    outputValue: cnn[layerIndexDict['output']][selectedI].output,\n    startAnimation: {i: -1, duration: 0, hasInitialized: hasInitialized}\n  })\n\n  drawOneEdgeGroup();\n\n  // Draw logit circle color scale\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: d3.extent(logits)[1] - d3.extent(logits)[0],\n    minMax: {min: d3.extent(logits)[0], max: d3.extent(logits)[1]},\n    group: logitLayer,\n    width: softmaxX - (intermediateX2 + plusSymbolRadius * 2 - moveX + 5),\n    gradientAppendingName: 'flatten-logit-gradient',\n    gradientGap: 0.1,\n    colorScale: layerColorScales.logit,\n    x: intermediateX2 + plusSymbolRadius * 2 - moveX + 5,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  // Draw logit layer label\n  let logitLabel = logitLayer.append('g')\n    .attr('class', 'layer-label')\n    .classed('hidden', detailedMode)\n    .attr('transform', () => {\n      let x = centerX;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    });\n\n  logitLabel.append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .style('font-weight', 800)\n    .text('logit');\n}\n\nconst removeLogitLayer = () => {\n  svg.select('.logit-layer').remove();\n  svg.select('.logit-layer-lower').remove();\n  svg.selectAll('.plus-symbol-clone').remove();\n\n  // Instead of removing the paths, we hide them, so it is faster to load in\n  // the future\n  svg.select('.underneath')\n    .selectAll('.logit-lower')\n    .style('opacity', 0);\n\n  softmaxDetailViewStore.set({\n      show: false,\n      logits: []\n  })\n}\n\nconst softmaxClicked = (arg) => {\n  let curLayerIndex = arg.curLayerIndex,\n    moveX = arg.moveX,\n    symbolX = arg.symbolX,\n    symbolY = arg.symbolY,\n    outputX = arg.outputX,\n    outputY = arg.outputY,\n    softmaxLeftMid = arg.softmaxLeftMid,\n    selectedI = arg.selectedI,\n    intermediateX1 = arg.intermediateX1,\n    intermediateX2 = arg.intermediateX2,\n    pixelWidth = arg.pixelWidth,\n    pixelHeight = arg.pixelHeight,\n    topY = arg.topY,\n    bottomY = arg.bottomY,\n    middleGap = arg.middleGap,\n    middleRectHeight = arg.middleRectHeight,\n    softmaxX = arg.softmaxX,\n    softmaxTextY = arg.softmaxTextY,\n    softmaxWidth = arg.softmaxWidth,\n    symbolGroup = arg.symbolGroup,\n    flattenRange = arg.flattenRange;\n\n  let duration = 600;\n  let centerX = softmaxLeftMid - moveX * 4 / 5;\n  d3.event.stopPropagation();\n\n  // Clean up the logit elemends before moving anything\n  if (isInSoftmax) {\n    allowsSoftmaxAnimationStore.set(false);\n    removeLogitLayer();\n  } else {\n    allowsSoftmaxAnimationStore.set(true);\n  }\n\n  // Move the overlay gradient\n  svg.select('.intermediate-layer-overlay')\n    .select('rect.overlay')\n    .transition('softmax')\n    .ease(d3.easeCubicInOut)\n    .duration(duration)\n    .attr('transform', `translate(${isInSoftmax ? 0 : -moveX}, ${0})`);\n\n  // Move the legends\n  svg.selectAll(`.intermediate-legend-${curLayerIndex - 1}`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  svg.select('.intermediate-layer')\n    .select(`.layer-label`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  svg.select('.intermediate-layer')\n    .select(`.layer-detailed-label`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  // Also move all layers on the left\n  for (let i = curLayerIndex - 1; i >= 0; i--) {\n    let curLayer = svg.select(`g#cnn-layer-group-${i}`);\n    let previousX = +curLayer.select('image').attr('x');\n    let newX = isInSoftmax ? previousX + moveX : previousX - moveX;\n    moveLayerX({\n      layerIndex: i,\n      targetX: newX,\n      disable: true,\n      delay: 0,\n      transitionName: 'softmax',\n      duration: duration\n    });\n  }\n\n  // Hide the sum up annotation\n  svg.select('.plus-annotation')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n\n  // Hide the softmax annotation\n  let softmaxAnnotation = svg.select('.softmax-annotation')\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n  \n  let softmaxDetailAnnotation = softmaxAnnotation.selectAll('.softmax-detail-annoataion')\n    .data([0])\n    .enter()\n    .append('g')\n    .attr('class', 'softmax-detail-annoataion');\n\n  // Remove the detailed annoatioan when quitting the detail view\n  if (isInSoftmax) {\n    softmaxAnnotation.selectAll('.softmax-detail-annoataion').remove();\n  }\n\n  softmaxAnnotation.select('.arrow-group')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0);\n\n  softmaxAnnotation.select('.annotation-text')\n    .style('cursor', 'help')\n    .style('pointer-events', 'all')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      document.querySelector(`#article-softmax`).scrollIntoView({ \n        behavior: 'smooth' \n      });\n    })\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .on('end', () => {\n      if (!isInSoftmax) {\n        // Add new annotation for the softmax button\n        let textX = softmaxX + softmaxWidth / 2;\n        let textY = softmaxTextY - 10;\n\n        if (selectedI === 0) {\n          textY = softmaxTextY + 70;\n        }\n\n        let text = softmaxDetailAnnotation.append('text')\n          .attr('x', textX)\n          .attr('y', textY)\n          .attr('class', 'annotation-text softmax-detail-text')\n          .style('dominant-baseline', 'baseline')\n          .style('text-anchor', 'middle')\n          .text('Normalize ');\n        \n        text.append('tspan') \n          .attr('dx', 1)\n          .style('fill', '#E56014')\n          .text('logits');\n        \n        text.append('tspan')\n          .attr('dx', 1)\n          .text(' into');\n\n        text.append('tspan')\n          .attr('x', textX)\n          .attr('dy', '1.1em')\n          .text('class probabilities');\n\n        if (selectedI === 0) {\n          drawArrow({\n            group: softmaxDetailAnnotation,\n            sx: softmaxX + softmaxWidth / 2 - 5,\n            sy: softmaxTextY + 44,\n            tx: softmaxX + softmaxWidth / 2,\n            ty: textY - 12,\n            dr: 50,\n            hFlip: true,\n            marker: 'marker-alt'\n          });\n        } else {\n          drawArrow({\n            group: softmaxDetailAnnotation,\n            sx: softmaxX + softmaxWidth / 2 - 5,\n            sy: softmaxTextY + 4,\n            tx: softmaxX + softmaxWidth / 2,\n            ty: symbolY - plusSymbolRadius - 4,\n            dr: 50,\n            hFlip: true,\n            marker: 'marker-alt'\n          });\n        }\n\n        // Add annotation for the logit layer label\n        textX = centerX + 45;\n        textY = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n        let arrowTX = centerX + 20;\n        let arrowTY = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n\n        softmaxDetailAnnotation.append('g')\n          .attr('class', 'layer-detailed-label')\n          .attr('transform', () => {\n            let x = centerX;\n            let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n            return `translate(${x}, ${y})`;\n          })\n          .classed('hidden', !detailedMode)\n          .append('text')\n          // .attr('x', centerX)\n          // .attr('y',  (svgPaddings.top + vSpaceAroundGap) / 2 - 6)\n          .style('opacity', 0.7)\n          .style('dominant-baseline', 'middle')\n          .style('font-size', '12px')\n          .style('font-weight', '800')\n          .append('tspan')\n          .attr('x', 0)\n          .text('logit')\n          .append('tspan')\n          .attr('x', 0)\n          .style('font-size', '8px')\n          .style('font-weight', 'normal')\n          .attr('dy', '1.5em')\n          .text('(10)');\n\n        softmaxDetailAnnotation.append('text')\n          .attr('class', 'annotation-text')\n          .attr('x', textX)\n          .attr('y', (svgPaddings.top + vSpaceAroundGap) / 2 + 3)\n          .style('text-anchor', 'start')\n          .text('Before')\n          .append('tspan')\n          .attr('x', textX)\n          .attr('dy', '1em')\n          .text('normalization')\n\n\n        drawArrow({\n          group: softmaxDetailAnnotation,\n          tx: arrowTX,\n          ty: arrowTY,\n          sx: textX - 6,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: false,\n          marker: 'marker-alt'\n        });\n\n        softmaxDetailAnnotation.append('text')\n          .attr('class', 'annotation-text')\n          .attr('x', nodeCoordinate[layerIndexDict['output']][0].x - 35)\n          .attr('y', (svgPaddings.top + vSpaceAroundGap) / 2 + 3)\n          .style('text-anchor', 'end')\n          .text('After')\n          .append('tspan')\n          .attr('x', nodeCoordinate[layerIndexDict['output']][0].x - 35)\n          .attr('dy', '1em')\n          .text('normalization')\n\n        drawArrow({\n          group: softmaxDetailAnnotation,\n          tx: nodeCoordinate[layerIndexDict['output']][0].x - 8,\n          ty: arrowTY,\n          sx: nodeCoordinate[layerIndexDict['output']][0].x - 27,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: true,\n          marker: 'marker-alt'\n        });\n\n        // Add annotation for the logit circle\n        for (let i = 0; i < 10; i++) {\n          softmaxDetailAnnotation.append('text')\n            .attr('x', centerX)\n            .attr('y', nodeCoordinate[curLayerIndex - 1][i].y + nodeLength / 2 + 8)\n            .attr('class', 'annotation-text softmax-detail-text')\n            .attr('id', `logit-text-${i}`)\n            .style('text-anchor', 'middle')\n            .style('dominant-baseline', 'hanging')\n            .style('opacity', 0)\n            .text(`${classList[i]}`);\n        }\n\n        let hoverTextGroup = softmaxDetailAnnotation.append('g')\n          .attr('class', 'softmax-detail-hover-annotation')\n          .style('opacity', 0);\n\n        textX = centerX + 50;\n        textY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 2;\n\n        if (selectedI < 3) {\n          textY = nodeCoordinate[curLayerIndex - 1][9].y + nodeLength / 2;\n        }\n\n        // Add annotation to prompt user to check the logit value\n        let hoverText = hoverTextGroup.append('text')\n          .attr('x', textX)\n          .attr('y', textY)\n          .attr('class', 'annotation-text softmax-detail-text softmax-hover-text')\n          .style('text-anchor', 'start')\n          .style('dominant-baseline', 'baseline')\n          .append('tspan')\n          .style('font-weight', 700)\n          .style('dominant-baseline', 'baseline')\n          .text(`Hover over `)\n          .append('tspan')\n          .style('font-weight', 400)\n          .style('dominant-baseline', 'baseline')\n          .text('to see');\n        \n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('x', textX)\n          .attr('dy', '1em')\n          .text('its ');\n\n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('dx', 1)\n          .style('fill', '#E56014')\n          .text('logit');\n        \n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('dx', 1)\n          .text(' value');\n        \n        drawArrow({\n          group: hoverTextGroup,\n          tx: centerX + 15,\n          ty: textY,\n          sx: textX - 8,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: false\n        });\n      }\n    })\n\n  // Hide the annotation\n  svg.select('.flatten-annotation')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n\n  // Move the left part of faltten layer elements\n  let flattenLeftPart = svg.select('.flatten-layer-left');\n  flattenLeftPart.transition('softmax')\n    .duration(duration)\n    .ease(d3.easeCubicInOut)\n    .attr('transform', `translate(${isInSoftmax ? 0 : -moveX}, ${0})`)\n    .on('end', () => {\n      // Add the logit layer\n      if (!isInSoftmax) {\n        let logitArg = {\n          curLayerIndex: curLayerIndex,\n          moveX: moveX,\n          softmaxLeftMid: softmaxLeftMid,\n          selectedI: selectedI,\n          intermediateX1: intermediateX1,\n          intermediateX2: intermediateX2,\n          pixelWidth: pixelWidth,\n          pixelHeight: pixelHeight,\n          topY: topY,\n          bottomY: bottomY,\n          middleGap: middleGap,\n          middleRectHeight: middleRectHeight,\n          softmaxX: softmaxX,\n          symbolGroup: symbolGroup,\n          symbolX: symbolX,\n          flattenRange: flattenRange\n        };\n        drawLogitLayer(logitArg);\n      }\n\n      // Redraw the line from the plus symbol to the output node\n      if (!isInSoftmax) {\n        let newLine = flattenLeftPart.select('.edge-group')\n          .append('line')\n          .attr('class', 'symbol-output-line')\n          .attr('x1', symbolX)\n          .attr('y1', symbolY)\n          .attr('x2', outputX + moveX)\n          .attr('y2', outputY)\n          .style('stroke-width', 1.2)\n          .style('stroke', '#E5E5E5')\n          .style('opacity', 0);\n        \n        newLine.transition('softmax')\n          .delay(duration / 3)\n          .duration(duration * 2 / 3)\n          .style('opacity', 1);\n      } else {\n        flattenLeftPart.select('.symbol-output-line').remove();\n      }\n      \n      isInSoftmax = !isInSoftmax;\n      isInSoftmaxStore.set(isInSoftmax);\n    })\n}\n\n/**\n * Draw the flatten layer before output layer\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n */\nexport const drawFlatten = (curLayerIndex, d, i, width, height) => {\n  // Show the output legend\n  svg.selectAll('.output-legend')\n    .classed('hidden', false);\n\n  let pixelWidth = nodeLength / 2;\n  let pixelHeight = 1.1;\n  let totalLength = (2 * nodeLength +\n    5.5 * hSpaceAroundGap * gapRatio + pixelWidth);\n  let leftX = nodeCoordinate[curLayerIndex][0].x - totalLength;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 4) / 2;\n  const minimumGap = 20;\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the previous layer\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  // Disable the current layer (output layer)\n  moveLayerX({layerIndex: curLayerIndex,\n    targetX: nodeCoordinate[curLayerIndex][0].x, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n  \n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 10 * nodeLength) / 10;\n\n  // Different from other intermediate view, we push the left part dynamically\n  // 1. If there is enough space, we fix the first layer position and move all\n  // other layers;\n  // 2. If there is not enough space, we maintain the minimum gap and push all\n  // left layers to the left (could be out-of-screen)\n  if (leftGap > minimumGap) {\n    // Move the left layers\n    for (let i = 0; i < curLayerIndex - 1; i++) {\n      let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n      moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n    }\n  } else {\n    leftGap = minimumGap;\n    let curLeftBound = leftX - leftGap * 2 - nodeLength;\n    // Move the left layers\n    for (let i = curLayerIndex - 2; i >= 0; i--) {\n      moveLayerX({layerIndex: i, targetX: curLeftBound, disable: true, delay: 0});\n      curLeftBound = curLeftBound - leftGap - nodeLength;\n    }\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  let intermediateLayerOverlay = svg.append('g')\n    .attr('class', 'intermediate-layer-overlay');\n\n  intermediateLayerOverlay.append('rect')\n    .attr('class', 'overlay')\n    .style('fill', 'url(#overlay-gradient-left)')\n    .style('stroke', 'none')\n    .attr('width', leftX + svgPaddings.left - (leftGap * 2) + 3)\n    .attr('height', height + svgPaddings.top + svgPaddings.bottom)\n    .attr('x', -svgPaddings.left)\n    .attr('y', 0)\n    .style('opacity', 0);\n  \n  intermediateLayerOverlay.selectAll('rect.overlay')\n    .transition('move')\n    .duration(800)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n\n  // Add the intermediate layer\n  let intermediateLayer = svg.append('g')\n    .attr('class', 'intermediate-layer')\n    .style('opacity', 0);\n  \n  let intermediateX1 = leftX + nodeLength + intermediateGap;\n  let intermediateX2 = intermediateX1 + intermediateGap + pixelWidth;\n  let range = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n  let colorScale = layerColorScales.conv;\n  let flattenLength = cnn.flatten.length / cnn[1].length;\n  let linkData = [];\n\n  let flattenLayer = intermediateLayer.append('g')\n    .attr('class', 'flatten-layer');\n  \n  let flattenLayerLeftPart = flattenLayer.append('g')\n    .attr('class', 'flatten-layer-left');\n  \n  let topY = nodeCoordinate[curLayerIndex - 1][0].y;\n  let bottomY = nodeCoordinate[curLayerIndex - 1][9].y + nodeLength -\n        flattenLength * pixelHeight;\n  \n  // Compute the pre-layer gap\n  let preLayerDimension = cnn[curLayerIndex - 1][0].output.length;\n  let preLayerGap = nodeLength / (2 * preLayerDimension);\n\n  // Compute bounding box length\n  let boundingBoxLength = nodeLength / preLayerDimension;\n\n  // Compute the weight color scale\n  let flattenExtent = d3.extent(cnn.flatten.slice(flattenLength)\n    .map(d => d.outputLinks[i].weight)\n    .concat(cnn.flatten.slice(9 * flattenLength, 10 * flattenLength)\n      .map(d => d.outputLinks[i].weight)));\n\n  let flattenRange = 2 * (Math.round(\n    Math.max(...flattenExtent.map(Math.abs)) * 1000) / 1000);\n\n  let flattenMouseOverHandler = (d) => {\n    let index = d.index;\n    // Screenshot\n    // console.log(index);\n\n    // Update the hover info UI\n    if (d.weight === undefined) {\n      hoverInfo = {\n        show: true,\n        text: `Pixel value: ${formater(flattenFactoredFDict[index])}`\n      };\n    } else {\n      hoverInfo = {\n        show: true,\n        text: `Weight: ${formater(d.weight)}`\n      };\n    }\n    hoverInfoStore.set(hoverInfo);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}`)\n      .raise()\n      .style('stroke', intermediateColor)\n      .style('stroke-width', 1);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}-output`)\n      .raise()\n      .style('stroke-width', 1)\n      .style('stroke', da => gappedColorScale(layerColorScales.weight,\n        flattenRange, da.weight, 0.1));\n\n    flattenLayerLeftPart.select(`#bounding-${index}`)\n      .raise()\n      .style('opacity', 1);\n  }\n\n  let flattenMouseLeaveHandler = (d) => {\n    let index = d.index;\n\n    // screenshot\n    // if (index === 32) {return;}\n\n    // Update the hover info UI\n    if (d.weight === undefined) {\n      hoverInfo = {\n        show: false,\n        text: `Pixel value: ${formater(flattenFactoredFDict[index])}`\n      };\n    } else {\n      hoverInfo = {\n        show: false,\n        text: `Weight: ${formater(d.weight)}`\n      };\n    }\n    hoverInfoStore.set(hoverInfo);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}`)\n      .style('stroke-width', 0.6)\n      .style('stroke', '#E5E5E5')\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}-output`)\n      .style('stroke-width', 0.6)\n      .style('stroke', da => gappedColorScale(layerColorScales.weight,\n        flattenRange, da.weight, 0.35));\n\n    flattenLayerLeftPart.select(`#bounding-${index}`)\n      .raise()\n      .style('opacity', 0);\n  }\n\n  flattenFactoredFDict = {};\n  for (let f = 0; f < flattenLength; f++) {\n    let loopFactors = [0, 9];\n    loopFactors.forEach(l => {\n      let factoredF = f + l * flattenLength;\n      flattenFactoredFDict[factoredF] = cnn.flatten[factoredF].output;\n      flattenLayerLeftPart.append('rect')\n        .attr('x', intermediateX1)\n        .attr('y', l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight)\n        .attr('width', pixelWidth)\n        .attr('height', pixelHeight)\n        .style('cursor', 'crosshair')\n        .style('fill', colorScale((cnn.flatten[factoredF].output + range / 2) / range))\n        .on('mouseover', () => flattenMouseOverHandler({index: factoredF}))\n        .on('mouseleave', () => flattenMouseLeaveHandler({index: factoredF}))\n        .on('click', () => { d3.event.stopPropagation() });\n\n      // Flatten -> output\n      linkData.push({\n        source: {x: intermediateX1 + pixelWidth + 3,\n          y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n        target: {x: intermediateX2,\n          //nodeCoordinate[curLayerIndex][i].x - nodeLength,\n          y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2},\n        index: factoredF,\n        weight: cnn.flatten[factoredF].outputLinks[i].weight,\n        name: `flatten-${factoredF}-output`,\n        color: gappedColorScale(layerColorScales.weight,\n          flattenRange, cnn.flatten[factoredF].outputLinks[i].weight, 0.35),\n        width: 0.6,\n        opacity: 1,\n        class: `flatten-output`\n      });\n\n      // Pre-layer -> flatten\n      let row = Math.floor(f / preLayerDimension);\n      linkData.push({\n        target: {x: intermediateX1 - 3,\n          y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n        source: {x: leftX + nodeLength + 3,\n          y: nodeCoordinate[curLayerIndex - 1][l].y + (2 * row + 1) * preLayerGap},\n        index: factoredF,\n        name: `flatten-${factoredF}`,\n        color: '#E5E5E5',\n        // color: gappedColorScale(layerColorScales.conv,\n        //   2 * Math.max(Math.abs(cnnLayerMinMax[10].max), Math.abs(cnnLayerMinMax[10].min)),\n        //   cnn.flatten[factoredF].output, 0.2),\n        width: 0.6,\n        opacity: 1,\n        class: `flatten`\n      });\n\n      // Add original pixel bounding box\n      let loc = cnn.flatten[factoredF].inputLinks[0].weight;\n      flattenLayerLeftPart.append('rect')\n        .attr('id', `bounding-${factoredF}`)\n        .attr('class', 'flatten-bounding')\n        .attr('x', leftX + loc[1] * boundingBoxLength)\n        .attr('y', nodeCoordinate[curLayerIndex - 1][l].y + loc[0] * boundingBoxLength)\n        .attr('width', boundingBoxLength)\n        .attr('height', boundingBoxLength)\n        .style('fill', 'none')\n        .style('stroke', intermediateColor)\n        .style('stroke-length', '0.5')\n        .style('pointer-events', 'all')\n        .style('cursor', 'crosshair')\n        .style('opacity', 0)\n        .on('mouseover', () => flattenMouseOverHandler({index: factoredF}))\n        .on('mouseleave', () => flattenMouseLeaveHandler({index: factoredF}))\n        .on('click', () => {d3.event.stopPropagation()});\n    }) \n  }\n  \n  // Use abstract symbol to represent the flatten nodes in between (between\n  // the first and the last nodes)\n  // Compute the average value of input node and weights\n  let meanValues = [];\n  for (let n = 1; n < cnn[curLayerIndex - 1].length - 1; n++) {\n    /*\n    let meanOutput = d3.mean(cnn.flatten.slice(flattenLength * n,\n      flattenLength * (n + 1)).map(d => d.output));\n    let meanWeight= d3.mean(cnn.flatten.slice(flattenLength * n,\n      flattenLength * (n + 1)).map(d => d.outputLinks[i].weight));\n    meanValues.push({index: n, output: meanOutput, weight: meanWeight});\n    */\n    meanValues.push({index: n});\n  }\n\n  // Compute the middle gap\n  let middleGap = 5;\n  let middleRectHeight = (10 * nodeLength + (10 - 1) * vSpaceAroundGap -\n    pixelHeight * flattenLength * 2 - 5 * (8 + 1)) / 8;\n\n  // Add middle nodes\n  meanValues.forEach((v, vi) => {\n    // Add a small rectangle\n    flattenLayerLeftPart.append('rect')\n      .attr('x', intermediateX1 + pixelWidth / 4)\n      .attr('y', topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n        middleRectHeight * vi)\n      .attr('width', pixelWidth / 2)\n      .attr('height', middleRectHeight)\n      // .style('fill', colorScale((v.output + range / 2) / range));\n      .style('fill', '#E5E5E5');\n    \n    // Add a triangle next to the input node\n    flattenLayerLeftPart.append('polyline')\n      .attr('points',\n        `${leftX + nodeLength + 3}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y},\n        ${leftX + nodeLength + 10}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength / 2},\n        ${leftX + nodeLength + 3}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength}`)\n      .style('fill', '#E5E5E5')\n      .style('opacity', 1);\n    \n    // Input -> flatten\n    linkData.push({\n      source: {x: leftX + nodeLength + 10,\n        y: nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength / 2},\n      target: {x: intermediateX1 - 3,\n        y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n          middleRectHeight * (vi + 0.5)},\n      index: -1,\n      width: 1,\n      opacity: 1,\n      name: `flatten-abstract-${v.index}`,\n      color: '#E5E5E5',\n      class: `flatten-abstract`\n    });\n\n    // Flatten -> output\n    linkData.push({\n      source: {x: intermediateX1 + pixelWidth + 3,\n      y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n        middleRectHeight * (vi + 0.5)},\n      target: {x: intermediateX2,\n      y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2},\n      index: -1,\n      name: `flatten-abstract-${v.index}-output`,\n      // color: gappedColorScale(layerColorScales.weight, flattenRange,\n      //   v.weight, 0.35),\n      color: '#E5E5E5',\n      weight: v.weight,\n      width: 1,\n      opacity: 1,\n      class: `flatten-abstract-output`\n    });\n  })\n\n  // Draw the plus operation symbol\n  let symbolX = intermediateX2 + plusSymbolRadius;\n  let symbolY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2;\n  let symbolRectHeight = 1;\n  let symbolGroup = flattenLayerLeftPart.append('g')\n    .attr('class', 'plus-symbol')\n    .attr('transform', `translate(${symbolX}, ${symbolY})`);\n  \n  symbolGroup.append('rect')\n    .attr('x', -plusSymbolRadius)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', plusSymbolRadius * 2)\n    .attr('height', plusSymbolRadius * 2)\n    .attr('rx', 3)\n    .attr('ry', 3)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor);\n  \n  symbolGroup.append('rect')\n    .attr('x', -(plusSymbolRadius - 3))\n    .attr('y', -symbolRectHeight / 2)\n    .attr('width', 2 * (plusSymbolRadius - 3))\n    .attr('height', symbolRectHeight)\n    .style('fill', intermediateColor);\n\n  symbolGroup.append('rect')\n    .attr('x', -symbolRectHeight / 2)\n    .attr('y', -(plusSymbolRadius - 3))\n    .attr('width', symbolRectHeight)\n    .attr('height', 2 * (plusSymbolRadius - 3))\n    .style('fill', intermediateColor);\n\n  // Place the bias rectangle below the plus sign if user clicks the first\n  // conv node (no need now, since we added annotaiton for softmax to make it\n  // look better aligned)\n  // Add bias symbol to the plus symbol\n  symbolGroup.append('circle')\n    .attr('cx', 0)\n    .attr('cy', -nodeLength / 2 - 0.5 * kernelRectLength)\n    .attr('r', kernelRectLength * 1.5)\n    .style('stroke', intermediateColor)\n    .style('cursor', 'crosshair')\n    .style('fill', gappedColorScale(layerColorScales.weight,\n        flattenRange, d.bias, 0.35))\n    .on('mouseover', () => {\n      hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n    })\n    .on('mouseleave', () => {\n      hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n    })\n    .on('click', () => { d3.event.stopPropagation(); });\n  \n  // Link from bias to the plus symbol\n  symbolGroup.append('path')\n    .attr('d', linkGen({\n      source: { x: 0, y: 0 },\n      target: { x: 0, y: -nodeLength / 2 - 0.5 * kernelRectLength }\n    }))\n    .attr('id', 'bias-plus')\n    .attr('stroke-width', 1.2)\n    .attr('stroke', '#E5E5E5')\n    .lower();\n\n  // Link from the plus symbol to the output\n  linkData.push({\n    source: getOutputKnot({x: intermediateX2 + 2 * plusSymbolRadius - nodeLength,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: nodeCoordinate[curLayerIndex][i].x - 3,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `symbol-output`,\n    width: 1.2,\n    color: '#E5E5E5'\n  });\n\n  // Draw softmax operation symbol\n  let softmaxWidth = 55;\n  let emptySpace = ((totalLength - 2 * nodeLength - 2 * intermediateGap)\n    - softmaxWidth) / 2;\n  let symbolEndX = intermediateX2 + plusSymbolRadius * 2;\n  let softmaxX = emptySpace + symbolEndX;\n  let softmaxLeftMid = emptySpace / 2 + symbolEndX;\n  let softmaxTextY = nodeCoordinate[curLayerIndex][i].y - 2 * kernelRectLength - 6;\n  let moveX = (intermediateX2 - (intermediateX1 + pixelWidth + 3)) * 2 / 3;\n\n  let softmaxArg = {\n    curLayerIndex: curLayerIndex,\n    moveX: moveX,\n    symbolX: symbolX,\n    symbolY: symbolY,\n    outputX: nodeCoordinate[curLayerIndex][i].x,\n    outputY: symbolY,\n    softmaxLeftMid: softmaxLeftMid,\n    selectedI: i,\n    intermediateX1: intermediateX1,\n    intermediateX2: intermediateX2,\n    pixelWidth: pixelWidth,\n    pixelHeight: pixelHeight,\n    topY: topY,\n    bottomY: bottomY,\n    middleGap: middleGap,\n    middleRectHeight: middleRectHeight,\n    softmaxX: softmaxX,\n    softmaxWidth: softmaxWidth,\n    softmaxTextY: softmaxTextY,\n    symbolGroup: symbolGroup,\n    flattenRange: flattenRange\n  };\n\n  let softmaxSymbol = intermediateLayer.append('g')\n    .attr('class', 'softmax-symbol')\n    .attr('transform', `translate(${softmaxX}, ${symbolY})`)\n    .style('pointer-event', 'all')\n    .style('cursor', 'pointer')\n    .on('click', () => softmaxClicked(softmaxArg));\n  \n  softmaxSymbol.append('rect')\n    .attr('x', 0)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', softmaxWidth)\n    .attr('height', plusSymbolRadius * 2)\n    .attr('stroke', intermediateColor)\n    .attr('rx', 2)\n    .attr('ry', 2)\n    .attr('fill', '#FAFAFA');\n  \n  softmaxSymbol.append('text')\n    .attr('x', 5)\n    .attr('y', 1)\n    .style('dominant-baseline', 'middle')\n    .style('font-size', '12px')\n    .style('opacity', 0.5)\n    .text('softmax');\n\n  // Draw the layer label\n  let layerLabel = intermediateLayer.append('g')\n    .attr('class', 'layer-label')\n    .classed('hidden', detailedMode)\n    .attr('transform', () => {\n      let x = leftX + nodeLength + (4 * hSpaceAroundGap * gapRatio +\n        pixelWidth) / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .style('cursor', 'help')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      document.querySelector(`#article-flatten`).scrollIntoView({ \n        behavior: 'smooth' \n      });\n    });\n  \n  layerLabel.append('text')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .style('font-weight', 800)\n    .text('flatten');\n\n  let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n  let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    \n  let detailedLabelGroup = intermediateLayer.append('g')\n    .attr('transform', () => {\n      let x = leftX + nodeLength + (4 * hSpaceAroundGap * gapRatio + pixelWidth) / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n      return `translate(${x}, ${y})`;\n    })\n    .attr('class', 'layer-detailed-label')\n    .classed('hidden', !detailedMode)\n    .style('cursor', 'help')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      let anchor = document.querySelector(`#article-flatten`);\n      scroll.animateScroll(anchor);\n    });\n  \n  detailedLabelGroup.append('title')\n    .text('Move to article section');\n\n  let detailedLabelText = detailedLabelGroup.append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', '0.7')\n    .style('font-weight', 800)\n    .append('tspan')\n    .text('flatten');\n  \n  let dimension = cnn[layerIndexDict['max_pool_2']].length * \n    cnn[layerIndexDict['max_pool_2']][0].output.length *\n    cnn[layerIndexDict['max_pool_2']][0].output[0].length;\n\n  detailedLabelText.append('tspan')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .text(`(${dimension})`);\n\n  // Add edges between nodes\n  let edgeGroup = flattenLayerLeftPart.append('g')\n    .attr('class', 'edge-group')\n    .lower();\n  \n  edgeGroup.selectAll('path')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .attr('class', d => d.class)\n    .attr('id', d => `edge-${d.name}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', d => d.width)\n    .style('stroke', d => d.color === undefined ? intermediateColor : d.color)\n    .style('opacity', d => d.opacity);\n  \n  edgeGroup.selectAll('path.flatten-abstract-output')\n    .lower();\n\n  edgeGroup.selectAll('path.flatten,path.flatten-output')\n    .style('cursor', 'crosshair')\n    .style('pointer-events', 'all')\n    .on('mouseover', flattenMouseOverHandler)\n    .on('mouseleave', flattenMouseLeaveHandler)\n    .on('click', () => { d3.event.stopPropagation() });\n  \n  // Add legend\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: cnnLayerMinMax[10],\n    group: intermediateLayer,\n    width: intermediateGap + nodeLength - 3,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: flattenRange,\n    minMax: {min: flattenExtent[0], max: flattenExtent[1]},\n    group: intermediateLayer,\n    width: intermediateGap - 3 - 5,\n    gradientAppendingName: 'flatten-weight-gradient',\n    gradientGap: 0.1,\n    colorScale: layerColorScales.weight,\n    x: leftX + intermediateGap + nodeLength + pixelWidth + 3,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  // Add annotation for the sum operation\n  let plusAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'plus-annotation');\n  \n  // let textX = nodeCoordinate[curLayerIndex][i].x - 50;\n  let textX = intermediateX2;\n  let textY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n    kernelRectLength * 3;\n  let arrowSY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n    kernelRectLength * 2;\n  let arrowTY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 +\n    plusSymbolRadius;\n\n  if (i == 9) {\n    textY -= 110;\n    arrowSY -= 70;\n    arrowTY -= 18;\n  }\n\n  let plusText = plusAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n  \n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Add up all products');\n  \n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('(');\n\n  plusText.append('tspan')\n    .style('fill', '#66a3c8')\n    .style('dominant-baseline', 'hanging')\n    .text('element');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(' × ');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#b58946')\n    .text('weight');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(')');\n\n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('and then ');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#479d94')\n    .text('bias');\n  \n  drawArrow({\n    group: plusAnnotation,\n    sx: intermediateX2 - 2 * plusSymbolRadius - 3,\n    sy: arrowSY,\n    tx: intermediateX2 - 5,\n    ty: arrowTY,\n    dr: 30,\n    hFlip: i === 9,\n    marker: 'marker-alt'\n  });\n\n  // Add annotation for the bias\n  let biasTextY = nodeCoordinate[curLayerIndex][i].y;\n  biasTextY -= 2 * kernelRectLength + 4;\n  \n  flattenLayerLeftPart.append('text')\n    .attr('class', 'annotation-text')\n    .attr('x', intermediateX2 + plusSymbolRadius)\n    .attr('y', biasTextY)\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'baseline')\n    .text('Bias');\n  \n  // Add annotation for the softmax symbol\n  let softmaxAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'softmax-annotation');\n  \n  softmaxAnnotation.append('text')\n    .attr('x', softmaxX + softmaxWidth / 2)\n    .attr('y', softmaxTextY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'baseline')\n    .style('text-anchor', 'middle')\n    .style('font-weight', 700)\n    .text('Click ')\n    .append('tspan')\n    .attr('dx', 1)\n    .style('font-weight', 400)\n    .text('to learn more');\n\n  drawArrow({\n    group: softmaxAnnotation,\n    sx: softmaxX + softmaxWidth / 2 - 5,\n    sy: softmaxTextY + 4,\n    tx: softmaxX + softmaxWidth / 2,\n    ty: symbolY - plusSymbolRadius - 4,\n    dr: 50,\n    hFlip: true\n  });\n\n  // Add annotation for the flatten layer\n  let flattenAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'flatten-annotation');\n  \n  textX = leftX - 80;\n  textY = nodeCoordinate[curLayerIndex - 1][0].y;\n\n  let flattenText = flattenAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n\n  let tempTspan = flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 700)\n    .text('Hover over ');\n  \n  tempTspan.append('tspan')\n    .attr('dx', 1)\n    .style('font-weight', 400)\n    .style('dominant-baseline', 'hanging')\n    .text('matrix to');\n  \n  flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('see how it is flattened');\n  \n  flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('into a 1D array!');\n\n  drawArrow({\n    group: flattenAnnotation,\n    sx: textX + 45,\n    sy: textY + nodeLength * 0.4 + 12,\n    tx: leftX - 10,\n    ty: textY + nodeLength / 2,\n    dr: 80,\n    hFlip: true\n  });\n\n  // Add annotation to explain the middle images\n  textY = nodeCoordinate[curLayerIndex - 1][1].y;\n\n  let middleText = flattenAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n\n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Same flattening');\n  \n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('operation for');\n\n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('each neuron');\n\n  drawArrow({\n    group: flattenAnnotation,\n    sx: textX + 39,\n    sy: textY + 25,\n    tx: leftX - 10,\n    ty: textY + nodeLength / 2 - 2,\n    dr: 80,\n    hFlip: true,\n    marker: 'marker-alt'\n  });\n\n\n  // Add annotation for the output neuron\n  let outputAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'output-annotation');\n  \n  outputAnnotation.append('text')\n    .attr('x', nodeCoordinate[layerIndexDict['output']][i].x)\n    .attr('y', nodeCoordinate[layerIndexDict['output']][i].y + 10)\n    .attr('class', 'annotation-text')\n    .text(`(${d3.format('.4f')(cnn[layerIndexDict['output']][i].output)})`);\n\n\n  /* Prototype of using arc to represent the flatten layer (future)\n  let pie = d3.pie()\n    .padAngle(0)\n    .sort(null)\n    .value(d => d.output)\n    .startAngle(0)\n    .endAngle(-Math.PI);\n\n  let radius = 490 / 2;\n  let arc = d3.arc()\n    .innerRadius(radius - 20)\n    .outerRadius(radius);\n\n  let arcs = pie(cnn.flatten);\n  console.log(arcs);\n\n  let test = svg.append('g')\n    .attr('class', 'test')\n    .attr('transform', 'translate(500, 250)');\n\n  test.selectAll(\"path\")\n    .data(arcs)\n    .join(\"path\")\n      .attr('class', 'arc')\n      .attr(\"fill\", d => colorScale((d.value + range/2) / range))\n      .attr(\"d\", arc);\n  */\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}","<script>\n  // Svelte functions\n  import { onMount } from 'svelte';\n  import {\n    cnnStore, svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore,\n    nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n    needRedrawStore, cnnLayerMinMaxStore, detailedModeStore,\n    shouldIntermediateAnimateStore, isInSoftmaxStore, softmaxDetailViewStore,\n    hoverInfoStore, allowsSoftmaxAnimationStore, modalStore,\n    intermediateLayerPositionStore\n  } from '../stores.js';\n\n  // Svelte views\n  import ConvolutionView from '../detail-view/Convolutionview.svelte';\n  import ActivationView from '../detail-view/Activationview.svelte';\n  import PoolView from '../detail-view/Poolview.svelte';\n  import SoftmaxView from '../detail-view/Softmaxview.svelte';\n  import Modal from './Modal.svelte'\n  import Article from '../article/Article.svelte';\n\n  // Overview functions\n  import { loadTrainedModel, constructCNN } from '../utils/cnn-tf.js';\n  import { overviewConfig } from '../config.js';\n\n  import {\n    addOverlayRect, drawConv1, drawConv2, drawConv3, drawConv4\n  } from './intermediate-draw.js';\n\n  import {\n    moveLayerX, addOverlayGradient\n  } from './intermediate-utils.js';\n\n  import {\n    drawFlatten, softmaxDetailViewMouseOverHandler, softmaxDetailViewMouseLeaveHandler\n  } from './flatten-draw.js';\n\n  import {\n    drawOutput, drawCNN, updateCNN, updateCNNLayerRanges, drawCustomImage\n  } from './overview-draw.js';\n\n\n  // View bindings\n  let overviewComponent;\n  let scaleLevelSet = new Set(['local', 'module', 'global']);\n  let selectedScaleLevel = 'local';\n  selectedScaleLevelStore.set(selectedScaleLevel);\n  let previousSelectedScaleLevel = selectedScaleLevel;\n  let wholeSvg = undefined;\n  let svg = undefined;\n\n  $: selectedScaleLevel, selectedScaleLevelChanged();\n\n  // Configs\n  const layerColorScales = overviewConfig.layerColorScales;\n  const nodeLength = overviewConfig.nodeLength;\n  const plusSymbolRadius = overviewConfig.plusSymbolRadius;\n  const numLayers = overviewConfig.numLayers;\n  const edgeOpacity = overviewConfig.edgeOpacity;\n  const edgeInitColor = overviewConfig.edgeInitColor;\n  const edgeHoverColor = overviewConfig.edgeHoverColor;\n  const edgeHoverOuting = overviewConfig.edgeHoverOuting;\n  const edgeStrokeWidth = overviewConfig.edgeStrokeWidth;\n  const intermediateColor = overviewConfig.intermediateColor;\n  const kernelRectLength = overviewConfig.kernelRectLength;\n  const svgPaddings = overviewConfig.svgPaddings;\n  const gapRatio = overviewConfig.gapRatio;\n  const overlayRectOffset = overviewConfig.overlayRectOffset;\n  const classLists = overviewConfig.classLists;\n\n  // Shared properties\n  let needRedraw = [undefined, undefined];\n  needRedrawStore.subscribe( value => {needRedraw = value;} );\n\n  let nodeCoordinate = undefined;\n  nodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\n  let cnnLayerRanges = undefined;\n  cnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\n  let cnnLayerMinMax = undefined;\n  cnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\n  let detailedMode = undefined;\n  detailedModeStore.subscribe( value => {detailedMode = value;} )\n\n  let shouldIntermediateAnimate = undefined;\n  shouldIntermediateAnimateStore.subscribe(value => {\n    shouldIntermediateAnimate = value;\n  })\n\n  let vSpaceAroundGap = undefined;\n  vSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\n  let hSpaceAroundGap = undefined;\n  hSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\n  let isInSoftmax = undefined;\n  isInSoftmaxStore.subscribe( value => {isInSoftmax = value;} )\n\n  let softmaxDetailViewInfo = undefined;\n  softmaxDetailViewStore.subscribe( value => {\n    softmaxDetailViewInfo = value;\n  } )\n\n  let modalInfo = undefined;\n  modalStore.subscribe( value => {modalInfo = value;} )\n\n  let hoverInfo = undefined;\n  hoverInfoStore.subscribe( value => {hoverInfo = value;} )\n\n  let intermediateLayerPosition = undefined;\n  intermediateLayerPositionStore.subscribe ( value => {intermediateLayerPosition = value;} )\n\n  let width = undefined;\n  let height = undefined;\n  let model = undefined;\n  let selectedNode = {layerName: '', index: -1, data: null};\n  let isInIntermediateView = false;\n  let isInActPoolDetailView = false;\n  let actPoolDetailViewNodeIndex = -1;\n  let actPoolDetailViewLayerIndex = -1;\n  let detailedViewNum = undefined;\n  let disableControl = false;\n\n  // Wait to load\n  let cnn = undefined;\n\n  let detailedViewAbsCoords = {\n    1 : [600, 270, 490, 290],\n    2: [500, 270, 490, 290],\n    3 : [700, 270, 490, 290],\n    4: [600, 270, 490, 290],\n    5: [650, 270, 490, 290],\n    6 : [775, 270, 490, 290],\n    7 : [100, 270, 490, 290],\n    8 : [60, 270, 490, 290],\n    9 : [200, 270, 490, 290],\n    10 : [300, 270, 490, 290],\n  }\n\n  const layerIndexDict = {\n    'input': 0,\n    'conv_1_1': 1,\n    'relu_1_1': 2,\n    'conv_1_2': 3,\n    'relu_1_2': 4,\n    'max_pool_1': 5,\n    'conv_2_1': 6,\n    'relu_2_1': 7,\n    'conv_2_2': 8,\n    'relu_2_2': 9,\n    'max_pool_2': 10,\n    'output': 11\n  }\n\n  const layerLegendDict = {\n    0: {local: 'input-legend', module: 'input-legend', global: 'input-legend'},\n    1: {local: 'local-legend-0-1', module: 'module-legend-0', global: 'global-legend'},\n    2: {local: 'local-legend-0-1', module: 'module-legend-0', global: 'global-legend'},\n    3: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\n    4: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\n    5: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\n    6: {local: 'local-legend-1-1', module: 'module-legend-1', global: 'global-legend'},\n    7: {local: 'local-legend-1-1', module: 'module-legend-1', global: 'global-legend'},\n    8: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\n    9: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\n    10: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\n    11: {local: 'output-legend', module: 'output-legend', global: 'output-legend'}\n  }\n\n  let imageOptions = [\n    {file: 'boat_1.jpeg', class: 'lifeboat'},\n    {file: 'bug_1.jpeg', class: 'ladybug'},\n    {file: 'pizza_1.jpeg', class: 'pizza'},\n    {file: 'pepper_1.jpeg', class: 'bell pepper'},\n    {file: 'bus_1.jpeg', class: 'bus'},\n    {file: 'koala_1.jpeg', class: 'koala'},\n    {file: 'espresso_1.jpeg', class: 'espresso'},\n    {file: 'panda_1.jpeg', class: 'red panda'},\n    {file: 'orange_1.jpeg', class: 'orange'},\n    {file: 'car_1.jpeg', class: 'sport car'}\n  ];\n  let selectedImage = imageOptions[6].file;\n\n  let nodeData;\n  let selectedNodeIndex = -1;\n  let isExitedFromDetailedView = true;\n  let isExitedFromCollapse = true;\n  let customImageURL = null;\n\n  // Helper functions\n  const selectedScaleLevelChanged = () => {\n    if (svg !== undefined) {\n      if (!scaleLevelSet.add(selectedScaleLevel)) {\n        console.error('Encounter unknown scale level!');\n      }\n\n      // Update nodes and legends\n      if (selectedScaleLevel != previousSelectedScaleLevel){\n        // We can simply redraw all nodes using the new color scale, or we can\n        // make it faster by only redraw certian nodes\n        let updatingLayerIndexDict = {\n          local: {\n            module: [1, 2, 8, 9, 10],\n            global: [1, 2, 3, 4, 5, 8, 9, 10]\n          },\n          module: {\n            local: [1, 2, 8, 9, 10],\n            global: [1, 2, 3, 4, 5, 8, 9, 10]\n          },\n          global: {\n            local: [1, 2, 3, 4, 5, 8, 9, 10],\n            module: [1, 2, 3, 4, 5]\n          }\n        };\n\n        let updatingLayerIndex = updatingLayerIndexDict[\n          previousSelectedScaleLevel][selectedScaleLevel];\n\n        updatingLayerIndex.forEach(l => {\n          let range = cnnLayerRanges[selectedScaleLevel][l];\n          svg.select(`#cnn-layer-group-${l}`)\n            .selectAll('.node-image')\n            .each((d, i, g) => drawOutput(d, i, g, range));\n        });\n \n        // Hide previous legend\n        svg.selectAll(`.${previousSelectedScaleLevel}-legend`)\n          .classed('hidden', true);\n\n        // Show selected legends\n        svg.selectAll(`.${selectedScaleLevel}-legend`)\n          .classed('hidden', !detailedMode);\n      }\n      previousSelectedScaleLevel = selectedScaleLevel;\n      selectedScaleLevelStore.set(selectedScaleLevel);\n    }\n  }\n\n  const intermediateNodeMouseOverHandler = (d, i, g) => {\n    if (detailedViewNum !== undefined) { return; }\n    svg.select(`rect#underneath-gateway-${d.index}`)\n      .style('opacity', 1);\n  }\n\n  const intermediateNodeMouseLeaveHandler = (d, i, g) => {\n    // screenshot\n    // return;\n    if (detailedViewNum !== undefined) { return; }\n    svg.select(`rect#underneath-gateway-${d.index}`)\n      .style('opacity', 0);\n  }\n\n  const intermediateNodeClicked = (d, i, g, selectedI, curLayerIndex) => {\n    d3.event.stopPropagation();\n    isExitedFromCollapse = false;\n    // Use this event to trigger the detailed view\n    if (detailedViewNum === d.index) {\n      // Setting this for testing purposes currently.\n      selectedNodeIndex = -1; \n      // User clicks this node again -> rewind\n      detailedViewNum = undefined;\n      svg.select(`rect#underneath-gateway-${d.index}`)\n        .style('opacity', 0);\n    } \n    // We need to show a new detailed view (two cases: if we need to close the\n    // old detailed view or not)\n    else {\n      // Setting this for testing purposes currently.\n      selectedNodeIndex = d.index;\n      let inputMatrix = d.output;\n      let kernelMatrix = d.outputLinks[selectedI].weight;\n      // let interMatrix = singleConv(inputMatrix, kernelMatrix);\n      let colorScale = layerColorScales.conv;\n\n      // Compute the color range\n      let rangePre = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n      let rangeCur = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n      let range = Math.max(rangePre, rangeCur);\n\n      // User triggers a different detailed view\n      if (detailedViewNum !== undefined) {\n        // Change the underneath highlight\n        svg.select(`rect#underneath-gateway-${detailedViewNum}`)\n          .style('opacity', 0);\n        svg.select(`rect#underneath-gateway-${d.index}`)\n          .style('opacity', 1);\n      }\n      \n      // Dynamically position the detail view\n      let wholeSvg = d3.select('#cnn-svg');\n      let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n      let svgWidth = +wholeSvg.style('width').replace('px', '');\n      let detailViewTop = 100 + svgYMid - 250 / 2;\n      let positionX = intermediateLayerPosition[Object.keys(layerIndexDict)[curLayerIndex]];\n\n      let posX = 0;\n      if (curLayerIndex > 6) {\n        posX = (positionX - svgPaddings.left) / 2;\n        posX = svgPaddings.left + posX - 486 / 2;\n      } else {\n        posX = (svgWidth + svgPaddings.right - positionX) / 2;\n        posX = positionX + posX - 486 / 2;\n      }\n\n      const detailview = document.getElementById('detailview');\n      detailview.style.top = `${detailViewTop}px`;\n      detailview.style.left = `${posX}px`;\n      detailview.style.position = 'absolute';\n\n      detailedViewNum = d.index;\n\n      // Send the currently used color range to detailed view\n      nodeData.colorRange = range;\n      nodeData.inputIsInputLayer = curLayerIndex <= 1;\n    }\n  }\n\n  // The order of the if/else statements in this function is very critical\n  const emptySpaceClicked = () => {\n    // If detail view -> rewind to intermediate view\n    if (detailedViewNum !== undefined) {\n          // Setting this for testing purposes currently.\n      selectedNodeIndex = -1; \n      // User clicks this node again -> rewind\n      svg.select(`rect#underneath-gateway-${detailedViewNum}`)\n        .style('opacity', 0);\n      detailedViewNum = undefined;\n    }\n\n    // If softmax view -> rewind to flatten layer view\n    else if (isInSoftmax) {\n      svg.select('.softmax-symbol')\n        .dispatch('click');\n    }\n\n    // If intermediate view -> rewind to overview\n    else if (isInIntermediateView) {\n      let curLayerIndex = layerIndexDict[selectedNode.layerName];\n      quitIntermediateView(curLayerIndex, selectedNode.domG, selectedNode.domI);\n      d3.select(selectedNode.domG[selectedNode.domI])\n        .dispatch('mouseleave');\n    }\n\n    // If pool/act detail view -> rewind to overview\n    else if (isInActPoolDetailView) {\n      quitActPoolDetailView();\n    }\n  }\n\n  const prepareToEnterIntermediateView = (d, g, i, curLayerIndex) => {\n    isInIntermediateView = true;\n    // Hide all legends\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\n      .classed('hidden', true);\n    svg.selectAll('.input-legend').classed('hidden', true);\n    svg.selectAll('.output-legend').classed('hidden', true);\n\n    // Hide the input annotation\n    svg.select('.input-annotation')\n      .classed('hidden', true);\n\n    // Highlight the previous layer and this node\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n      .selectAll('rect.bounding')\n      .style('stroke-width', 2);\n    \n    d3.select(g[i])\n      .select('rect.bounding')\n      .style('stroke-width', 2);\n    \n    // Disable control panel UI\n    // d3.select('#level-select').property('disabled', true);\n    // d3.selectAll('.image-container')\n    //   .style('cursor', 'not-allowed')\n    //   .on('mouseclick', () => {});\n    disableControl = true;\n    \n    // Allow infinite animation loop\n    shouldIntermediateAnimateStore.set(true);\n\n    // Highlight the labels\n    svg.selectAll(`g#layer-label-${curLayerIndex - 1},\n      g#layer-detailed-label-${curLayerIndex - 1},\n      g#layer-label-${curLayerIndex},\n      g#layer-detailed-label-${curLayerIndex}`)\n      .style('font-weight', '800');\n    \n    // Register a handler on the svg element so user can click empty space to quit\n    // the intermediate view\n    d3.select('#cnn-svg')\n      .on('click', emptySpaceClicked);\n  }\n\n  const quitActPoolDetailView = () => {\n    isInActPoolDetailView = false;\n    actPoolDetailViewNodeIndex = -1;\n\n    let layerIndex = layerIndexDict[selectedNode.layerName];\n    let nodeIndex = selectedNode.index;\n    svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n      .select('rect.bounding')\n      .classed('hidden', true);\n\n    selectedNode.data.inputLinks.forEach(link => {\n      let layerIndex = layerIndexDict[link.source.layerName];\n      let nodeIndex = link.source.index;\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', true);\n    })\n\n    // Clean up the underneath rects\n    svg.select('g.underneath')\n      .selectAll('rect')\n      .remove();\n\n    // Show all edges\n    let unimportantEdges = svg.select('g.edge-group')\n      .selectAll('.edge')\n      .filter(d => {\n        return d.targetLayerIndex !== actPoolDetailViewLayerIndex;\n      })\n      .style('visibility', null);\n    \n    // Recover control UI\n    disableControl = false;\n\n    // Show legends if in detailed mode\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\n      .classed('hidden', !detailedMode);\n    svg.selectAll('.input-legend').classed('hidden', !detailedMode);\n    svg.selectAll('.output-legend').classed('hidden', !detailedMode);\n\n    // Also dehighlight the edge\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n    edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n      .transition()\n      .ease(d3.easeCubicOut)\n      .duration(200)\n      .style('stroke', edgeInitColor)\n      .style('stroke-width', edgeStrokeWidth)\n      .style('opacity', edgeOpacity);\n\n    // Remove the overlay rect\n    svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation')\n      .transition('remove')\n      .duration(500)\n      .ease(d3.easeCubicInOut)\n      .style('opacity', 0)\n      .on('end', (d, i, g) => {\n        svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation').remove();\n        svg.selectAll('defs.overlay-gradient').remove();\n        svg.select('.input-annotation').classed('hidden', false);\n      });\n\n    // Turn the fade out nodes back\n    svg.select(`g#cnn-layer-group-${layerIndex}`)\n      .selectAll('g.node-group')\n      .each((sd, si, sg) => {\n        d3.select(sg[si])\n          .style('pointer-events', 'all');\n    });\n\n    svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n      .selectAll('g.node-group')\n      .each((sd, si, sg) => {\n        // Recover the old events\n        d3.select(sg[si])\n          .style('pointer-events', 'all')\n          .on('mouseover', nodeMouseOverHandler)\n          .on('mouseleave', nodeMouseLeaveHandler)\n          .on('click', nodeClickHandler);\n    });\n\n    // Deselect the node\n    selectedNode.layerName = '';\n    selectedNode.index = -1;\n    selectedNode.data = null;\n\n    actPoolDetailViewLayerIndex = -1;\n  }\n\n  const actPoolDetailViewPreNodeMouseOverHandler = (d, i, g) => {\n    // Highlight the edges\n    let layerIndex = layerIndexDict[d.layerName];\n    let nodeIndex = d.index;\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n    \n    edgeGroup.selectAll(`path.edge-${actPoolDetailViewLayerIndex}-${nodeIndex}`)\n      .raise()\n      .transition()\n      .ease(d3.easeCubicInOut)\n      .duration(400)\n      .style('stroke', edgeHoverColor)\n      .style('stroke-width', '1')\n      .style('opacity', 1);\n    \n    // Highlight its border\n    d3.select(g[i]).select('rect.bounding')\n      .classed('hidden', false);\n    \n    // Highlight node's pair\n    let associatedLayerIndex = layerIndex - 1;\n    if (layerIndex === actPoolDetailViewLayerIndex - 1) {\n      associatedLayerIndex = layerIndex + 1;\n    }\n\n    svg.select(`g#layer-${associatedLayerIndex}-node-${nodeIndex}`)\n      .select('rect.bounding')\n      .classed('hidden', false);\n  }\n\n  const actPoolDetailViewPreNodeMouseLeaveHandler = (d, i, g) => {\n    // De-highlight the edges\n    let layerIndex = layerIndexDict[d.layerName];\n    let nodeIndex = d.index;\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n\n    edgeGroup.selectAll(`path.edge-${actPoolDetailViewLayerIndex}-${nodeIndex}`)\n      .transition()\n      .ease(d3.easeCubicOut)\n      .duration(200)\n      .style('stroke', edgeInitColor)\n      .style('stroke-width', edgeStrokeWidth)\n      .style('opacity', edgeOpacity);\n    \n    // De-highlight its border\n    d3.select(g[i]).select('rect.bounding')\n      .classed('hidden', true);\n    \n    // De-highlight node's pair\n    let associatedLayerIndex = layerIndex - 1;\n    if (layerIndex === actPoolDetailViewLayerIndex - 1) {\n      associatedLayerIndex = layerIndex + 1;\n    }\n\n    svg.select(`g#layer-${associatedLayerIndex}-node-${nodeIndex}`)\n      .select('rect.bounding')\n      .classed('hidden', true);\n  }\n\n  const actPoolDetailViewPreNodeClickHandler = (d, i, g) => {\n    let layerIndex = layerIndexDict[d.layerName];\n    let nodeIndex = d.index;\n\n    // Click the pre-layer node in detail view has the same effect as clicking\n    // the cur-layer node, which is to open a new detail view window\n    svg.select(`g#layer-${layerIndex + 1}-node-${nodeIndex}`)\n      .node()\n      .dispatchEvent(new Event('click'));\n  }\n\n  const enterDetailView = (curLayerIndex, i) => {\n    isInActPoolDetailView = true;\n    actPoolDetailViewNodeIndex = i;\n    actPoolDetailViewLayerIndex = curLayerIndex;\n\n    // Dynamically position the detail view\n    let wholeSvg = d3.select('#cnn-svg');\n    let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n    let svgWidth = +wholeSvg.style('width').replace('px', '');\n    let detailViewTop = 100 + svgYMid - 260 / 2;\n\n    let posX = 0;\n    if (curLayerIndex > 5) {\n      posX = nodeCoordinate[curLayerIndex - 1][0].x + 50;\n      posX = posX / 2 - 500 / 2;\n    } else {\n      posX = (svgWidth - nodeCoordinate[curLayerIndex][0].x - nodeLength) / 2;\n      posX = nodeCoordinate[curLayerIndex][0].x + nodeLength + posX - 500 / 2;\n\n    }\n\n    const detailview = document.getElementById('detailview');\n    detailview.style.top = `${detailViewTop}px`;\n    detailview.style.left = `${posX}px`;\n    detailview.style.position = 'absolute';\n\n    // Hide all edges\n    let unimportantEdges = svg.select('g.edge-group')\n      .selectAll('.edge')\n      .filter(d => {\n        return d.targetLayerIndex !== curLayerIndex;\n      })\n      .style('visibility', 'hidden');\n    \n    // Disable UI\n    disableControl = true;\n    \n    // Hide input annotaitons\n    svg.select('.input-annotation')\n      .classed('hidden', true);\n\n    // Hide legends\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\n      .classed('hidden', true);\n    svg.selectAll('.input-legend').classed('hidden', true);\n    svg.selectAll('.output-legend').classed('hidden', true);\n    svg.select(`#${layerLegendDict[curLayerIndex][selectedScaleLevel]}`)\n      .classed('hidden', false);\n\n    // Add overlay rects\n    let leftX = nodeCoordinate[curLayerIndex - 1][i].x;\n    // +5 to cover the detailed mode long label\n    let rightStart = nodeCoordinate[curLayerIndex][i].x + nodeLength + 5;\n\n    // Compute the left and right overlay rect width\n    let rightWidth = width - rightStart - overlayRectOffset / 2;\n    let leftWidth = leftX - nodeCoordinate[0][0].x;\n\n    // The overlay rects should be symmetric\n    if (rightWidth > leftWidth) {\n      let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n        {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n      addOverlayGradient('overlay-gradient-right', stops);\n      \n      let leftEndOpacity = 0.85 + (0.95 - 0.85) * (leftWidth / rightWidth);\n      stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: leftEndOpacity},\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n      addOverlayGradient('overlay-gradient-left', stops);\n    } else {\n      let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n        {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n      addOverlayGradient('overlay-gradient-left', stops);\n\n      let rightEndOpacity = 0.85 + (0.95 - 0.85) * (rightWidth / leftWidth);\n      stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: rightEndOpacity}];\n      addOverlayGradient('overlay-gradient-right', stops);\n    }\n    \n    addOverlayRect('overlay-gradient-right',\n      rightStart + overlayRectOffset / 2 + 0.5,\n      0, rightWidth, height + svgPaddings.top);\n    \n    addOverlayRect('overlay-gradient-left',\n      nodeCoordinate[0][0].x - overlayRectOffset / 2,\n      0, leftWidth, height + svgPaddings.top);\n\n    svg.selectAll('rect.overlay')\n      .on('click', emptySpaceClicked);\n    \n    // Add underneath rectangles\n    let underGroup = svg.select('g.underneath');\n    let padding = 7;\n    for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n      underGroup.append('rect')\n        .attr('class', 'underneath-gateway')\n        .attr('id', `underneath-gateway-${n}`)\n        .attr('x', nodeCoordinate[curLayerIndex - 1][n].x - padding)\n        .attr('y', nodeCoordinate[curLayerIndex - 1][n].y - padding)\n        .attr('width', (2 * nodeLength + hSpaceAroundGap) + 2 * padding)\n        .attr('height', nodeLength + 2 * padding)\n        .attr('rx', 10)\n        .style('fill', 'rgba(160, 160, 160, 0.3)')\n        .style('opacity', 0);\n      \n      // Update the event functions for these two layers\n      svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n        .style('pointer-events', 'all')\n        .style('cursor', 'pointer')\n        .on('mouseover', actPoolDetailViewPreNodeMouseOverHandler)\n        .on('mouseleave', actPoolDetailViewPreNodeMouseLeaveHandler)\n        .on('click', actPoolDetailViewPreNodeClickHandler);\n    }\n    underGroup.lower();\n\n    // Highlight the selcted pair\n    underGroup.select(`#underneath-gateway-${i}`)\n      .style('opacity', 1);\n  }\n\n  const quitIntermediateView = (curLayerIndex, g, i) => {\n    // If it is the softmax detail view, quit that view first\n    if (isInSoftmax) {\n      svg.select('.logit-layer').remove();\n      svg.select('.logit-layer-lower').remove();\n      svg.selectAll('.plus-symbol-clone').remove();\n\n      // Instead of removing the paths, we hide them, so it is faster to load in\n      // the future\n      svg.select('.underneath')\n        .selectAll('.logit-lower')\n        .style('opacity', 0);\n\n      softmaxDetailViewStore.set({\n          show: false,\n          logits: []\n      })\n\n      allowsSoftmaxAnimationStore.set(false);\n    }\n    isInSoftmaxStore.set(false);\n    isInIntermediateView = false;\n\n    // Show the legend\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\n      .classed('hidden', !detailedMode);\n    svg.selectAll('.input-legend').classed('hidden', !detailedMode);\n    svg.selectAll('.output-legend').classed('hidden', !detailedMode);\n\n    // Recover control panel UI\n    disableControl = false;\n\n    // Recover the input layer node's event\n    for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n      svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n        .on('mouseover', nodeMouseOverHandler)\n        .on('mouseleave', nodeMouseLeaveHandler)\n        .on('click', nodeClickHandler);\n    }\n\n    // Clean up the underneath rects\n    svg.select('g.underneath')\n      .selectAll('rect')\n      .remove();\n    detailedViewNum = undefined;\n\n    // Highlight the previous layer and this node\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n      .selectAll('rect.bounding')\n      .style('stroke-width', 1);\n    \n    d3.select(g[i])\n      .select('rect.bounding')\n      .style('stroke-width', 1);\n\n    // Highlight the labels\n    svg.selectAll(`g#layer-label-${curLayerIndex - 1},\n      g#layer-detailed-label-${curLayerIndex - 1},\n      g#layer-label-${curLayerIndex},\n      g#layer-detailed-label-${curLayerIndex}`)\n      .style('font-weight', 'normal');\n\n    // Also unclick the node\n    // Record the current clicked node\n    selectedNode.layerName = '';\n    selectedNode.index = -1;\n    selectedNode.data = null;\n    isExitedFromCollapse = true;\n\n    // Remove the intermediate layer\n    let intermediateLayer = svg.select('g.intermediate-layer');\n\n    // Kill the infinite animation loop\n    shouldIntermediateAnimateStore.set(false);\n\n    intermediateLayer.transition('remove')\n      .duration(500)\n      .ease(d3.easeCubicInOut)\n      .style('opacity', 0)\n      .on('end', (d, i, g) => { d3.select(g[i]).remove()});\n    \n    // Remove the output node overlay mask\n    svg.selectAll('.overlay-group').remove();\n    \n    // Remove the overlay rect\n    svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation')\n      .transition('remove')\n      .duration(500)\n      .ease(d3.easeCubicInOut)\n      .style('opacity', 0)\n      .on('end', (d, i, g) => {\n        svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation').remove();\n        svg.selectAll('defs.overlay-gradient').remove();\n      });\n    \n    // Recover the layer if we have drdrawn it\n    if (needRedraw[0] !== undefined) {\n      let redrawRange = cnnLayerRanges[selectedScaleLevel][needRedraw[0]];\n      if (needRedraw[1] !== undefined) {\n        svg.select(`g#layer-${needRedraw[0]}-node-${needRedraw[1]}`)\n          .select('image.node-image')\n          .each((d, i, g) => drawOutput(d, i, g, redrawRange));\n      } else {\n        svg.select(`g#cnn-layer-group-${needRedraw[0]}`)\n          .selectAll('image.node-image')\n          .each((d, i, g) => drawOutput(d, i, g, redrawRange));\n      }\n    }\n    \n    // Move all layers to their original place\n    for (let i = 0; i < numLayers; i++) {\n      moveLayerX({layerIndex: i, targetX: nodeCoordinate[i][0].x,\n        disable:false, delay:500, opacity: 1});\n    }\n\n    moveLayerX({layerIndex: numLayers - 2,\n      targetX: nodeCoordinate[numLayers - 2][0].x, opacity: 1,\n      disable:false, delay:500, onEndFunc: () => {\n        // Show all edges on the last moving animation end\n        svg.select('g.edge-group')\n          .style('visibility', 'visible');\n\n        // Recover the input annotation\n        svg.select('.input-annotation')\n          .classed('hidden', false);\n      }});\n  }\n\n  const nodeClickHandler = (d, i, g) => {\n    d3.event.stopPropagation();\n    let nodeIndex = d.index;\n\n    // Record the current clicked node\n    selectedNode.layerName = d.layerName;\n    selectedNode.index = d.index;\n    selectedNode.data = d;\n    selectedNode.domI = i;\n    selectedNode.domG = g;\n\n    // Record data for detailed view.\n    if (d.type === 'conv' || d.type === 'relu' || d.type === 'pool') {\n      let data = [];\n      for (let j = 0; j < d.inputLinks.length; j++) {\n        data.push({\n          input: d.inputLinks[j].source.output,\n          kernel: d.inputLinks[j].weight,\n          output: d.inputLinks[j].dest.output,\n        })\n      }\n      let curLayerIndex = layerIndexDict[d.layerName];\n      data.colorRange = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n      data.isInputInputLayer = curLayerIndex <= 1;\n      nodeData = data;\n    }\n\n    let curLayerIndex = layerIndexDict[d.layerName];\n\n    if (d.type == 'relu' || d.type == 'pool') {\n      isExitedFromDetailedView = false;\n      if (!isInActPoolDetailView) {\n        // Enter the act pool detail view\n        enterDetailView(curLayerIndex, d.index);\n      } else {\n        if (d.index === actPoolDetailViewNodeIndex) {\n          // Quit the act pool detail view\n          quitActPoolDetailView();\n        } else {\n          // Switch the detail view input to the new clicked pair\n\n          // Remove the previous selection effect\n          svg.select(`g#layer-${curLayerIndex}-node-${actPoolDetailViewNodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', true);\n\n          svg.select(`g#layer-${curLayerIndex - 1}-node-${actPoolDetailViewNodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', true);\n          \n          let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n      \n          edgeGroup.selectAll(`path.edge-${curLayerIndex}-${actPoolDetailViewNodeIndex}`)\n            .transition()\n            .ease(d3.easeCubicOut)\n            .duration(200)\n            .style('stroke', edgeInitColor)\n            .style('stroke-width', edgeStrokeWidth)\n            .style('opacity', edgeOpacity);\n          \n          let underGroup = svg.select('g.underneath');\n          underGroup.select(`#underneath-gateway-${actPoolDetailViewNodeIndex}`)\n            .style('opacity', 0);\n        \n          // Add selection effect on the new selected pair\n          svg.select(`g#layer-${curLayerIndex}-node-${nodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', false);\n\n          svg.select(`g#layer-${curLayerIndex - 1}-node-${nodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', false);\n\n          edgeGroup.selectAll(`path.edge-${curLayerIndex}-${nodeIndex}`)\n            .raise()\n            .transition()\n            .ease(d3.easeCubicInOut)\n            .duration(400)\n            .style('stroke', edgeHoverColor)\n            .style('stroke-width', '1')\n            .style('opacity', 1);\n\n          underGroup.select(`#underneath-gateway-${nodeIndex}`)\n            .style('opacity', 1);\n\n          actPoolDetailViewNodeIndex = nodeIndex;\n        }\n      }\n    }\n\n    // Enter the second view (layer-view) when user clicks a conv node\n    if ((d.type === 'conv' || d.layerName === 'output') && !isInIntermediateView) {\n      prepareToEnterIntermediateView(d, g, nodeIndex, curLayerIndex);\n\n      if (d.layerName === 'conv_1_1') {\n        drawConv1(curLayerIndex, d, nodeIndex, width, height,\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n          intermediateNodeClicked);\n      }\n\n      else if (d.layerName === 'conv_1_2') {\n        drawConv2(curLayerIndex, d, nodeIndex, width, height,\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n          intermediateNodeClicked);\n      }\n\n      else if (d.layerName === 'conv_2_1') {\n        drawConv3(curLayerIndex, d, nodeIndex, width, height,\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n          intermediateNodeClicked);\n      }\n      \n      else if (d.layerName === 'conv_2_2') {\n        drawConv4(curLayerIndex, d, nodeIndex, width, height,\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n          intermediateNodeClicked);\n      }\n    \n      else if (d.layerName === 'output') {\n        drawFlatten(curLayerIndex, d, nodeIndex, width, height);\n      }\n    }\n    // Quit the layerview\n    else if ((d.type === 'conv' || d.layerName === 'output') && isInIntermediateView) {\n      quitIntermediateView(curLayerIndex, g, i);\n    }\n  }\n\n  const nodeMouseOverHandler = (d, i, g) => {\n    // if (isInIntermediateView || isInActPoolDetailView) { return; }\n    if (isInIntermediateView) { return; }\n\n    // Highlight the edges\n    let layerIndex = layerIndexDict[d.layerName];\n    let nodeIndex = d.index;\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n    \n    edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n      .raise()\n      .transition()\n      .ease(d3.easeCubicInOut)\n      .duration(400)\n      .style('stroke', edgeHoverColor)\n      .style('stroke-width', '1')\n      .style('opacity', 1);\n    \n    // Highlight its border\n    d3.select(g[i]).select('rect.bounding')\n      .classed('hidden', false);\n    \n    // Highlight source's border\n    if (d.inputLinks.length === 1) {\n      let link = d.inputLinks[0];\n      let layerIndex = layerIndexDict[link.source.layerName];\n      let nodeIndex = link.source.index;\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', false);\n    } else {\n      svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n        .selectAll('g.node-group')\n        .selectAll('rect.bounding')\n        .classed('hidden', false);\n    }\n\n    // Highlight the output text\n    if (d.layerName === 'output') {\n      d3.select(g[i])\n        .select('.output-text')\n        .style('opacity', 0.8)\n        .style('text-decoration', 'underline');\n    }\n\n    /* Use the following commented code if we have non-linear model\n    d.inputLinks.forEach(link => {\n      let layerIndex = layerIndexDict[link.source.layerName];\n      let nodeIndex = link.source.index;\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', false);\n    });\n    */\n  }\n\n  const nodeMouseLeaveHandler = (d, i, g) => {\n    // Screenshot\n    // return;\n\n    if (isInIntermediateView) { return; }\n    \n    // Keep the highlight if user has clicked\n    if (isInActPoolDetailView || (\n      d.layerName !== selectedNode.layerName ||\n      d.index !== selectedNode.index)){\n      let layerIndex = layerIndexDict[d.layerName];\n      let nodeIndex = d.index;\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n      \n      edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n        .transition()\n        .ease(d3.easeCubicOut)\n        .duration(200)\n        .style('stroke', edgeInitColor)\n        .style('stroke-width', edgeStrokeWidth)\n        .style('opacity', edgeOpacity);\n\n      d3.select(g[i]).select('rect.bounding').classed('hidden', true);\n\n      if (d.inputLinks.length === 1) {\n        let link = d.inputLinks[0];\n        let layerIndex = layerIndexDict[link.source.layerName];\n        let nodeIndex = link.source.index;\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n          .select('rect.bounding')\n          .classed('hidden', true);\n      } else {\n        svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n          .selectAll('g.node-group')\n          .selectAll('rect.bounding')\n          .classed('hidden', d => d.layerName !== selectedNode.layerName ||\n            d.index !== selectedNode.index);\n      }\n\n      // Dehighlight the output text\n      if (d.layerName === 'output') {\n        d3.select(g[i])\n          .select('.output-text')\n          .style('fill', 'black')\n          .style('opacity', 0.5)\n          .style('text-decoration', 'none');\n      }\n\n      /* Use the following commented code if we have non-linear model\n      d.inputLinks.forEach(link => {\n        let layerIndex = layerIndexDict[link.source.layerName];\n        let nodeIndex = link.source.index;\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n          .select('rect.bounding')\n          .classed('hidden', true);\n      });\n      */\n    }\n  }\n  let logits = [-4.28, 2.96, -0.38, 5.24, -7.56, -3.43, 8.63, 2.63, 6.30, 0.68];\n  let selectedI = 4;\n\n  onMount(async () => {\n    // Create SVG\n    wholeSvg = d3.select(overviewComponent)\n      .select('#cnn-svg');\n    svg = wholeSvg.append('g')\n      .attr('class', 'main-svg')\n      .attr('transform', `translate(${svgPaddings.left}, 0)`);\n    svgStore.set(svg);\n\n    width = Number(wholeSvg.style('width').replace('px', '')) -\n      svgPaddings.left - svgPaddings.right;\n    height = Number(wholeSvg.style('height').replace('px', '')) -\n      svgPaddings.top - svgPaddings.bottom;\n\n    let cnnGroup = svg.append('g')\n      .attr('class', 'cnn-group');\n    \n    let underGroup = svg.append('g')\n      .attr('class', 'underneath');\n\n    let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n    detailedViewAbsCoords = {\n      1 : [600, 100 + svgYMid - 220 / 2, 490, 290],\n      2: [500, 100 + svgYMid - 220 / 2, 490, 290],\n      3 : [700, 100 + svgYMid - 220 / 2, 490, 290],\n      4: [600, 100 + svgYMid - 220 / 2, 490, 290],\n      5: [650, 100 + svgYMid - 220 / 2, 490, 290],\n      6 : [850, 100 + svgYMid - 220 / 2, 490, 290],\n      7 : [100, 100 + svgYMid - 220 / 2, 490, 290],\n      8 : [60, 100 + svgYMid - 220 / 2, 490, 290],\n      9 : [200, 100 + svgYMid - 220 / 2, 490, 290],\n      10 : [300, 100 + svgYMid - 220 / 2, 490, 290],\n    }\n    \n    // Define global arrow marker end\n    svg.append(\"defs\")\n      .append(\"marker\")\n      .attr(\"id\", 'marker')\n      .attr(\"viewBox\", \"0 -5 10 10\")\n      .attr(\"refX\", 6)\n      .attr(\"refY\", 0)\n      .attr(\"markerWidth\", 6)\n      .attr(\"markerHeight\", 6)\n      .attr(\"orient\", \"auto\")\n      .append(\"path\")\n      .style('stroke-width', 1.2)\n      .style('fill', 'gray')\n      .style('stroke', 'gray')\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n    // Alternative arrow head style for non-interactive annotation\n    svg.append(\"defs\")\n      .append(\"marker\")\n      .attr(\"id\", 'marker-alt')\n      .attr(\"viewBox\", \"0 -5 10 10\")\n      .attr(\"refX\", 6)\n      .attr(\"refY\", 0)\n      .attr(\"markerWidth\", 6)\n      .attr(\"markerHeight\", 6)\n      .attr(\"orient\", \"auto\")\n      .append(\"path\")\n      .style('fill', 'none')\n      .style('stroke', 'gray')\n      .style('stroke-width', 2)\n      .attr(\"d\", \"M-5,-10L10,0L-5,10\");\n    \n    console.time('Construct cnn');\n    model = await loadTrainedModel('PUBLIC_URL/assets/data/model.json');\n    cnn = await constructCNN(`PUBLIC_URL/assets/img/${selectedImage}`, model);\n    console.timeEnd('Construct cnn');\n    cnnStore.set(cnn);\n\n    // Ignore the flatten layer for now\n    let flatten = cnn[cnn.length - 2];\n    cnn.splice(cnn.length - 2, 1);\n    cnn.flatten = flatten;\n    console.log(cnn);\n\n    updateCNNLayerRanges();\n\n    // Create and draw the CNN view\n    drawCNN(width, height, cnnGroup, nodeMouseOverHandler,\n      nodeMouseLeaveHandler, nodeClickHandler);\n  })\n\n  const detailedButtonClicked = () => {\n    detailedMode = !detailedMode;\n    detailedModeStore.set(detailedMode);\n\n    if (!isInIntermediateView){\n      // Show the legend\n      svg.selectAll(`.${selectedScaleLevel}-legend`)\n        .classed('hidden', !detailedMode);\n      \n      svg.selectAll('.input-legend').classed('hidden', !detailedMode);\n      svg.selectAll('.output-legend').classed('hidden', !detailedMode);\n    }\n    \n    // Switch the layer name\n    svg.selectAll('.layer-detailed-label')\n      .classed('hidden', !detailedMode);\n    \n    svg.selectAll('.layer-label')\n      .classed('hidden', detailedMode);\n  }\n\n  const imageOptionClicked = async (e) => {\n    let newImageName = d3.select(e.target).attr('data-imageName');\n\n    if (newImageName !== selectedImage) {\n      selectedImage = newImageName;\n\n      // Re-compute the CNN using the new input image\n      cnn = await constructCNN(`PUBLIC_URL/assets/img/${selectedImage}`, model);\n\n      // Ignore the flatten layer for now\n      let flatten = cnn[cnn.length - 2];\n      cnn.splice(cnn.length - 2, 1);\n      cnn.flatten = flatten;\n      cnnStore.set(cnn);\n\n      // Update all scales used in the CNN view\n      updateCNNLayerRanges();\n      updateCNN();\n    }\n  }\n\n  const customImageClicked = () => {\n\n    // Case 1: there is no custom image -> show the modal to get user input\n    if (customImageURL === null) {\n      modalInfo.show = true;\n      modalInfo.preImage = selectedImage;\n      modalStore.set(modalInfo);\n    }\n\n    // Case 2: there is an existing custom image, not the focus -> switch to this image\n    else if (selectedImage !== 'custom') {\n      let fakeEvent = {detail: {url: customImageURL}};\n      handleCustomImage(fakeEvent);\n    }\n\n    // Case 3: there is an existing custom image, and its the focus -> let user\n    // upload a new image\n    else {\n      modalInfo.show = true;\n      modalInfo.preImage = selectedImage;\n      modalStore.set(modalInfo);\n    }\n\n    if (selectedImage !== 'custom') {\n      selectedImage = 'custom';\n    }\n\n  }\n\n  const handleModalCanceled = (event) => {\n    // User cancels the modal without a successful image, so we restore the\n    // previous selected image as input\n    selectedImage = event.detail.preImage;\n  }\n\n  const handleCustomImage = async (event) => {\n    // User gives a valid image URL\n    customImageURL = event.detail.url;\n\n    // Re-compute the CNN using the new input image\n    cnn = await constructCNN(customImageURL, model);\n\n    // Ignore the flatten layer for now\n    let flatten = cnn[cnn.length - 2];\n    cnn.splice(cnn.length - 2, 1);\n    cnn.flatten = flatten;\n    cnnStore.set(cnn);\n\n    // Update the UI\n    let customImageSlot = d3.select(overviewComponent)\n      .select('.custom-image').node();\n    drawCustomImage(customImageSlot, cnn[0]);\n\n    // Update all scales used in the CNN view\n    updateCNNLayerRanges();\n    updateCNN();\n  }\n\n  function handleExitFromDetiledConvView(event) {\n    if (event.detail.text) {\n      detailedViewNum = undefined;\n      svg.select(`rect#underneath-gateway-${selectedNodeIndex}`)\n        .style('opacity', 0);\n      selectedNodeIndex = -1; \n    }\n  }\n\n  function handleExitFromDetiledPoolView(event) {\n    if (event.detail.text) {\n      quitActPoolDetailView();\n      isExitedFromDetailedView = true;\n    }\n  }\n\n  function handleExitFromDetiledActivationView(event) {\n    if (event.detail.text) {\n      quitActPoolDetailView();\n      isExitedFromDetailedView = true;\n    }\n  }\n\n  function handleExitFromDetiledSoftmaxView(event) {\n    softmaxDetailViewInfo.show = false;\n    softmaxDetailViewStore.set(softmaxDetailViewInfo);\n  }\n\n</script>\n\n<style>\n  .overview {\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n\n  .control-container {\n    padding: 5px 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n  }\n\n  .right-control {\n    display: flex;\n  }\n\n  .left-control {\n    display: flex;\n    align-items: center;\n  }\n\n  .control > .select > #level-select {\n    padding-left: 2em;\n    padding-right: 2em;\n  }\n\n  .cnn {\n    width: 100%;\n    padding: 0;\n    background: var(--light-gray);\n    display: flex;\n  }\n\n  svg {\n    margin: 0 auto;\n    min-height: 490px;\n    max-height: 700px;\n    height: calc(100vh - 100px);\n    width: 100vw;\n  }\n\n  .is-very-small {\n    font-size: 12px;\n  }\n\n  #detailed-button {\n    margin-right: 10px;\n    color: #dbdbdb;\n    transition: border-color 300ms ease-in-out, color 200ms ease-in-out;\n  }\n\n  #detailed-button.is-activated, #detailed-button.is-activated:hover {\n    color: #3273dc;\n    border-color: #3273dc;\n  }\n\n  #detailed-button:hover {\n    color: #b5b5b5;\n  }\n\n  #hover-label {\n    transition: opacity 300ms ease-in-out;\n    text-overflow: ellipsis;\n    pointer-events: none;\n    margin-left: 5px;\n  }\n\n  .image-container {\n    width: 40px;\n    height: 40px;\n    border-radius: 4px;\n    display: inline-block;\n    position: relative;\n    border: 2.5px solid #1E1E1E;\n    margin-right: 10px;\n    cursor: pointer;\n    pointer-events: all;\n    transition: border 300ms ease-in-out;\n  }\n\n  .image-container img {\n    object-fit: cover;\n    max-width: 100%;\n    max-height: 100%;\n    z-index: -1;\n    transition: opacity 300ms ease-in-out;\n  }\n\n  .image-container.inactive {\n    border: 2.5px solid rgb(220, 220, 220);\n  }\n\n  .image-container.inactive > img {\n    opacity: 0.3;\n  }\n\n  .image-container.inactive:hover > img {\n    opacity: 0.6;\n  }\n\n  .image-container.inactive.disabled {\n    border: 2.5px solid rgb(220, 220, 220);\n    cursor: not-allowed;\n  }\n\n  .image-container.inactive.disabled:hover {\n    border: 2.5px solid rgb(220, 220, 220);\n    cursor: not-allowed;\n  }\n\n  .image-container.inactive.disabled > img {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n\n  .image-container.inactive.disabled:hover > img {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n\n  .image-container.inactive > .edit-icon {\n    color: #BABABA;\n  }\n\n  .image-container.inactive:hover > .edit-icon {\n    color: #777777;\n  }\n\n  .image-container.inactive:hover {\n    border: 2.5px solid #1E1E1E;\n  }\n\n  .edit-icon {\n    position: absolute;\n    bottom: -6px;\n    right: -7px;\n    font-size: 7px;\n    color: #1E1E1E;\n    transition: color 300ms ease-in-out;\n  }\n\n  :global(canvas) {\n    image-rendering: crisp-edges;\n  }\n\n  :global(.layer-label), :global(.layer-detailed-label), :global(.layer-intermediate-label) {\n    font-size: 12px;\n    opacity: 0.8;\n    text-anchor: middle;\n  }\n\n  :global(.colorLegend) {\n    font-size: 10px;\n  }\n\n  :global(.legend) {\n    transition: opacity 400ms ease-in-out;\n  }\n\n  :global(.legend > rect) {\n    opacity: 1;\n  }\n\n  :global(.legend text), :global(.legend line), :global(.legend path) {\n    opacity: 0.7;\n  }\n\n  :global(.legend#output-legend > rect) {\n    opacity: 1;\n  }\n\n  :global(.hidden) {\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  :global(.very-strong) {\n    stroke-width: 3px;\n  }\n\n  :global(.bounding), :global(.edge), :global(.edge-group),\n  :global(foreignObject), :global(.bounding-flatten),\n  :global(.underneath-gateway), :global(.input-annotation) {\n    transition: opacity 300ms ease-in-out;\n  }\n\n  :global(rect.bounding) {\n    transition: stroke-width 800ms ease-in-out, opacity 300ms ease-in-out;\n  }\n\n  :global(.annotation-text) {\n    pointer-events: none;\n    font-size: 10px;\n    font-style: italic;\n    fill: gray;\n  }\n\n  /* Change the cursor style on the detailed view input and output matrices */\n  :global(rect.square) {\n    cursor: crosshair;\n  }\n\n  :global(.animation-control-button) {\n    font-family: FontAwesome;\n    opacity: 0.8;\n    cursor: pointer;\n  }\n\n</style>\n\n<div class=\"overview\"\n  bind:this={overviewComponent}>\n\n  <div class=\"control-container\">\n\n    <div class=\"left-control\">\n      {#each imageOptions as image, i}\n        <div class=\"image-container\"\n          on:click={disableControl ? () => {} : imageOptionClicked}\n          class:inactive={selectedImage !== image.file}\n          class:disabled={disableControl}\n          data-imageName={image.file}>\n          <img src=\"PUBLIC_URL/assets/img/{image.file}\"\n            alt=\"image option\"\n            title=\"{image.class}\"\n            data-imageName={image.file}/>\n        </div>\n      {/each}\n\n      <!-- The plus button -->\n        <div class=\"image-container\"\n          class:inactive={selectedImage !== 'custom'}\n          class:disabled={disableControl}\n          data-imageName={'custom'}\n          on:click={disableControl ? () => {} : customImageClicked}>\n\n          <img class=\"custom-image\"\n            src=\"PUBLIC_URL/assets/img/plus.svg\"\n            alt=\"plus button\"\n            title=\"Add new input image\"\n            data-imageName=\"custom\"/>\n\n          <span class=\"fa-stack edit-icon\"\n            class:hidden={customImageURL === null}>\n            <i class=\"fas fa-circle fa-stack-2x\"></i>\n            <i class=\"fas fa-pen fa-stack-1x fa-inverse\"></i>\n          </span>\n\n        </div>\n\n      <button class=\"button is-very-small is-link is-light\"\n        id=\"hover-label\"\n        style=\"opacity:{hoverInfo.show ? 1 : 0}\">\n        <span class=\"icon\" style=\"margin-right: 5px;\">\n          <i class=\"fas fa-crosshairs \"></i>\n        </span>\n        <span id=\"hover-label-text\">\n          {hoverInfo.text}\n        </span>\n      </button>\n    </div>\n\n    <div class=\"right-control\">\n\n      <button class=\"button is-very-small\"\n        id=\"detailed-button\"\n        disabled={disableControl}\n        class:is-activated={detailedMode}\n        on:click={detailedButtonClicked}>\n        <span class=\"icon\">\n          <i class=\"fas fa-eye\"></i>\n        </span>\n        <span id=\"hover-label-text\">\n          Show detail\n        </span>\n      </button>\n\n      <div class=\"control is-very-small has-icons-left\"\n        title=\"Change color scale range\">\n        <span class=\"icon is-left\">\n          <i class=\"fas fa-palette\"></i>\n        </span>\n\n        <div class=\"select\">\n          <select bind:value={selectedScaleLevel} id=\"level-select\"\n            disabled={disableControl}>\n            <option value=\"local\">Unit</option>\n            <option value=\"module\">Module</option>\n            <option value=\"global\">Global</option>\n          </select>\n        </div>\n      </div>\n\n    </div>\n    \n  </div>\n\n  <div class=\"cnn\">\n    <svg id=\"cnn-svg\"></svg>\n  </div>\n</div>\n\n<Article/>\n\n<div id='detailview'>\n  {#if selectedNode.data && selectedNode.data.type === 'conv' && selectedNodeIndex != -1}\n    <ConvolutionView on:message={handleExitFromDetiledConvView} input={nodeData[selectedNodeIndex].input} \n                      kernel={nodeData[selectedNodeIndex].kernel}\n                      dataRange={nodeData.colorRange}\n                      colorScale={nodeData.inputIsInputLayer ?\n                        layerColorScales.input[0] : layerColorScales.conv}\n                      isInputInputLayer={nodeData.inputIsInputLayer}\n                      isExited={isExitedFromCollapse}/>\n  {:else if selectedNode.data && selectedNode.data.type === 'relu'}\n    <ActivationView on:message={handleExitFromDetiledActivationView} input={nodeData[0].input} \n                    output={nodeData[0].output}\n                    dataRange={nodeData.colorRange}\n                    isExited={isExitedFromDetailedView}/>\n  {:else if selectedNode.data && selectedNode.data.type === 'pool'}\n    <PoolView on:message={handleExitFromDetiledPoolView} input={nodeData[0].input} \n              kernelLength={2}\n              dataRange={nodeData.colorRange}\n              isExited={isExitedFromDetailedView}/>\n  {:else if softmaxDetailViewInfo.show}\n    <SoftmaxView logits={softmaxDetailViewInfo.logits}\n                 logitColors={softmaxDetailViewInfo.logitColors}\n                 selectedI={softmaxDetailViewInfo.selectedI}\n                 highlightI={softmaxDetailViewInfo.highlightI}\n                 outputName={softmaxDetailViewInfo.outputName}\n                 outputValue={softmaxDetailViewInfo.outputValue}\n                 startAnimation={softmaxDetailViewInfo.startAnimation}\n                 on:xClicked={handleExitFromDetiledSoftmaxView}\n                 on:mouseOver={softmaxDetailViewMouseOverHandler}\n                 on:mouseLeave={softmaxDetailViewMouseLeaveHandler}/>\n  {/if}\n</div>\n\n<Modal on:xClicked={handleModalCanceled}\n  on:urlTyped={handleCustomImage}/>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","i","length","option","__value","selected","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","afterUpdate","after_update","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","subscribe","invalidate","subscriber","cnnStore","svgStore","undefined","vSpaceAroundGapStore","hSpaceAroundGapStore","nodeCoordinateStore","selectedScaleLevelStore","cnnLayerRangesStore","cnnLayerMinMaxStore","needRedrawStore","detailedModeStore","shouldIntermediateAnimateStore","isInSoftmaxStore","softmaxDetailViewStore","allowsSoftmaxAnimationStore","hoverInfoStore","modalStore","intermediateLayerPositionStore","init2DArray","height","width","array","row","matrixDot","mat1","mat2","console","assert","result","j","matrixSlice","mat","xs","xe","ys","ye","matrixMax","curMax","Infinity","singleConv","kernel","stride","padding","stepSize","curWindow","dot","singleMaxPooling","kernelWidth","array1d","f","v","array2d","w","generateOutputMappings","output","kernelLength","padded_input_size","dilation","outputMapping","h_out","w_out","h_kern","w_kern","h_im","w_im","compute_input_multiplies_with_weight","hoverH","hoverW","weight_dims","outputMappings","input_multiplies_with_weight","h_weight","w_weight","flat_input","getMatrixSliceFromInputHighlights","matrix","highlights","indices","reduce","total","Math","floor","getMatrixSliceFromOutputHighlights","getVisualizationSizeConstraint","imageLength","getDataRange","image","maxRow","max","apply","minRow","min","range","abs","gridData","constraint","xpos","ypos","column","round","col","x","y","grid_final","isKernelMath","dataRange","outputLength","colorScale","d3","interpolateRdBu","isInputLayer","dispatch","oldHighlight","oldData","redraw","selectAll","remove","constrainedSvgSize","enter","normalizedValue","on","toString","replace","gridFinal","legendFinal","kernelRange","kernelColorScale","interpolateBrBG","multiplicationSymbolPadding","columns","texts","normalizedValueWithGap","isPaused","isInputInputLayer","testInputMatrixSlice","interval","counter","testOutputMatrixSlice","inputHighlights","outputHighlights","startConvolution","clearInterval","setInterval","flat_animated","animatedH","animatedW","inputMatrixSlice","outputMatrixSlice","testImage","testOutput","testKernel","handleScroll","svgHeight","Number","scroll","SmoothScroll","offset","querySelector","animateScroll","isExited","outputFinal","log","gridInputMatrixSlice","gridOutputMatrixSlice","startRelu","gridImage","gridOutput","startMaxPool","createElementNS","softmaxViewComponent","logits","logitColors","selectedI","highlightI","outputName","outputValue","startAnimation","svg","formater","n","format","mouseOverHandler","g","curI","mouseLeaveHandler","formulaRightGroup","denominatorGroup","curX","curText","hasInitialized","curBBox","getBBox","denominatorGroupBBox","numeratorText","formulaLeftGroup","transition","duration","error","show","modalComponent","valiImg","files","inputValue","showLoading","usingURL","errorInfo","modalInfo","canvas","getContext","drawImage","getImageData","url","src","err","reader","FileReader","onload","readAsDataURL","preImage","crossOrigin","isOutput","isStrideValid","generateSquareArray","arrayDim","arr","inputSize","kernelSize","inputSizeWithPadding","strideNumberInput","getElementById","isInteger","className","includes","tag","firstScriptTag","getElementsByTagName","player","videoId","playerId","onPlayerReady","mute","window","YT","Player","events","onReady","startSecond","seekTo","playVideo","onYouTubeIframeAPIReady","dispatchEvent","Event","play","currentPlayer","nodeType","Node","layerName","bias","inputLinks","outputLinks","Link","source","dest","weight","constructCNN","async","inputImageFile","model","inputImageTensor","getInputImageArray","preTensor","tf","stack","outputs","layers","curTensor","squeeze","shape","transpose","allOutputs","cnn","inputLayer","inputShape","batchInputShape","inputImageArray","arraySync","curLayerIndex","layer","curLayerType","curLayerNodes","biases","val","weights","preNode","curLink","curLogit","logit","sort","realIndex","link","preNodeWidth","preNodeNum","preNodeIndex","preNodeRow","preNodeCol","curNodeRealIndex","constructCNNFromOutputs","imageDataTo3DTensor","imageData","normalize","imageArray","pixelIndex","channelIndex","curEntry","croppedArray","cropDimensions","startXIdx","startYIdx","networkInputSize","cropCentralSquare","tensor3d","imgFile","cssText","reject","canvasImage","inputImage","Image","resizeCanvas","resizeContext","resizeFactor","translate","scale","rotate","PI","imageWidth","imageHeight","onerror","overviewConfig","nodeLength","plusSymbolRadius","numLayers","edgeOpacity","edgeInitColor","edgeHoverColor","edgeHoverOuting","edgeStrokeWidth","intermediateColor","layerColorScales","interpolateGreys","conv","relu","pool","fc","interpolateOranges","svgPaddings","top","bottom","left","right","kernelRectLength","gapRatio","overlayRectOffset","classLists","getExtent","getOutputKnot","point","getInputKnot","gappedColorScale","gap","vSpaceAroundGap","hSpaceAroundGap","nodeCoordinate","selectedScaleLevel","cnnLayerRanges","cnnLayerMinMax","detailedMode","drawOutput","bufferCanvas","bufferContext","imageSingle","imageSingleArray","pixeIndex","color","rgb","largeCanvas","largeCanvasContext","putImageData","imageDataURL","toDataURL","drawOutputScore","delay","ease","easeCubicIn","getLegendGradient","gradientName","gradient","curProgress","curColor","drawCNN","cnnGroup","nodeMouseOverHandler","nodeMouseLeaveHandler","nodeClickHandler","leftAccuumulatedSpace","curLayer","layerGroup","nodeGroups","classed","outputRectScale","scaleLinear","domain","each","layerNames","dimension","detailedLabels","labels","legends","legendHeight","range1","range2","localLegendScale1","localLegendScale2","localLegendAxis1","axisBottom","tickFormat","tickValues","localLegendAxis2","localLegend1","localLegend2","module","moduleLegendScale","moduleLegendAxis","moduleLegend","global","globalLegendScale","globalLegendAxis","globalLegend","outputLegendAxis","outputLegend","inputScale","inputLegendAxis","inputLegend","drawLegends","linkGen","linkHorizontal","linkData","curTarget","inputNodeIndex","flattenDimension","curSource","curWeight","targetLayerIndex","targetNodeIndex","sourceNodeIndex","getLinkData","inputAnnotation","redChannel","updateCNN","easeCubicOut","updateCNNLayerRanges","cnnLayerRangesLocal","curRange","aggregatedExtent","acc","cur","cnnLayerRangesComponent","numOfComponent","curArray","maxRange","cnnLayerRangesGlobal","moveLayerX","arg","layerIndex","targetX","disable","opacity","specialIndex","onEndFunc","transitionName","easeCubicInOut","addOverlayGradient","gradientID","stops","group","drawIntermediateLayerLegend","minMax","isInput","gradientAppendingName","gradientGap","normalizedColor","leftValue","zeroValue","rightValue","totalRange","zeroLocation","leftMidValue","rightMidValue","legendScale","legendAxis","intermediateLegend","legendGroup","drawArrow","sx","sy","tx","ty","dr","hFlip","marker","isEndOfAnimation","needRedraw","shouldIntermediateAnimate","intermediateLayerPosition","startOutputAnimation","kernelGroup","tickTime1D","slidingAnimation","originX","originY","oldTick","newTick","animationButtonClicked","startIntermediateAnimation","kernelGroupInput","kernelGroupResult","originXResult","xResult","stopPropagation","animateEdge","interrupt","dashoffset","easeLinear","drawIntermediateLayer","leftX","rightX","rightStart","intermediateGap","intermediateNodeMouseOverHandler","intermediateNodeMouseLeaveHandler","intermediateNodeClicked","intermediateLayer","intermediateX1","intermediateX2","intermediateMinMax","kernelExtent","outputY","curNode","outputOverlayGroup","strideTime","raise","ni","inputMatrix","kernelMatrix","interMatrix","dataMatrix","drawIntermidiateImage","groupLayer","nodeIndex","interaction","newNode","datum","overlayGroup","createIntermediateNode","kernelRectX","weightText","f2","sep","concat","clone","aggregatedMinMax","symbolY","symbolGroup","edgeGroup","lower","kernelMinMax","drawIntermediateLayerAnnotation","sliderX","sliderY","arrowSX","arrowSY","sliderX2","sliderY2","arrowSX2","arrowSY2","dr2","arrowTX2","arrowTY2","isFirstConv","kernelAnnotation","slideText","slideText2","plusAnnotation","textX","textY","plusText","biasTextY","addUnderneathRect","underGroup","addOverlayRect","redrawLayerIfNeeded","rangePre","rangeCur","drawConv1","rightGap","finalMinMax","intermediateLayerAnnotation","drawConv2","drawConv3","leftEnd","leftGap","drawConv4","isInSoftmax","allowsSoftmaxAnimation","softmaxDetailViewInfo","hoverInfo","layerIndexDict","flattenFactoredFDict","moveLegend","moveX","restore","legend","previousLegendX","previousLegendY","previousTransform","logitCircleMouseOverHandler","logitLayer","logitLayerLower","logitCircleMouseLeaveHandler","softmaxDetailViewMouseOverHandler","softmaxDetailViewMouseLeaveHandler","softmaxClicked","symbolX","outputX","softmaxLeftMid","pixelWidth","pixelHeight","topY","bottomY","middleGap","middleRectHeight","softmaxX","softmaxTextY","softmaxWidth","flattenRange","centerX","previousX","softmaxAnnotation","softmaxDetailAnnotation","scrollIntoView","behavior","arrowTX","arrowTY","hoverTextGroup","hoverText","flattenLeftPart","tempClone","tempPlusSymbol","logitColorScale","extent","flattenLength","flatten","underneathIs","curIIndex","drawOneEdgeGroup","curEdgeGroup","factoredF","class","vi","curNodeGroup","symbolClone","outputEdgeD1","outputEdgeD2","outputEdge1","outputEdge2","outputEdgeLength1","getTotalLength","outputEdgeLength2","totalLength","totalDuration","opacityDuration","anchorElement","pos","elem","targetel","getScreenCTM","ownerSVGElement","createSVGPoint","bbox","matrixTransform","getMidCoords","detailViewTop","detailview","position","drawLogitLayer","drawFlatten","curLeftBound","intermediateLayerOverlay","flattenLayerLeftPart","preLayerDimension","preLayerGap","boundingBoxLength","flattenExtent","flattenMouseOverHandler","da","flattenMouseLeaveHandler","loc","meanValues","emptySpace","symbolEndX","softmaxArg","softmaxSymbol","detailedLabelGroup","detailedLabelText","flattenAnnotation","flattenText","middleText","file","colorRange","inputIsInputLayer","iterations","overviewComponent","scaleLevelSet","previousSelectedScaleLevel","wholeSvg","selectedNode","isInIntermediateView","isInActPoolDetailView","actPoolDetailViewNodeIndex","actPoolDetailViewLayerIndex","detailedViewNum","disableControl","conv_1_1","relu_1_1","conv_1_2","relu_1_2","max_pool_1","conv_2_1","relu_2_1","conv_2_2","relu_2_2","max_pool_2","layerLegendDict","0","1","2","3","4","5","6","7","8","9","10","11","nodeData","imageOptions","selectedImage","selectedNodeIndex","isExitedFromDetailedView","isExitedFromCollapse","customImageURL","svgYMid","svgWidth","positionX","posX","emptySpaceClicked","quitIntermediateView","domG","domI","quitActPoolDetailView","sd","si","sg","actPoolDetailViewPreNodeMouseOverHandler","associatedLayerIndex","actPoolDetailViewPreNodeMouseLeaveHandler","actPoolDetailViewPreNodeClickHandler","redrawRange","rightWidth","leftWidth","enterDetailView","prepareToEnterIntermediateView","modelFile","time","loadLayersModel","timeEnd","handleCustomImage","red","green","blue","drawCustomImage","newImageName","selected_option","body"],"mappings":"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"}